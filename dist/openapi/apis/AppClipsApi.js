"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppClipsGetInstanceFieldsAppClipDefaultExperiencesEnum = exports.AppClipsGetInstanceFieldsAppClipAdvancedExperiencesEnum = exports.AppClipsGetInstanceIncludeEnum = exports.AppClipsGetInstanceFieldsAppClipsEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedIncludeEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipDefaultExperienceLocalizationsEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipDefaultExperiencesEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppStoreVersionsEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipAppStoreReviewDetailsEnum = exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipsEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedIncludeEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperienceLocalizationsEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperienceImagesEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipsEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperiencesEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterStatusEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterPlaceStatusEnum = exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterActionEnum = exports.AppClipsApi = void 0;
const runtime = __importStar(require("../runtime"));
const models_1 = require("../models");
/**
 *
 */
class AppClipsApi extends runtime.BaseAPI {
    /**
     */
    appClipsAppClipAdvancedExperiencesGetToManyRelatedRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError("id", "Required parameter requestParameters.id was null or undefined when calling appClipsAppClipAdvancedExperiencesGetToManyRelated.");
            }
            const queryParameters = {};
            if (requestParameters.filterAction) {
                queryParameters["filter[action]"] = requestParameters.filterAction.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.filterPlaceStatus) {
                queryParameters["filter[placeStatus]"] = requestParameters.filterPlaceStatus.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.filterStatus) {
                queryParameters["filter[status]"] = requestParameters.filterStatus.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipAdvancedExperiences) {
                queryParameters["fields[appClipAdvancedExperiences]"] = requestParameters.fieldsAppClipAdvancedExperiences.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClips) {
                queryParameters["fields[appClips]"] = requestParameters.fieldsAppClips.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipAdvancedExperienceImages) {
                queryParameters["fields[appClipAdvancedExperienceImages]"] = requestParameters.fieldsAppClipAdvancedExperienceImages.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipAdvancedExperienceLocalizations) {
                queryParameters["fields[appClipAdvancedExperienceLocalizations]"] = requestParameters.fieldsAppClipAdvancedExperienceLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.limit !== undefined) {
                queryParameters["limit"] = requestParameters.limit;
            }
            if (requestParameters.limitLocalizations !== undefined) {
                queryParameters["limit[localizations]"] = requestParameters.limitLocalizations;
            }
            if (requestParameters.include) {
                queryParameters["include"] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("itc-bearer-token", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/v1/appClips/{id}/appClipAdvancedExperiences`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: "GET",
                headers: headerParameters,
                query: queryParameters
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.AppClipAdvancedExperiencesResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    appClipsAppClipAdvancedExperiencesGetToManyRelated(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.appClipsAppClipAdvancedExperiencesGetToManyRelatedRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    appClipsAppClipDefaultExperiencesGetToManyRelatedRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError("id", "Required parameter requestParameters.id was null or undefined when calling appClipsAppClipDefaultExperiencesGetToManyRelated.");
            }
            const queryParameters = {};
            if (requestParameters.existsReleaseWithAppStoreVersion !== undefined) {
                queryParameters["exists[releaseWithAppStoreVersion]"] = requestParameters.existsReleaseWithAppStoreVersion;
            }
            if (requestParameters.fieldsAppClips) {
                queryParameters["fields[appClips]"] = requestParameters.fieldsAppClips.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipAppStoreReviewDetails) {
                queryParameters["fields[appClipAppStoreReviewDetails]"] = requestParameters.fieldsAppClipAppStoreReviewDetails.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppStoreVersions) {
                queryParameters["fields[appStoreVersions]"] = requestParameters.fieldsAppStoreVersions.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipDefaultExperiences) {
                queryParameters["fields[appClipDefaultExperiences]"] = requestParameters.fieldsAppClipDefaultExperiences.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipDefaultExperienceLocalizations) {
                queryParameters["fields[appClipDefaultExperienceLocalizations]"] = requestParameters.fieldsAppClipDefaultExperienceLocalizations.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.limit !== undefined) {
                queryParameters["limit"] = requestParameters.limit;
            }
            if (requestParameters.limitAppClipDefaultExperienceLocalizations !== undefined) {
                queryParameters["limit[appClipDefaultExperienceLocalizations]"] = requestParameters.limitAppClipDefaultExperienceLocalizations;
            }
            if (requestParameters.include) {
                queryParameters["include"] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("itc-bearer-token", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/v1/appClips/{id}/appClipDefaultExperiences`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: "GET",
                headers: headerParameters,
                query: queryParameters
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.AppClipDefaultExperiencesResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    appClipsAppClipDefaultExperiencesGetToManyRelated(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.appClipsAppClipDefaultExperiencesGetToManyRelatedRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    appClipsGetInstanceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.id === null || requestParameters.id === undefined) {
                throw new runtime.RequiredError("id", "Required parameter requestParameters.id was null or undefined when calling appClipsGetInstance.");
            }
            const queryParameters = {};
            if (requestParameters.fieldsAppClips) {
                queryParameters["fields[appClips]"] = requestParameters.fieldsAppClips.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.include) {
                queryParameters["include"] = requestParameters.include.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipAdvancedExperiences) {
                queryParameters["fields[appClipAdvancedExperiences]"] = requestParameters.fieldsAppClipAdvancedExperiences.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.fieldsAppClipDefaultExperiences) {
                queryParameters["fields[appClipDefaultExperiences]"] = requestParameters.fieldsAppClipDefaultExperiences.join(runtime.COLLECTION_FORMATS["csv"]);
            }
            if (requestParameters.limitAppClipDefaultExperiences !== undefined) {
                queryParameters["limit[appClipDefaultExperiences]"] = requestParameters.limitAppClipDefaultExperiences;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("itc-bearer-token", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/v1/appClips/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
                method: "GET",
                headers: headerParameters,
                query: queryParameters
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.AppClipResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    appClipsGetInstance(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.appClipsGetInstanceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.AppClipsApi = AppClipsApi;
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterActionEnum = {
    Open: "OPEN",
    View: "VIEW",
    Play: "PLAY"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterPlaceStatusEnum = {
    Pending: "PENDING",
    Matched: "MATCHED",
    NoMatch: "NO_MATCH"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFilterStatusEnum = {
    Received: "RECEIVED",
    Deactivated: "DEACTIVATED",
    AppTransferInProgress: "APP_TRANSFER_IN_PROGRESS"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperiencesEnum = {
    Action: "action",
    AppClip: "appClip",
    BusinessCategory: "businessCategory",
    DefaultLanguage: "defaultLanguage",
    HeaderImage: "headerImage",
    IsPoweredBy: "isPoweredBy",
    Link: "link",
    Localizations: "localizations",
    Place: "place",
    PlaceStatus: "placeStatus",
    Removed: "removed",
    Status: "status",
    Version: "version"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipsEnum = {
    App: "app",
    AppClipAdvancedExperiences: "appClipAdvancedExperiences",
    AppClipDefaultExperiences: "appClipDefaultExperiences",
    BundleId: "bundleId"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperienceImagesEnum = {
    AssetDeliveryState: "assetDeliveryState",
    FileName: "fileName",
    FileSize: "fileSize",
    ImageAsset: "imageAsset",
    SourceFileChecksum: "sourceFileChecksum",
    UploadOperations: "uploadOperations",
    Uploaded: "uploaded"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedFieldsAppClipAdvancedExperienceLocalizationsEnum = {
    Language: "language",
    Subtitle: "subtitle",
    Title: "title"
};
/**
 * @export
 */
exports.AppClipsAppClipAdvancedExperiencesGetToManyRelatedIncludeEnum = {
    AppClip: "appClip",
    HeaderImage: "headerImage",
    Localizations: "localizations"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipsEnum = {
    App: "app",
    AppClipAdvancedExperiences: "appClipAdvancedExperiences",
    AppClipDefaultExperiences: "appClipDefaultExperiences",
    BundleId: "bundleId"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipAppStoreReviewDetailsEnum = {
    AppClipDefaultExperience: "appClipDefaultExperience",
    InvocationUrls: "invocationUrls"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppStoreVersionsEnum = {
    AgeRatingDeclaration: "ageRatingDeclaration",
    AlternativeDistributionPackage: "alternativeDistributionPackage",
    App: "app",
    AppClipDefaultExperience: "appClipDefaultExperience",
    AppStoreReviewDetail: "appStoreReviewDetail",
    AppStoreState: "appStoreState",
    AppStoreVersionExperiments: "appStoreVersionExperiments",
    AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2",
    AppStoreVersionLocalizations: "appStoreVersionLocalizations",
    AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease",
    AppStoreVersionSubmission: "appStoreVersionSubmission",
    AppVersionState: "appVersionState",
    Build: "build",
    Copyright: "copyright",
    CreatedDate: "createdDate",
    CustomerReviews: "customerReviews",
    Downloadable: "downloadable",
    EarliestReleaseDate: "earliestReleaseDate",
    Platform: "platform",
    ReleaseType: "releaseType",
    ReviewType: "reviewType",
    RoutingAppCoverage: "routingAppCoverage",
    VersionString: "versionString"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipDefaultExperiencesEnum = {
    Action: "action",
    AppClip: "appClip",
    AppClipAppStoreReviewDetail: "appClipAppStoreReviewDetail",
    AppClipDefaultExperienceLocalizations: "appClipDefaultExperienceLocalizations",
    AppClipDefaultExperienceTemplate: "appClipDefaultExperienceTemplate",
    ReleaseWithAppStoreVersion: "releaseWithAppStoreVersion"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedFieldsAppClipDefaultExperienceLocalizationsEnum = {
    AppClipDefaultExperience: "appClipDefaultExperience",
    AppClipHeaderImage: "appClipHeaderImage",
    Locale: "locale",
    Subtitle: "subtitle"
};
/**
 * @export
 */
exports.AppClipsAppClipDefaultExperiencesGetToManyRelatedIncludeEnum = {
    AppClip: "appClip",
    AppClipAppStoreReviewDetail: "appClipAppStoreReviewDetail",
    AppClipDefaultExperienceLocalizations: "appClipDefaultExperienceLocalizations",
    ReleaseWithAppStoreVersion: "releaseWithAppStoreVersion"
};
/**
 * @export
 */
exports.AppClipsGetInstanceFieldsAppClipsEnum = {
    App: "app",
    AppClipAdvancedExperiences: "appClipAdvancedExperiences",
    AppClipDefaultExperiences: "appClipDefaultExperiences",
    BundleId: "bundleId"
};
/**
 * @export
 */
exports.AppClipsGetInstanceIncludeEnum = {
    App: "app",
    AppClipDefaultExperiences: "appClipDefaultExperiences"
};
/**
 * @export
 */
exports.AppClipsGetInstanceFieldsAppClipAdvancedExperiencesEnum = {
    Action: "action",
    AppClip: "appClip",
    BusinessCategory: "businessCategory",
    DefaultLanguage: "defaultLanguage",
    HeaderImage: "headerImage",
    IsPoweredBy: "isPoweredBy",
    Link: "link",
    Localizations: "localizations",
    Place: "place",
    PlaceStatus: "placeStatus",
    Removed: "removed",
    Status: "status",
    Version: "version"
};
/**
 * @export
 */
exports.AppClipsGetInstanceFieldsAppClipDefaultExperiencesEnum = {
    Action: "action",
    AppClip: "appClip",
    AppClipAppStoreReviewDetail: "appClipAppStoreReviewDetail",
    AppClipDefaultExperienceLocalizations: "appClipDefaultExperienceLocalizations",
    AppClipDefaultExperienceTemplate: "appClipDefaultExperienceTemplate",
    ReleaseWithAppStoreVersion: "releaseWithAppStoreVersion"
};
