/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AppWithoutIncludesResponse, AppsBetaTesterUsagesV1MetricResponse, BetaGroupBetaTestersLinkagesRequest, BetaGroupBetaTestersLinkagesResponse, BetaGroupBuildsLinkagesRequest, BetaGroupBuildsLinkagesResponse, BetaGroupCreateRequest, BetaGroupResponse, BetaGroupUpdateRequest, BetaGroupsResponse, BetaTestersWithoutIncludesResponse, BuildsWithoutIncludesResponse } from "../models";
export interface BetaGroupsAppGetToOneRelatedRequest {
    id: string;
    fieldsApps?: Array<BetaGroupsAppGetToOneRelatedFieldsAppsEnum>;
}
export interface BetaGroupsBetaTesterUsagesGetMetricsRequest {
    id: string;
    limit?: number;
    groupBy?: Array<BetaGroupsBetaTesterUsagesGetMetricsGroupByEnum>;
    filterBetaTesters?: string;
    period?: BetaGroupsBetaTesterUsagesGetMetricsPeriodEnum;
}
export interface BetaGroupsBetaTestersCreateToManyRelationshipRequest {
    id: string;
    betaGroupBetaTestersLinkagesRequest: BetaGroupBetaTestersLinkagesRequest;
}
export interface BetaGroupsBetaTestersDeleteToManyRelationshipRequest {
    id: string;
    betaGroupBetaTestersLinkagesRequest: BetaGroupBetaTestersLinkagesRequest;
}
export interface BetaGroupsBetaTestersGetToManyRelatedRequest {
    id: string;
    fieldsBetaTesters?: Array<BetaGroupsBetaTestersGetToManyRelatedFieldsBetaTestersEnum>;
    limit?: number;
}
export interface BetaGroupsBetaTestersGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BetaGroupsBuildsCreateToManyRelationshipRequest {
    id: string;
    betaGroupBuildsLinkagesRequest: BetaGroupBuildsLinkagesRequest;
}
export interface BetaGroupsBuildsDeleteToManyRelationshipRequest {
    id: string;
    betaGroupBuildsLinkagesRequest: BetaGroupBuildsLinkagesRequest;
}
export interface BetaGroupsBuildsGetToManyRelatedRequest {
    id: string;
    fieldsBuilds?: Array<BetaGroupsBuildsGetToManyRelatedFieldsBuildsEnum>;
    limit?: number;
}
export interface BetaGroupsBuildsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BetaGroupsCreateInstanceRequest {
    betaGroupCreateRequest: BetaGroupCreateRequest;
}
export interface BetaGroupsDeleteInstanceRequest {
    id: string;
}
export interface BetaGroupsGetCollectionRequest {
    filterIsInternalGroup?: Array<string>;
    filterName?: Array<string>;
    filterPublicLink?: Array<string>;
    filterPublicLinkEnabled?: Array<string>;
    filterPublicLinkLimitEnabled?: Array<string>;
    filterApp?: Array<string>;
    filterBuilds?: Array<string>;
    filterId?: Array<string>;
    sort?: Array<BetaGroupsGetCollectionSortEnum>;
    fieldsBetaGroups?: Array<BetaGroupsGetCollectionFieldsBetaGroupsEnum>;
    limit?: number;
    include?: Array<BetaGroupsGetCollectionIncludeEnum>;
    fieldsBetaTesters?: Array<BetaGroupsGetCollectionFieldsBetaTestersEnum>;
    fieldsApps?: Array<BetaGroupsGetCollectionFieldsAppsEnum>;
    fieldsBuilds?: Array<BetaGroupsGetCollectionFieldsBuildsEnum>;
    limitBetaTesters?: number;
    limitBuilds?: number;
}
export interface BetaGroupsGetInstanceRequest {
    id: string;
    fieldsBetaGroups?: Array<BetaGroupsGetInstanceFieldsBetaGroupsEnum>;
    include?: Array<BetaGroupsGetInstanceIncludeEnum>;
    fieldsBetaTesters?: Array<BetaGroupsGetInstanceFieldsBetaTestersEnum>;
    fieldsApps?: Array<BetaGroupsGetInstanceFieldsAppsEnum>;
    fieldsBuilds?: Array<BetaGroupsGetInstanceFieldsBuildsEnum>;
    limitBetaTesters?: number;
    limitBuilds?: number;
}
export interface BetaGroupsUpdateInstanceRequest {
    id: string;
    betaGroupUpdateRequest: BetaGroupUpdateRequest;
}
/**
 *
 */
export declare class BetaGroupsApi extends runtime.BaseAPI {
    /**
     */
    betaGroupsAppGetToOneRelatedRaw(requestParameters: BetaGroupsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppWithoutIncludesResponse>>;
    /**
     */
    betaGroupsAppGetToOneRelated(requestParameters: BetaGroupsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppWithoutIncludesResponse>;
    /**
     */
    betaGroupsBetaTesterUsagesGetMetricsRaw(requestParameters: BetaGroupsBetaTesterUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppsBetaTesterUsagesV1MetricResponse>>;
    /**
     */
    betaGroupsBetaTesterUsagesGetMetrics(requestParameters: BetaGroupsBetaTesterUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppsBetaTesterUsagesV1MetricResponse>;
    /**
     */
    betaGroupsBetaTestersCreateToManyRelationshipRaw(requestParameters: BetaGroupsBetaTestersCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaGroupsBetaTestersCreateToManyRelationship(requestParameters: BetaGroupsBetaTestersCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaGroupsBetaTestersDeleteToManyRelationshipRaw(requestParameters: BetaGroupsBetaTestersDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaGroupsBetaTestersDeleteToManyRelationship(requestParameters: BetaGroupsBetaTestersDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaGroupsBetaTestersGetToManyRelatedRaw(requestParameters: BetaGroupsBetaTestersGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTestersWithoutIncludesResponse>>;
    /**
     */
    betaGroupsBetaTestersGetToManyRelated(requestParameters: BetaGroupsBetaTestersGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTestersWithoutIncludesResponse>;
    /**
     */
    betaGroupsBetaTestersGetToManyRelationshipRaw(requestParameters: BetaGroupsBetaTestersGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupBetaTestersLinkagesResponse>>;
    /**
     */
    betaGroupsBetaTestersGetToManyRelationship(requestParameters: BetaGroupsBetaTestersGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupBetaTestersLinkagesResponse>;
    /**
     */
    betaGroupsBuildsCreateToManyRelationshipRaw(requestParameters: BetaGroupsBuildsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaGroupsBuildsCreateToManyRelationship(requestParameters: BetaGroupsBuildsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaGroupsBuildsDeleteToManyRelationshipRaw(requestParameters: BetaGroupsBuildsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaGroupsBuildsDeleteToManyRelationship(requestParameters: BetaGroupsBuildsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaGroupsBuildsGetToManyRelatedRaw(requestParameters: BetaGroupsBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildsWithoutIncludesResponse>>;
    /**
     */
    betaGroupsBuildsGetToManyRelated(requestParameters: BetaGroupsBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildsWithoutIncludesResponse>;
    /**
     */
    betaGroupsBuildsGetToManyRelationshipRaw(requestParameters: BetaGroupsBuildsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupBuildsLinkagesResponse>>;
    /**
     */
    betaGroupsBuildsGetToManyRelationship(requestParameters: BetaGroupsBuildsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupBuildsLinkagesResponse>;
    /**
     */
    betaGroupsCreateInstanceRaw(requestParameters: BetaGroupsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupResponse>>;
    /**
     */
    betaGroupsCreateInstance(requestParameters: BetaGroupsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupResponse>;
    /**
     */
    betaGroupsDeleteInstanceRaw(requestParameters: BetaGroupsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaGroupsDeleteInstance(requestParameters: BetaGroupsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaGroupsGetCollectionRaw(requestParameters: BetaGroupsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupsResponse>>;
    /**
     */
    betaGroupsGetCollection(requestParameters?: BetaGroupsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupsResponse>;
    /**
     */
    betaGroupsGetInstanceRaw(requestParameters: BetaGroupsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupResponse>>;
    /**
     */
    betaGroupsGetInstance(requestParameters: BetaGroupsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupResponse>;
    /**
     */
    betaGroupsUpdateInstanceRaw(requestParameters: BetaGroupsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupResponse>>;
    /**
     */
    betaGroupsUpdateInstance(requestParameters: BetaGroupsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupResponse>;
}
/**
 * @export
 */
export declare const BetaGroupsAppGetToOneRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaGroupsAppGetToOneRelatedFieldsAppsEnum = (typeof BetaGroupsAppGetToOneRelatedFieldsAppsEnum)[keyof typeof BetaGroupsAppGetToOneRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaGroupsBetaTesterUsagesGetMetricsGroupByEnum: {
    readonly BetaTesters: "betaTesters";
};
export type BetaGroupsBetaTesterUsagesGetMetricsGroupByEnum = (typeof BetaGroupsBetaTesterUsagesGetMetricsGroupByEnum)[keyof typeof BetaGroupsBetaTesterUsagesGetMetricsGroupByEnum];
/**
 * @export
 */
export declare const BetaGroupsBetaTesterUsagesGetMetricsPeriodEnum: {
    readonly P7D: "P7D";
    readonly P30D: "P30D";
    readonly P90D: "P90D";
    readonly P365D: "P365D";
};
export type BetaGroupsBetaTesterUsagesGetMetricsPeriodEnum = (typeof BetaGroupsBetaTesterUsagesGetMetricsPeriodEnum)[keyof typeof BetaGroupsBetaTesterUsagesGetMetricsPeriodEnum];
/**
 * @export
 */
export declare const BetaGroupsBetaTestersGetToManyRelatedFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BetaGroupsBetaTestersGetToManyRelatedFieldsBetaTestersEnum = (typeof BetaGroupsBetaTestersGetToManyRelatedFieldsBetaTestersEnum)[keyof typeof BetaGroupsBetaTestersGetToManyRelatedFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BetaGroupsBuildsGetToManyRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaGroupsBuildsGetToManyRelatedFieldsBuildsEnum = (typeof BetaGroupsBuildsGetToManyRelatedFieldsBuildsEnum)[keyof typeof BetaGroupsBuildsGetToManyRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionSortEnum: {
    readonly CreatedDate: "-createdDate";
    readonly Name: "-name";
    readonly PublicLinkEnabled: "-publicLinkEnabled";
    readonly PublicLinkLimit: "-publicLinkLimit";
};
export type BetaGroupsGetCollectionSortEnum = (typeof BetaGroupsGetCollectionSortEnum)[keyof typeof BetaGroupsGetCollectionSortEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type BetaGroupsGetCollectionFieldsBetaGroupsEnum = (typeof BetaGroupsGetCollectionFieldsBetaGroupsEnum)[keyof typeof BetaGroupsGetCollectionFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionIncludeEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
};
export type BetaGroupsGetCollectionIncludeEnum = (typeof BetaGroupsGetCollectionIncludeEnum)[keyof typeof BetaGroupsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BetaGroupsGetCollectionFieldsBetaTestersEnum = (typeof BetaGroupsGetCollectionFieldsBetaTestersEnum)[keyof typeof BetaGroupsGetCollectionFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaGroupsGetCollectionFieldsAppsEnum = (typeof BetaGroupsGetCollectionFieldsAppsEnum)[keyof typeof BetaGroupsGetCollectionFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetCollectionFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaGroupsGetCollectionFieldsBuildsEnum = (typeof BetaGroupsGetCollectionFieldsBuildsEnum)[keyof typeof BetaGroupsGetCollectionFieldsBuildsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetInstanceFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type BetaGroupsGetInstanceFieldsBetaGroupsEnum = (typeof BetaGroupsGetInstanceFieldsBetaGroupsEnum)[keyof typeof BetaGroupsGetInstanceFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetInstanceIncludeEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
};
export type BetaGroupsGetInstanceIncludeEnum = (typeof BetaGroupsGetInstanceIncludeEnum)[keyof typeof BetaGroupsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const BetaGroupsGetInstanceFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BetaGroupsGetInstanceFieldsBetaTestersEnum = (typeof BetaGroupsGetInstanceFieldsBetaTestersEnum)[keyof typeof BetaGroupsGetInstanceFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BetaGroupsGetInstanceFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaGroupsGetInstanceFieldsAppsEnum = (typeof BetaGroupsGetInstanceFieldsAppsEnum)[keyof typeof BetaGroupsGetInstanceFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaGroupsGetInstanceFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaGroupsGetInstanceFieldsBuildsEnum = (typeof BetaGroupsGetInstanceFieldsBuildsEnum)[keyof typeof BetaGroupsGetInstanceFieldsBuildsEnum];
