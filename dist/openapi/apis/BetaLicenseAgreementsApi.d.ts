/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AppWithoutIncludesResponse, BetaLicenseAgreementResponse, BetaLicenseAgreementUpdateRequest, BetaLicenseAgreementsResponse } from "../models";
export interface BetaLicenseAgreementsAppGetToOneRelatedRequest {
    id: string;
    fieldsApps?: Array<BetaLicenseAgreementsAppGetToOneRelatedFieldsAppsEnum>;
}
export interface BetaLicenseAgreementsGetCollectionRequest {
    filterApp?: Array<string>;
    fieldsBetaLicenseAgreements?: Array<BetaLicenseAgreementsGetCollectionFieldsBetaLicenseAgreementsEnum>;
    limit?: number;
    include?: Array<BetaLicenseAgreementsGetCollectionIncludeEnum>;
    fieldsApps?: Array<BetaLicenseAgreementsGetCollectionFieldsAppsEnum>;
}
export interface BetaLicenseAgreementsGetInstanceRequest {
    id: string;
    fieldsBetaLicenseAgreements?: Array<BetaLicenseAgreementsGetInstanceFieldsBetaLicenseAgreementsEnum>;
    include?: Array<BetaLicenseAgreementsGetInstanceIncludeEnum>;
    fieldsApps?: Array<BetaLicenseAgreementsGetInstanceFieldsAppsEnum>;
}
export interface BetaLicenseAgreementsUpdateInstanceRequest {
    id: string;
    betaLicenseAgreementUpdateRequest: BetaLicenseAgreementUpdateRequest;
}
/**
 *
 */
export declare class BetaLicenseAgreementsApi extends runtime.BaseAPI {
    /**
     */
    betaLicenseAgreementsAppGetToOneRelatedRaw(requestParameters: BetaLicenseAgreementsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppWithoutIncludesResponse>>;
    /**
     */
    betaLicenseAgreementsAppGetToOneRelated(requestParameters: BetaLicenseAgreementsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppWithoutIncludesResponse>;
    /**
     */
    betaLicenseAgreementsGetCollectionRaw(requestParameters: BetaLicenseAgreementsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaLicenseAgreementsResponse>>;
    /**
     */
    betaLicenseAgreementsGetCollection(requestParameters?: BetaLicenseAgreementsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaLicenseAgreementsResponse>;
    /**
     */
    betaLicenseAgreementsGetInstanceRaw(requestParameters: BetaLicenseAgreementsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaLicenseAgreementResponse>>;
    /**
     */
    betaLicenseAgreementsGetInstance(requestParameters: BetaLicenseAgreementsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaLicenseAgreementResponse>;
    /**
     */
    betaLicenseAgreementsUpdateInstanceRaw(requestParameters: BetaLicenseAgreementsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaLicenseAgreementResponse>>;
    /**
     */
    betaLicenseAgreementsUpdateInstance(requestParameters: BetaLicenseAgreementsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaLicenseAgreementResponse>;
}
/**
 * @export
 */
export declare const BetaLicenseAgreementsAppGetToOneRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaLicenseAgreementsAppGetToOneRelatedFieldsAppsEnum = (typeof BetaLicenseAgreementsAppGetToOneRelatedFieldsAppsEnum)[keyof typeof BetaLicenseAgreementsAppGetToOneRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetCollectionFieldsBetaLicenseAgreementsEnum: {
    readonly AgreementText: "agreementText";
    readonly App: "app";
};
export type BetaLicenseAgreementsGetCollectionFieldsBetaLicenseAgreementsEnum = (typeof BetaLicenseAgreementsGetCollectionFieldsBetaLicenseAgreementsEnum)[keyof typeof BetaLicenseAgreementsGetCollectionFieldsBetaLicenseAgreementsEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetCollectionIncludeEnum: {
    readonly App: "app";
};
export type BetaLicenseAgreementsGetCollectionIncludeEnum = (typeof BetaLicenseAgreementsGetCollectionIncludeEnum)[keyof typeof BetaLicenseAgreementsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetCollectionFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaLicenseAgreementsGetCollectionFieldsAppsEnum = (typeof BetaLicenseAgreementsGetCollectionFieldsAppsEnum)[keyof typeof BetaLicenseAgreementsGetCollectionFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetInstanceFieldsBetaLicenseAgreementsEnum: {
    readonly AgreementText: "agreementText";
    readonly App: "app";
};
export type BetaLicenseAgreementsGetInstanceFieldsBetaLicenseAgreementsEnum = (typeof BetaLicenseAgreementsGetInstanceFieldsBetaLicenseAgreementsEnum)[keyof typeof BetaLicenseAgreementsGetInstanceFieldsBetaLicenseAgreementsEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetInstanceIncludeEnum: {
    readonly App: "app";
};
export type BetaLicenseAgreementsGetInstanceIncludeEnum = (typeof BetaLicenseAgreementsGetInstanceIncludeEnum)[keyof typeof BetaLicenseAgreementsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const BetaLicenseAgreementsGetInstanceFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaLicenseAgreementsGetInstanceFieldsAppsEnum = (typeof BetaLicenseAgreementsGetInstanceFieldsAppsEnum)[keyof typeof BetaLicenseAgreementsGetInstanceFieldsAppsEnum];
