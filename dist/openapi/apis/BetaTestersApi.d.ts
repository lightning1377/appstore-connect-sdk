/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AppsWithoutIncludesResponse, BetaGroupsWithoutIncludesResponse, BetaTesterAppsLinkagesRequest, BetaTesterAppsLinkagesResponse, BetaTesterBetaGroupsLinkagesRequest, BetaTesterBetaGroupsLinkagesResponse, BetaTesterBuildsLinkagesRequest, BetaTesterBuildsLinkagesResponse, BetaTesterCreateRequest, BetaTesterResponse, BetaTesterUsagesV1MetricResponse, BetaTestersResponse, BuildsWithoutIncludesResponse } from "../models";
export interface BetaTestersAppsDeleteToManyRelationshipRequest {
    id: string;
    betaTesterAppsLinkagesRequest: BetaTesterAppsLinkagesRequest;
}
export interface BetaTestersAppsGetToManyRelatedRequest {
    id: string;
    fieldsApps?: Array<BetaTestersAppsGetToManyRelatedFieldsAppsEnum>;
    limit?: number;
}
export interface BetaTestersAppsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BetaTestersBetaGroupsCreateToManyRelationshipRequest {
    id: string;
    betaTesterBetaGroupsLinkagesRequest: BetaTesterBetaGroupsLinkagesRequest;
}
export interface BetaTestersBetaGroupsDeleteToManyRelationshipRequest {
    id: string;
    betaTesterBetaGroupsLinkagesRequest: BetaTesterBetaGroupsLinkagesRequest;
}
export interface BetaTestersBetaGroupsGetToManyRelatedRequest {
    id: string;
    fieldsBetaGroups?: Array<BetaTestersBetaGroupsGetToManyRelatedFieldsBetaGroupsEnum>;
    limit?: number;
}
export interface BetaTestersBetaGroupsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BetaTestersBetaTesterUsagesGetMetricsRequest {
    id: string;
    filterApps: string;
    limit?: number;
    period?: BetaTestersBetaTesterUsagesGetMetricsPeriodEnum;
}
export interface BetaTestersBuildsCreateToManyRelationshipRequest {
    id: string;
    betaTesterBuildsLinkagesRequest: BetaTesterBuildsLinkagesRequest;
}
export interface BetaTestersBuildsDeleteToManyRelationshipRequest {
    id: string;
    betaTesterBuildsLinkagesRequest: BetaTesterBuildsLinkagesRequest;
}
export interface BetaTestersBuildsGetToManyRelatedRequest {
    id: string;
    fieldsBuilds?: Array<BetaTestersBuildsGetToManyRelatedFieldsBuildsEnum>;
    limit?: number;
}
export interface BetaTestersBuildsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BetaTestersCreateInstanceRequest {
    betaTesterCreateRequest: BetaTesterCreateRequest;
}
export interface BetaTestersDeleteInstanceRequest {
    id: string;
}
export interface BetaTestersGetCollectionRequest {
    filterEmail?: Array<string>;
    filterFirstName?: Array<string>;
    filterInviteType?: Array<BetaTestersGetCollectionFilterInviteTypeEnum>;
    filterLastName?: Array<string>;
    filterApps?: Array<string>;
    filterBetaGroups?: Array<string>;
    filterBuilds?: Array<string>;
    filterId?: Array<string>;
    sort?: Array<BetaTestersGetCollectionSortEnum>;
    fieldsBetaTesters?: Array<BetaTestersGetCollectionFieldsBetaTestersEnum>;
    limit?: number;
    include?: Array<BetaTestersGetCollectionIncludeEnum>;
    fieldsApps?: Array<BetaTestersGetCollectionFieldsAppsEnum>;
    fieldsBuilds?: Array<BetaTestersGetCollectionFieldsBuildsEnum>;
    fieldsBetaGroups?: Array<BetaTestersGetCollectionFieldsBetaGroupsEnum>;
    limitApps?: number;
    limitBetaGroups?: number;
    limitBuilds?: number;
}
export interface BetaTestersGetInstanceRequest {
    id: string;
    fieldsBetaTesters?: Array<BetaTestersGetInstanceFieldsBetaTestersEnum>;
    include?: Array<BetaTestersGetInstanceIncludeEnum>;
    fieldsApps?: Array<BetaTestersGetInstanceFieldsAppsEnum>;
    fieldsBuilds?: Array<BetaTestersGetInstanceFieldsBuildsEnum>;
    fieldsBetaGroups?: Array<BetaTestersGetInstanceFieldsBetaGroupsEnum>;
    limitApps?: number;
    limitBetaGroups?: number;
    limitBuilds?: number;
}
/**
 *
 */
export declare class BetaTestersApi extends runtime.BaseAPI {
    /**
     */
    betaTestersAppsDeleteToManyRelationshipRaw(requestParameters: BetaTestersAppsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersAppsDeleteToManyRelationship(requestParameters: BetaTestersAppsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersAppsGetToManyRelatedRaw(requestParameters: BetaTestersAppsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppsWithoutIncludesResponse>>;
    /**
     */
    betaTestersAppsGetToManyRelated(requestParameters: BetaTestersAppsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppsWithoutIncludesResponse>;
    /**
     */
    betaTestersAppsGetToManyRelationshipRaw(requestParameters: BetaTestersAppsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterAppsLinkagesResponse>>;
    /**
     */
    betaTestersAppsGetToManyRelationship(requestParameters: BetaTestersAppsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterAppsLinkagesResponse>;
    /**
     */
    betaTestersBetaGroupsCreateToManyRelationshipRaw(requestParameters: BetaTestersBetaGroupsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersBetaGroupsCreateToManyRelationship(requestParameters: BetaTestersBetaGroupsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersBetaGroupsDeleteToManyRelationshipRaw(requestParameters: BetaTestersBetaGroupsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersBetaGroupsDeleteToManyRelationship(requestParameters: BetaTestersBetaGroupsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersBetaGroupsGetToManyRelatedRaw(requestParameters: BetaTestersBetaGroupsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaGroupsWithoutIncludesResponse>>;
    /**
     */
    betaTestersBetaGroupsGetToManyRelated(requestParameters: BetaTestersBetaGroupsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaGroupsWithoutIncludesResponse>;
    /**
     */
    betaTestersBetaGroupsGetToManyRelationshipRaw(requestParameters: BetaTestersBetaGroupsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterBetaGroupsLinkagesResponse>>;
    /**
     */
    betaTestersBetaGroupsGetToManyRelationship(requestParameters: BetaTestersBetaGroupsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterBetaGroupsLinkagesResponse>;
    /**
     */
    betaTestersBetaTesterUsagesGetMetricsRaw(requestParameters: BetaTestersBetaTesterUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterUsagesV1MetricResponse>>;
    /**
     */
    betaTestersBetaTesterUsagesGetMetrics(requestParameters: BetaTestersBetaTesterUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterUsagesV1MetricResponse>;
    /**
     */
    betaTestersBuildsCreateToManyRelationshipRaw(requestParameters: BetaTestersBuildsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersBuildsCreateToManyRelationship(requestParameters: BetaTestersBuildsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersBuildsDeleteToManyRelationshipRaw(requestParameters: BetaTestersBuildsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersBuildsDeleteToManyRelationship(requestParameters: BetaTestersBuildsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersBuildsGetToManyRelatedRaw(requestParameters: BetaTestersBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildsWithoutIncludesResponse>>;
    /**
     */
    betaTestersBuildsGetToManyRelated(requestParameters: BetaTestersBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildsWithoutIncludesResponse>;
    /**
     */
    betaTestersBuildsGetToManyRelationshipRaw(requestParameters: BetaTestersBuildsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterBuildsLinkagesResponse>>;
    /**
     */
    betaTestersBuildsGetToManyRelationship(requestParameters: BetaTestersBuildsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterBuildsLinkagesResponse>;
    /**
     */
    betaTestersCreateInstanceRaw(requestParameters: BetaTestersCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterResponse>>;
    /**
     */
    betaTestersCreateInstance(requestParameters: BetaTestersCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterResponse>;
    /**
     */
    betaTestersDeleteInstanceRaw(requestParameters: BetaTestersDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    betaTestersDeleteInstance(requestParameters: BetaTestersDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    betaTestersGetCollectionRaw(requestParameters: BetaTestersGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTestersResponse>>;
    /**
     */
    betaTestersGetCollection(requestParameters?: BetaTestersGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTestersResponse>;
    /**
     */
    betaTestersGetInstanceRaw(requestParameters: BetaTestersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTesterResponse>>;
    /**
     */
    betaTestersGetInstance(requestParameters: BetaTestersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTesterResponse>;
}
/**
 * @export
 */
export declare const BetaTestersAppsGetToManyRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaTestersAppsGetToManyRelatedFieldsAppsEnum = (typeof BetaTestersAppsGetToManyRelatedFieldsAppsEnum)[keyof typeof BetaTestersAppsGetToManyRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaTestersBetaGroupsGetToManyRelatedFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type BetaTestersBetaGroupsGetToManyRelatedFieldsBetaGroupsEnum = (typeof BetaTestersBetaGroupsGetToManyRelatedFieldsBetaGroupsEnum)[keyof typeof BetaTestersBetaGroupsGetToManyRelatedFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const BetaTestersBetaTesterUsagesGetMetricsPeriodEnum: {
    readonly P7D: "P7D";
    readonly P30D: "P30D";
    readonly P90D: "P90D";
    readonly P365D: "P365D";
};
export type BetaTestersBetaTesterUsagesGetMetricsPeriodEnum = (typeof BetaTestersBetaTesterUsagesGetMetricsPeriodEnum)[keyof typeof BetaTestersBetaTesterUsagesGetMetricsPeriodEnum];
/**
 * @export
 */
export declare const BetaTestersBuildsGetToManyRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaTestersBuildsGetToManyRelatedFieldsBuildsEnum = (typeof BetaTestersBuildsGetToManyRelatedFieldsBuildsEnum)[keyof typeof BetaTestersBuildsGetToManyRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionFilterInviteTypeEnum: {
    readonly Email: "EMAIL";
    readonly PublicLink: "PUBLIC_LINK";
};
export type BetaTestersGetCollectionFilterInviteTypeEnum = (typeof BetaTestersGetCollectionFilterInviteTypeEnum)[keyof typeof BetaTestersGetCollectionFilterInviteTypeEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionSortEnum: {
    readonly Email: "-email";
    readonly FirstName: "-firstName";
    readonly InviteType: "-inviteType";
    readonly LastName: "-lastName";
    readonly State: "-state";
};
export type BetaTestersGetCollectionSortEnum = (typeof BetaTestersGetCollectionSortEnum)[keyof typeof BetaTestersGetCollectionSortEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BetaTestersGetCollectionFieldsBetaTestersEnum = (typeof BetaTestersGetCollectionFieldsBetaTestersEnum)[keyof typeof BetaTestersGetCollectionFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionIncludeEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
};
export type BetaTestersGetCollectionIncludeEnum = (typeof BetaTestersGetCollectionIncludeEnum)[keyof typeof BetaTestersGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaTestersGetCollectionFieldsAppsEnum = (typeof BetaTestersGetCollectionFieldsAppsEnum)[keyof typeof BetaTestersGetCollectionFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaTestersGetCollectionFieldsBuildsEnum = (typeof BetaTestersGetCollectionFieldsBuildsEnum)[keyof typeof BetaTestersGetCollectionFieldsBuildsEnum];
/**
 * @export
 */
export declare const BetaTestersGetCollectionFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type BetaTestersGetCollectionFieldsBetaGroupsEnum = (typeof BetaTestersGetCollectionFieldsBetaGroupsEnum)[keyof typeof BetaTestersGetCollectionFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const BetaTestersGetInstanceFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BetaTestersGetInstanceFieldsBetaTestersEnum = (typeof BetaTestersGetInstanceFieldsBetaTestersEnum)[keyof typeof BetaTestersGetInstanceFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BetaTestersGetInstanceIncludeEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
};
export type BetaTestersGetInstanceIncludeEnum = (typeof BetaTestersGetInstanceIncludeEnum)[keyof typeof BetaTestersGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const BetaTestersGetInstanceFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BetaTestersGetInstanceFieldsAppsEnum = (typeof BetaTestersGetInstanceFieldsAppsEnum)[keyof typeof BetaTestersGetInstanceFieldsAppsEnum];
/**
 * @export
 */
export declare const BetaTestersGetInstanceFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BetaTestersGetInstanceFieldsBuildsEnum = (typeof BetaTestersGetInstanceFieldsBuildsEnum)[keyof typeof BetaTestersGetInstanceFieldsBuildsEnum];
/**
 * @export
 */
export declare const BetaTestersGetInstanceFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type BetaTestersGetInstanceFieldsBetaGroupsEnum = (typeof BetaTestersGetInstanceFieldsBetaGroupsEnum)[keyof typeof BetaTestersGetInstanceFieldsBetaGroupsEnum];
