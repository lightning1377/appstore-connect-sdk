/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { BuildBetaDetailResponse, BuildBetaDetailUpdateRequest, BuildBetaDetailsResponse, BuildWithoutIncludesResponse } from "../models";
export interface BuildBetaDetailsBuildGetToOneRelatedRequest {
    id: string;
    fieldsBuilds?: Array<BuildBetaDetailsBuildGetToOneRelatedFieldsBuildsEnum>;
}
export interface BuildBetaDetailsGetCollectionRequest {
    filterBuild?: Array<string>;
    filterId?: Array<string>;
    fieldsBuildBetaDetails?: Array<BuildBetaDetailsGetCollectionFieldsBuildBetaDetailsEnum>;
    limit?: number;
    include?: Array<BuildBetaDetailsGetCollectionIncludeEnum>;
    fieldsBuilds?: Array<BuildBetaDetailsGetCollectionFieldsBuildsEnum>;
}
export interface BuildBetaDetailsGetInstanceRequest {
    id: string;
    fieldsBuildBetaDetails?: Array<BuildBetaDetailsGetInstanceFieldsBuildBetaDetailsEnum>;
    include?: Array<BuildBetaDetailsGetInstanceIncludeEnum>;
    fieldsBuilds?: Array<BuildBetaDetailsGetInstanceFieldsBuildsEnum>;
}
export interface BuildBetaDetailsUpdateInstanceRequest {
    id: string;
    buildBetaDetailUpdateRequest: BuildBetaDetailUpdateRequest;
}
/**
 *
 */
export declare class BuildBetaDetailsApi extends runtime.BaseAPI {
    /**
     */
    buildBetaDetailsBuildGetToOneRelatedRaw(requestParameters: BuildBetaDetailsBuildGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildWithoutIncludesResponse>>;
    /**
     */
    buildBetaDetailsBuildGetToOneRelated(requestParameters: BuildBetaDetailsBuildGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildWithoutIncludesResponse>;
    /**
     */
    buildBetaDetailsGetCollectionRaw(requestParameters: BuildBetaDetailsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildBetaDetailsResponse>>;
    /**
     */
    buildBetaDetailsGetCollection(requestParameters?: BuildBetaDetailsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildBetaDetailsResponse>;
    /**
     */
    buildBetaDetailsGetInstanceRaw(requestParameters: BuildBetaDetailsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildBetaDetailResponse>>;
    /**
     */
    buildBetaDetailsGetInstance(requestParameters: BuildBetaDetailsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildBetaDetailResponse>;
    /**
     */
    buildBetaDetailsUpdateInstanceRaw(requestParameters: BuildBetaDetailsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildBetaDetailResponse>>;
    /**
     */
    buildBetaDetailsUpdateInstance(requestParameters: BuildBetaDetailsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildBetaDetailResponse>;
}
/**
 * @export
 */
export declare const BuildBetaDetailsBuildGetToOneRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildBetaDetailsBuildGetToOneRelatedFieldsBuildsEnum = (typeof BuildBetaDetailsBuildGetToOneRelatedFieldsBuildsEnum)[keyof typeof BuildBetaDetailsBuildGetToOneRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetCollectionFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type BuildBetaDetailsGetCollectionFieldsBuildBetaDetailsEnum = (typeof BuildBetaDetailsGetCollectionFieldsBuildBetaDetailsEnum)[keyof typeof BuildBetaDetailsGetCollectionFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetCollectionIncludeEnum: {
    readonly Build: "build";
};
export type BuildBetaDetailsGetCollectionIncludeEnum = (typeof BuildBetaDetailsGetCollectionIncludeEnum)[keyof typeof BuildBetaDetailsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetCollectionFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildBetaDetailsGetCollectionFieldsBuildsEnum = (typeof BuildBetaDetailsGetCollectionFieldsBuildsEnum)[keyof typeof BuildBetaDetailsGetCollectionFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetInstanceFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type BuildBetaDetailsGetInstanceFieldsBuildBetaDetailsEnum = (typeof BuildBetaDetailsGetInstanceFieldsBuildBetaDetailsEnum)[keyof typeof BuildBetaDetailsGetInstanceFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetInstanceIncludeEnum: {
    readonly Build: "build";
};
export type BuildBetaDetailsGetInstanceIncludeEnum = (typeof BuildBetaDetailsGetInstanceIncludeEnum)[keyof typeof BuildBetaDetailsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const BuildBetaDetailsGetInstanceFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildBetaDetailsGetInstanceFieldsBuildsEnum = (typeof BuildBetaDetailsGetInstanceFieldsBuildsEnum)[keyof typeof BuildBetaDetailsGetInstanceFieldsBuildsEnum];
