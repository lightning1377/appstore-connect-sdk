/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AppEncryptionDeclarationWithoutIncludesResponse, AppStoreVersionResponse, AppWithoutIncludesResponse, BetaAppReviewSubmissionWithoutIncludesResponse, BetaBuildLocalizationsWithoutIncludesResponse, BetaBuildUsagesV1MetricResponse, BetaTestersWithoutIncludesResponse, BuildAppEncryptionDeclarationLinkageRequest, BuildAppEncryptionDeclarationLinkageResponse, BuildBetaDetailResponse, BuildBetaGroupsLinkagesRequest, BuildIconsWithoutIncludesResponse, BuildIndividualTestersLinkagesRequest, BuildIndividualTestersLinkagesResponse, BuildResponse, BuildUpdateRequest, BuildsResponse, DiagnosticSignaturesResponse, PrereleaseVersionWithoutIncludesResponse, XcodeMetrics } from "../models";
export interface BuildsAppEncryptionDeclarationGetToOneRelatedRequest {
    id: string;
    fieldsAppEncryptionDeclarations?: Array<BuildsAppEncryptionDeclarationGetToOneRelatedFieldsAppEncryptionDeclarationsEnum>;
}
export interface BuildsAppEncryptionDeclarationGetToOneRelationshipRequest {
    id: string;
}
export interface BuildsAppEncryptionDeclarationUpdateToOneRelationshipRequest {
    id: string;
    buildAppEncryptionDeclarationLinkageRequest: BuildAppEncryptionDeclarationLinkageRequest;
}
export interface BuildsAppGetToOneRelatedRequest {
    id: string;
    fieldsApps?: Array<BuildsAppGetToOneRelatedFieldsAppsEnum>;
}
export interface BuildsAppStoreVersionGetToOneRelatedRequest {
    id: string;
    fieldsAgeRatingDeclarations?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAgeRatingDeclarationsEnum>;
    fieldsAppStoreReviewDetails?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreReviewDetailsEnum>;
    fieldsAppStoreVersionLocalizations?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionLocalizationsEnum>;
    fieldsAppStoreVersionExperiments?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionExperimentsEnum>;
    fieldsAppStoreVersionSubmissions?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionSubmissionsEnum>;
    fieldsAlternativeDistributionPackages?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAlternativeDistributionPackagesEnum>;
    fieldsAppStoreVersions?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionsEnum>;
    fieldsApps?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppsEnum>;
    fieldsRoutingAppCoverages?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsRoutingAppCoveragesEnum>;
    fieldsAppClipDefaultExperiences?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppClipDefaultExperiencesEnum>;
    fieldsAppStoreVersionPhasedReleases?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionPhasedReleasesEnum>;
    fieldsBuilds?: Array<BuildsAppStoreVersionGetToOneRelatedFieldsBuildsEnum>;
    limitAppStoreVersionLocalizations?: number;
    limitAppStoreVersionExperiments?: number;
    limitAppStoreVersionExperimentsV2?: number;
    include?: Array<BuildsAppStoreVersionGetToOneRelatedIncludeEnum>;
}
export interface BuildsBetaAppReviewSubmissionGetToOneRelatedRequest {
    id: string;
    fieldsBetaAppReviewSubmissions?: Array<BuildsBetaAppReviewSubmissionGetToOneRelatedFieldsBetaAppReviewSubmissionsEnum>;
}
export interface BuildsBetaBuildLocalizationsGetToManyRelatedRequest {
    id: string;
    fieldsBetaBuildLocalizations?: Array<BuildsBetaBuildLocalizationsGetToManyRelatedFieldsBetaBuildLocalizationsEnum>;
    limit?: number;
}
export interface BuildsBetaBuildUsagesGetMetricsRequest {
    id: string;
    limit?: number;
}
export interface BuildsBetaGroupsCreateToManyRelationshipRequest {
    id: string;
    buildBetaGroupsLinkagesRequest: BuildBetaGroupsLinkagesRequest;
}
export interface BuildsBetaGroupsDeleteToManyRelationshipRequest {
    id: string;
    buildBetaGroupsLinkagesRequest: BuildBetaGroupsLinkagesRequest;
}
export interface BuildsBuildBetaDetailGetToOneRelatedRequest {
    id: string;
    fieldsBuildBetaDetails?: Array<BuildsBuildBetaDetailGetToOneRelatedFieldsBuildBetaDetailsEnum>;
    fieldsBuilds?: Array<BuildsBuildBetaDetailGetToOneRelatedFieldsBuildsEnum>;
    include?: Array<BuildsBuildBetaDetailGetToOneRelatedIncludeEnum>;
}
export interface BuildsDiagnosticSignaturesGetToManyRelatedRequest {
    id: string;
    filterDiagnosticType?: Array<BuildsDiagnosticSignaturesGetToManyRelatedFilterDiagnosticTypeEnum>;
    fieldsDiagnosticSignatures?: Array<BuildsDiagnosticSignaturesGetToManyRelatedFieldsDiagnosticSignaturesEnum>;
    limit?: number;
}
export interface BuildsGetCollectionRequest {
    filterBetaAppReviewSubmissionBetaReviewState?: Array<BuildsGetCollectionFilterBetaAppReviewSubmissionBetaReviewStateEnum>;
    filterBuildAudienceType?: Array<BuildsGetCollectionFilterBuildAudienceTypeEnum>;
    filterExpired?: Array<string>;
    filterPreReleaseVersionPlatform?: Array<BuildsGetCollectionFilterPreReleaseVersionPlatformEnum>;
    filterPreReleaseVersionVersion?: Array<string>;
    filterProcessingState?: Array<BuildsGetCollectionFilterProcessingStateEnum>;
    filterUsesNonExemptEncryption?: Array<string>;
    filterVersion?: Array<string>;
    filterApp?: Array<string>;
    filterAppStoreVersion?: Array<string>;
    filterBetaGroups?: Array<string>;
    filterPreReleaseVersion?: Array<string>;
    filterId?: Array<string>;
    sort?: Array<BuildsGetCollectionSortEnum>;
    fieldsBuilds?: Array<BuildsGetCollectionFieldsBuildsEnum>;
    limit?: number;
    include?: Array<BuildsGetCollectionIncludeEnum>;
    fieldsDiagnosticSignatures?: Array<BuildsGetCollectionFieldsDiagnosticSignaturesEnum>;
    fieldsBuildIcons?: Array<BuildsGetCollectionFieldsBuildIconsEnum>;
    fieldsBuildBetaDetails?: Array<BuildsGetCollectionFieldsBuildBetaDetailsEnum>;
    fieldsBetaAppReviewSubmissions?: Array<BuildsGetCollectionFieldsBetaAppReviewSubmissionsEnum>;
    fieldsBetaTesters?: Array<BuildsGetCollectionFieldsBetaTestersEnum>;
    fieldsAppStoreVersions?: Array<BuildsGetCollectionFieldsAppStoreVersionsEnum>;
    fieldsBetaBuildLocalizations?: Array<BuildsGetCollectionFieldsBetaBuildLocalizationsEnum>;
    fieldsPreReleaseVersions?: Array<BuildsGetCollectionFieldsPreReleaseVersionsEnum>;
    fieldsAppEncryptionDeclarations?: Array<BuildsGetCollectionFieldsAppEncryptionDeclarationsEnum>;
    fieldsApps?: Array<BuildsGetCollectionFieldsAppsEnum>;
    fieldsPerfPowerMetrics?: Array<BuildsGetCollectionFieldsPerfPowerMetricsEnum>;
    limitBetaBuildLocalizations?: number;
    limitBetaGroups?: number;
    limitBuildBundles?: number;
    limitIcons?: number;
    limitIndividualTesters?: number;
}
export interface BuildsGetInstanceRequest {
    id: string;
    fieldsBuilds?: Array<BuildsGetInstanceFieldsBuildsEnum>;
    include?: Array<BuildsGetInstanceIncludeEnum>;
    fieldsDiagnosticSignatures?: Array<BuildsGetInstanceFieldsDiagnosticSignaturesEnum>;
    fieldsBuildIcons?: Array<BuildsGetInstanceFieldsBuildIconsEnum>;
    fieldsBuildBetaDetails?: Array<BuildsGetInstanceFieldsBuildBetaDetailsEnum>;
    fieldsBetaAppReviewSubmissions?: Array<BuildsGetInstanceFieldsBetaAppReviewSubmissionsEnum>;
    fieldsBetaTesters?: Array<BuildsGetInstanceFieldsBetaTestersEnum>;
    fieldsAppStoreVersions?: Array<BuildsGetInstanceFieldsAppStoreVersionsEnum>;
    fieldsBetaBuildLocalizations?: Array<BuildsGetInstanceFieldsBetaBuildLocalizationsEnum>;
    fieldsPreReleaseVersions?: Array<BuildsGetInstanceFieldsPreReleaseVersionsEnum>;
    fieldsAppEncryptionDeclarations?: Array<BuildsGetInstanceFieldsAppEncryptionDeclarationsEnum>;
    fieldsApps?: Array<BuildsGetInstanceFieldsAppsEnum>;
    fieldsPerfPowerMetrics?: Array<BuildsGetInstanceFieldsPerfPowerMetricsEnum>;
    limitBetaBuildLocalizations?: number;
    limitBetaGroups?: number;
    limitBuildBundles?: number;
    limitIcons?: number;
    limitIndividualTesters?: number;
}
export interface BuildsIconsGetToManyRelatedRequest {
    id: string;
    fieldsBuildIcons?: Array<BuildsIconsGetToManyRelatedFieldsBuildIconsEnum>;
    limit?: number;
}
export interface BuildsIndividualTestersCreateToManyRelationshipRequest {
    id: string;
    buildIndividualTestersLinkagesRequest: BuildIndividualTestersLinkagesRequest;
}
export interface BuildsIndividualTestersDeleteToManyRelationshipRequest {
    id: string;
    buildIndividualTestersLinkagesRequest: BuildIndividualTestersLinkagesRequest;
}
export interface BuildsIndividualTestersGetToManyRelatedRequest {
    id: string;
    fieldsBetaTesters?: Array<BuildsIndividualTestersGetToManyRelatedFieldsBetaTestersEnum>;
    limit?: number;
}
export interface BuildsIndividualTestersGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface BuildsPerfPowerMetricsGetToManyRelatedRequest {
    id: string;
    filterDeviceType?: Array<string>;
    filterMetricType?: Array<BuildsPerfPowerMetricsGetToManyRelatedFilterMetricTypeEnum>;
    filterPlatform?: Array<BuildsPerfPowerMetricsGetToManyRelatedFilterPlatformEnum>;
}
export interface BuildsPreReleaseVersionGetToOneRelatedRequest {
    id: string;
    fieldsPreReleaseVersions?: Array<BuildsPreReleaseVersionGetToOneRelatedFieldsPreReleaseVersionsEnum>;
}
export interface BuildsUpdateInstanceRequest {
    id: string;
    buildUpdateRequest: BuildUpdateRequest;
}
/**
 *
 */
export declare class BuildsApi extends runtime.BaseAPI {
    /**
     */
    buildsAppEncryptionDeclarationGetToOneRelatedRaw(requestParameters: BuildsAppEncryptionDeclarationGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppEncryptionDeclarationWithoutIncludesResponse>>;
    /**
     */
    buildsAppEncryptionDeclarationGetToOneRelated(requestParameters: BuildsAppEncryptionDeclarationGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppEncryptionDeclarationWithoutIncludesResponse>;
    /**
     */
    buildsAppEncryptionDeclarationGetToOneRelationshipRaw(requestParameters: BuildsAppEncryptionDeclarationGetToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildAppEncryptionDeclarationLinkageResponse>>;
    /**
     */
    buildsAppEncryptionDeclarationGetToOneRelationship(requestParameters: BuildsAppEncryptionDeclarationGetToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildAppEncryptionDeclarationLinkageResponse>;
    /**
     */
    buildsAppEncryptionDeclarationUpdateToOneRelationshipRaw(requestParameters: BuildsAppEncryptionDeclarationUpdateToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    buildsAppEncryptionDeclarationUpdateToOneRelationship(requestParameters: BuildsAppEncryptionDeclarationUpdateToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    buildsAppGetToOneRelatedRaw(requestParameters: BuildsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppWithoutIncludesResponse>>;
    /**
     */
    buildsAppGetToOneRelated(requestParameters: BuildsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppWithoutIncludesResponse>;
    /**
     */
    buildsAppStoreVersionGetToOneRelatedRaw(requestParameters: BuildsAppStoreVersionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppStoreVersionResponse>>;
    /**
     */
    buildsAppStoreVersionGetToOneRelated(requestParameters: BuildsAppStoreVersionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppStoreVersionResponse>;
    /**
     */
    buildsBetaAppReviewSubmissionGetToOneRelatedRaw(requestParameters: BuildsBetaAppReviewSubmissionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaAppReviewSubmissionWithoutIncludesResponse>>;
    /**
     */
    buildsBetaAppReviewSubmissionGetToOneRelated(requestParameters: BuildsBetaAppReviewSubmissionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaAppReviewSubmissionWithoutIncludesResponse>;
    /**
     */
    buildsBetaBuildLocalizationsGetToManyRelatedRaw(requestParameters: BuildsBetaBuildLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaBuildLocalizationsWithoutIncludesResponse>>;
    /**
     */
    buildsBetaBuildLocalizationsGetToManyRelated(requestParameters: BuildsBetaBuildLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaBuildLocalizationsWithoutIncludesResponse>;
    /**
     */
    buildsBetaBuildUsagesGetMetricsRaw(requestParameters: BuildsBetaBuildUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaBuildUsagesV1MetricResponse>>;
    /**
     */
    buildsBetaBuildUsagesGetMetrics(requestParameters: BuildsBetaBuildUsagesGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaBuildUsagesV1MetricResponse>;
    /**
     */
    buildsBetaGroupsCreateToManyRelationshipRaw(requestParameters: BuildsBetaGroupsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    buildsBetaGroupsCreateToManyRelationship(requestParameters: BuildsBetaGroupsCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    buildsBetaGroupsDeleteToManyRelationshipRaw(requestParameters: BuildsBetaGroupsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    buildsBetaGroupsDeleteToManyRelationship(requestParameters: BuildsBetaGroupsDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    buildsBuildBetaDetailGetToOneRelatedRaw(requestParameters: BuildsBuildBetaDetailGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildBetaDetailResponse>>;
    /**
     */
    buildsBuildBetaDetailGetToOneRelated(requestParameters: BuildsBuildBetaDetailGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildBetaDetailResponse>;
    /**
     */
    buildsDiagnosticSignaturesGetToManyRelatedRaw(requestParameters: BuildsDiagnosticSignaturesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiagnosticSignaturesResponse>>;
    /**
     */
    buildsDiagnosticSignaturesGetToManyRelated(requestParameters: BuildsDiagnosticSignaturesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiagnosticSignaturesResponse>;
    /**
     */
    buildsGetCollectionRaw(requestParameters: BuildsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildsResponse>>;
    /**
     */
    buildsGetCollection(requestParameters?: BuildsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildsResponse>;
    /**
     */
    buildsGetInstanceRaw(requestParameters: BuildsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildResponse>>;
    /**
     */
    buildsGetInstance(requestParameters: BuildsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildResponse>;
    /**
     */
    buildsIconsGetToManyRelatedRaw(requestParameters: BuildsIconsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildIconsWithoutIncludesResponse>>;
    /**
     */
    buildsIconsGetToManyRelated(requestParameters: BuildsIconsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildIconsWithoutIncludesResponse>;
    /**
     */
    buildsIndividualTestersCreateToManyRelationshipRaw(requestParameters: BuildsIndividualTestersCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    buildsIndividualTestersCreateToManyRelationship(requestParameters: BuildsIndividualTestersCreateToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    buildsIndividualTestersDeleteToManyRelationshipRaw(requestParameters: BuildsIndividualTestersDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    buildsIndividualTestersDeleteToManyRelationship(requestParameters: BuildsIndividualTestersDeleteToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    buildsIndividualTestersGetToManyRelatedRaw(requestParameters: BuildsIndividualTestersGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BetaTestersWithoutIncludesResponse>>;
    /**
     */
    buildsIndividualTestersGetToManyRelated(requestParameters: BuildsIndividualTestersGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BetaTestersWithoutIncludesResponse>;
    /**
     */
    buildsIndividualTestersGetToManyRelationshipRaw(requestParameters: BuildsIndividualTestersGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildIndividualTestersLinkagesResponse>>;
    /**
     */
    buildsIndividualTestersGetToManyRelationship(requestParameters: BuildsIndividualTestersGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildIndividualTestersLinkagesResponse>;
    /**
     */
    buildsPerfPowerMetricsGetToManyRelatedRaw(requestParameters: BuildsPerfPowerMetricsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<XcodeMetrics>>;
    /**
     */
    buildsPerfPowerMetricsGetToManyRelated(requestParameters: BuildsPerfPowerMetricsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<XcodeMetrics>;
    /**
     */
    buildsPreReleaseVersionGetToOneRelatedRaw(requestParameters: BuildsPreReleaseVersionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrereleaseVersionWithoutIncludesResponse>>;
    /**
     */
    buildsPreReleaseVersionGetToOneRelated(requestParameters: BuildsPreReleaseVersionGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrereleaseVersionWithoutIncludesResponse>;
    /**
     */
    buildsUpdateInstanceRaw(requestParameters: BuildsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildResponse>>;
    /**
     */
    buildsUpdateInstance(requestParameters: BuildsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildResponse>;
}
/**
 * @export
 */
export declare const BuildsAppEncryptionDeclarationGetToOneRelatedFieldsAppEncryptionDeclarationsEnum: {
    readonly App: "app";
    readonly AppDescription: "appDescription";
    readonly AppEncryptionDeclarationDocument: "appEncryptionDeclarationDocument";
    readonly AppEncryptionDeclarationState: "appEncryptionDeclarationState";
    readonly AvailableOnFrenchStore: "availableOnFrenchStore";
    readonly Builds: "builds";
    readonly CodeValue: "codeValue";
    readonly ContainsProprietaryCryptography: "containsProprietaryCryptography";
    readonly ContainsThirdPartyCryptography: "containsThirdPartyCryptography";
    readonly CreatedDate: "createdDate";
    readonly DocumentName: "documentName";
    readonly DocumentType: "documentType";
    readonly DocumentUrl: "documentUrl";
    readonly Exempt: "exempt";
    readonly Platform: "platform";
    readonly UploadedDate: "uploadedDate";
    readonly UsesEncryption: "usesEncryption";
};
export type BuildsAppEncryptionDeclarationGetToOneRelatedFieldsAppEncryptionDeclarationsEnum = (typeof BuildsAppEncryptionDeclarationGetToOneRelatedFieldsAppEncryptionDeclarationsEnum)[keyof typeof BuildsAppEncryptionDeclarationGetToOneRelatedFieldsAppEncryptionDeclarationsEnum];
/**
 * @export
 */
export declare const BuildsAppGetToOneRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BuildsAppGetToOneRelatedFieldsAppsEnum = (typeof BuildsAppGetToOneRelatedFieldsAppsEnum)[keyof typeof BuildsAppGetToOneRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAgeRatingDeclarationsEnum: {
    readonly AgeRatingOverride: "ageRatingOverride";
    readonly AlcoholTobaccoOrDrugUseOrReferences: "alcoholTobaccoOrDrugUseOrReferences";
    readonly Contests: "contests";
    readonly Gambling: "gambling";
    readonly GamblingAndContests: "gamblingAndContests";
    readonly GamblingSimulated: "gamblingSimulated";
    readonly HorrorOrFearThemes: "horrorOrFearThemes";
    readonly KidsAgeBand: "kidsAgeBand";
    readonly MatureOrSuggestiveThemes: "matureOrSuggestiveThemes";
    readonly MedicalOrTreatmentInformation: "medicalOrTreatmentInformation";
    readonly ProfanityOrCrudeHumor: "profanityOrCrudeHumor";
    readonly SeventeenPlus: "seventeenPlus";
    readonly SexualContentGraphicAndNudity: "sexualContentGraphicAndNudity";
    readonly SexualContentOrNudity: "sexualContentOrNudity";
    readonly UnrestrictedWebAccess: "unrestrictedWebAccess";
    readonly ViolenceCartoonOrFantasy: "violenceCartoonOrFantasy";
    readonly ViolenceRealistic: "violenceRealistic";
    readonly ViolenceRealisticProlongedGraphicOrSadistic: "violenceRealisticProlongedGraphicOrSadistic";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAgeRatingDeclarationsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAgeRatingDeclarationsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAgeRatingDeclarationsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreReviewDetailsEnum: {
    readonly AppStoreReviewAttachments: "appStoreReviewAttachments";
    readonly AppStoreVersion: "appStoreVersion";
    readonly ContactEmail: "contactEmail";
    readonly ContactFirstName: "contactFirstName";
    readonly ContactLastName: "contactLastName";
    readonly ContactPhone: "contactPhone";
    readonly DemoAccountName: "demoAccountName";
    readonly DemoAccountPassword: "demoAccountPassword";
    readonly DemoAccountRequired: "demoAccountRequired";
    readonly Notes: "notes";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreReviewDetailsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreReviewDetailsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreReviewDetailsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionLocalizationsEnum: {
    readonly AppPreviewSets: "appPreviewSets";
    readonly AppScreenshotSets: "appScreenshotSets";
    readonly AppStoreVersion: "appStoreVersion";
    readonly Description: "description";
    readonly Keywords: "keywords";
    readonly Locale: "locale";
    readonly MarketingUrl: "marketingUrl";
    readonly PromotionalText: "promotionalText";
    readonly SupportUrl: "supportUrl";
    readonly WhatsNew: "whatsNew";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionLocalizationsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionLocalizationsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionLocalizationsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionExperimentsEnum: {
    readonly App: "app";
    readonly AppStoreVersion: "appStoreVersion";
    readonly AppStoreVersionExperimentTreatments: "appStoreVersionExperimentTreatments";
    readonly ControlVersions: "controlVersions";
    readonly EndDate: "endDate";
    readonly LatestControlVersion: "latestControlVersion";
    readonly Name: "name";
    readonly Platform: "platform";
    readonly ReviewRequired: "reviewRequired";
    readonly StartDate: "startDate";
    readonly Started: "started";
    readonly State: "state";
    readonly TrafficProportion: "trafficProportion";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionExperimentsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionExperimentsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionExperimentsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionSubmissionsEnum: {
    readonly AppStoreVersion: "appStoreVersion";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionSubmissionsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionSubmissionsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionSubmissionsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAlternativeDistributionPackagesEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly Versions: "versions";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAlternativeDistributionPackagesEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAlternativeDistributionPackagesEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAlternativeDistributionPackagesEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsRoutingAppCoveragesEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly AssetDeliveryState: "assetDeliveryState";
    readonly FileName: "fileName";
    readonly FileSize: "fileSize";
    readonly SourceFileChecksum: "sourceFileChecksum";
    readonly UploadOperations: "uploadOperations";
    readonly Uploaded: "uploaded";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsRoutingAppCoveragesEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsRoutingAppCoveragesEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsRoutingAppCoveragesEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppClipDefaultExperiencesEnum: {
    readonly Action: "action";
    readonly AppClip: "appClip";
    readonly AppClipAppStoreReviewDetail: "appClipAppStoreReviewDetail";
    readonly AppClipDefaultExperienceLocalizations: "appClipDefaultExperienceLocalizations";
    readonly AppClipDefaultExperienceTemplate: "appClipDefaultExperienceTemplate";
    readonly ReleaseWithAppStoreVersion: "releaseWithAppStoreVersion";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppClipDefaultExperiencesEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppClipDefaultExperiencesEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppClipDefaultExperiencesEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionPhasedReleasesEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly CurrentDayNumber: "currentDayNumber";
    readonly PhasedReleaseState: "phasedReleaseState";
    readonly StartDate: "startDate";
    readonly TotalPauseDuration: "totalPauseDuration";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionPhasedReleasesEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionPhasedReleasesEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsAppStoreVersionPhasedReleasesEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildsAppStoreVersionGetToOneRelatedFieldsBuildsEnum = (typeof BuildsAppStoreVersionGetToOneRelatedFieldsBuildsEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildsAppStoreVersionGetToOneRelatedIncludeEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly Build: "build";
    readonly RoutingAppCoverage: "routingAppCoverage";
};
export type BuildsAppStoreVersionGetToOneRelatedIncludeEnum = (typeof BuildsAppStoreVersionGetToOneRelatedIncludeEnum)[keyof typeof BuildsAppStoreVersionGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const BuildsBetaAppReviewSubmissionGetToOneRelatedFieldsBetaAppReviewSubmissionsEnum: {
    readonly BetaReviewState: "betaReviewState";
    readonly Build: "build";
    readonly SubmittedDate: "submittedDate";
};
export type BuildsBetaAppReviewSubmissionGetToOneRelatedFieldsBetaAppReviewSubmissionsEnum = (typeof BuildsBetaAppReviewSubmissionGetToOneRelatedFieldsBetaAppReviewSubmissionsEnum)[keyof typeof BuildsBetaAppReviewSubmissionGetToOneRelatedFieldsBetaAppReviewSubmissionsEnum];
/**
 * @export
 */
export declare const BuildsBetaBuildLocalizationsGetToManyRelatedFieldsBetaBuildLocalizationsEnum: {
    readonly Build: "build";
    readonly Locale: "locale";
    readonly WhatsNew: "whatsNew";
};
export type BuildsBetaBuildLocalizationsGetToManyRelatedFieldsBetaBuildLocalizationsEnum = (typeof BuildsBetaBuildLocalizationsGetToManyRelatedFieldsBetaBuildLocalizationsEnum)[keyof typeof BuildsBetaBuildLocalizationsGetToManyRelatedFieldsBetaBuildLocalizationsEnum];
/**
 * @export
 */
export declare const BuildsBuildBetaDetailGetToOneRelatedFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type BuildsBuildBetaDetailGetToOneRelatedFieldsBuildBetaDetailsEnum = (typeof BuildsBuildBetaDetailGetToOneRelatedFieldsBuildBetaDetailsEnum)[keyof typeof BuildsBuildBetaDetailGetToOneRelatedFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const BuildsBuildBetaDetailGetToOneRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildsBuildBetaDetailGetToOneRelatedFieldsBuildsEnum = (typeof BuildsBuildBetaDetailGetToOneRelatedFieldsBuildsEnum)[keyof typeof BuildsBuildBetaDetailGetToOneRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildsBuildBetaDetailGetToOneRelatedIncludeEnum: {
    readonly Build: "build";
};
export type BuildsBuildBetaDetailGetToOneRelatedIncludeEnum = (typeof BuildsBuildBetaDetailGetToOneRelatedIncludeEnum)[keyof typeof BuildsBuildBetaDetailGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const BuildsDiagnosticSignaturesGetToManyRelatedFilterDiagnosticTypeEnum: {
    readonly DiskWrites: "DISK_WRITES";
    readonly Hangs: "HANGS";
    readonly Launches: "LAUNCHES";
};
export type BuildsDiagnosticSignaturesGetToManyRelatedFilterDiagnosticTypeEnum = (typeof BuildsDiagnosticSignaturesGetToManyRelatedFilterDiagnosticTypeEnum)[keyof typeof BuildsDiagnosticSignaturesGetToManyRelatedFilterDiagnosticTypeEnum];
/**
 * @export
 */
export declare const BuildsDiagnosticSignaturesGetToManyRelatedFieldsDiagnosticSignaturesEnum: {
    readonly DiagnosticType: "diagnosticType";
    readonly Insight: "insight";
    readonly Logs: "logs";
    readonly Signature: "signature";
    readonly Weight: "weight";
};
export type BuildsDiagnosticSignaturesGetToManyRelatedFieldsDiagnosticSignaturesEnum = (typeof BuildsDiagnosticSignaturesGetToManyRelatedFieldsDiagnosticSignaturesEnum)[keyof typeof BuildsDiagnosticSignaturesGetToManyRelatedFieldsDiagnosticSignaturesEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFilterBetaAppReviewSubmissionBetaReviewStateEnum: {
    readonly WaitingForReview: "WAITING_FOR_REVIEW";
    readonly InReview: "IN_REVIEW";
    readonly Rejected: "REJECTED";
    readonly Approved: "APPROVED";
};
export type BuildsGetCollectionFilterBetaAppReviewSubmissionBetaReviewStateEnum = (typeof BuildsGetCollectionFilterBetaAppReviewSubmissionBetaReviewStateEnum)[keyof typeof BuildsGetCollectionFilterBetaAppReviewSubmissionBetaReviewStateEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFilterBuildAudienceTypeEnum: {
    readonly InternalOnly: "INTERNAL_ONLY";
    readonly AppStoreEligible: "APP_STORE_ELIGIBLE";
};
export type BuildsGetCollectionFilterBuildAudienceTypeEnum = (typeof BuildsGetCollectionFilterBuildAudienceTypeEnum)[keyof typeof BuildsGetCollectionFilterBuildAudienceTypeEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFilterPreReleaseVersionPlatformEnum: {
    readonly Ios: "IOS";
    readonly MacOs: "MAC_OS";
    readonly TvOs: "TV_OS";
    readonly VisionOs: "VISION_OS";
};
export type BuildsGetCollectionFilterPreReleaseVersionPlatformEnum = (typeof BuildsGetCollectionFilterPreReleaseVersionPlatformEnum)[keyof typeof BuildsGetCollectionFilterPreReleaseVersionPlatformEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFilterProcessingStateEnum: {
    readonly Processing: "PROCESSING";
    readonly Failed: "FAILED";
    readonly Invalid: "INVALID";
    readonly Valid: "VALID";
};
export type BuildsGetCollectionFilterProcessingStateEnum = (typeof BuildsGetCollectionFilterProcessingStateEnum)[keyof typeof BuildsGetCollectionFilterProcessingStateEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionSortEnum: {
    readonly PreReleaseVersion: "-preReleaseVersion";
    readonly UploadedDate: "-uploadedDate";
    readonly Version: "-version";
};
export type BuildsGetCollectionSortEnum = (typeof BuildsGetCollectionSortEnum)[keyof typeof BuildsGetCollectionSortEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildsGetCollectionFieldsBuildsEnum = (typeof BuildsGetCollectionFieldsBuildsEnum)[keyof typeof BuildsGetCollectionFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionIncludeEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly PreReleaseVersion: "preReleaseVersion";
};
export type BuildsGetCollectionIncludeEnum = (typeof BuildsGetCollectionIncludeEnum)[keyof typeof BuildsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsDiagnosticSignaturesEnum: {
    readonly DiagnosticType: "diagnosticType";
    readonly Insight: "insight";
    readonly Logs: "logs";
    readonly Signature: "signature";
    readonly Weight: "weight";
};
export type BuildsGetCollectionFieldsDiagnosticSignaturesEnum = (typeof BuildsGetCollectionFieldsDiagnosticSignaturesEnum)[keyof typeof BuildsGetCollectionFieldsDiagnosticSignaturesEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBuildIconsEnum: {
    readonly IconAsset: "iconAsset";
    readonly IconType: "iconType";
    readonly Name: "name";
};
export type BuildsGetCollectionFieldsBuildIconsEnum = (typeof BuildsGetCollectionFieldsBuildIconsEnum)[keyof typeof BuildsGetCollectionFieldsBuildIconsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type BuildsGetCollectionFieldsBuildBetaDetailsEnum = (typeof BuildsGetCollectionFieldsBuildBetaDetailsEnum)[keyof typeof BuildsGetCollectionFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBetaAppReviewSubmissionsEnum: {
    readonly BetaReviewState: "betaReviewState";
    readonly Build: "build";
    readonly SubmittedDate: "submittedDate";
};
export type BuildsGetCollectionFieldsBetaAppReviewSubmissionsEnum = (typeof BuildsGetCollectionFieldsBetaAppReviewSubmissionsEnum)[keyof typeof BuildsGetCollectionFieldsBetaAppReviewSubmissionsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BuildsGetCollectionFieldsBetaTestersEnum = (typeof BuildsGetCollectionFieldsBetaTestersEnum)[keyof typeof BuildsGetCollectionFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type BuildsGetCollectionFieldsAppStoreVersionsEnum = (typeof BuildsGetCollectionFieldsAppStoreVersionsEnum)[keyof typeof BuildsGetCollectionFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsBetaBuildLocalizationsEnum: {
    readonly Build: "build";
    readonly Locale: "locale";
    readonly WhatsNew: "whatsNew";
};
export type BuildsGetCollectionFieldsBetaBuildLocalizationsEnum = (typeof BuildsGetCollectionFieldsBetaBuildLocalizationsEnum)[keyof typeof BuildsGetCollectionFieldsBetaBuildLocalizationsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsPreReleaseVersionsEnum: {
    readonly App: "app";
    readonly Builds: "builds";
    readonly Platform: "platform";
    readonly Version: "version";
};
export type BuildsGetCollectionFieldsPreReleaseVersionsEnum = (typeof BuildsGetCollectionFieldsPreReleaseVersionsEnum)[keyof typeof BuildsGetCollectionFieldsPreReleaseVersionsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsAppEncryptionDeclarationsEnum: {
    readonly App: "app";
    readonly AppDescription: "appDescription";
    readonly AppEncryptionDeclarationDocument: "appEncryptionDeclarationDocument";
    readonly AppEncryptionDeclarationState: "appEncryptionDeclarationState";
    readonly AvailableOnFrenchStore: "availableOnFrenchStore";
    readonly Builds: "builds";
    readonly CodeValue: "codeValue";
    readonly ContainsProprietaryCryptography: "containsProprietaryCryptography";
    readonly ContainsThirdPartyCryptography: "containsThirdPartyCryptography";
    readonly CreatedDate: "createdDate";
    readonly DocumentName: "documentName";
    readonly DocumentType: "documentType";
    readonly DocumentUrl: "documentUrl";
    readonly Exempt: "exempt";
    readonly Platform: "platform";
    readonly UploadedDate: "uploadedDate";
    readonly UsesEncryption: "usesEncryption";
};
export type BuildsGetCollectionFieldsAppEncryptionDeclarationsEnum = (typeof BuildsGetCollectionFieldsAppEncryptionDeclarationsEnum)[keyof typeof BuildsGetCollectionFieldsAppEncryptionDeclarationsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BuildsGetCollectionFieldsAppsEnum = (typeof BuildsGetCollectionFieldsAppsEnum)[keyof typeof BuildsGetCollectionFieldsAppsEnum];
/**
 * @export
 */
export declare const BuildsGetCollectionFieldsPerfPowerMetricsEnum: {
    readonly DeviceType: "deviceType";
    readonly MetricType: "metricType";
    readonly Platform: "platform";
};
export type BuildsGetCollectionFieldsPerfPowerMetricsEnum = (typeof BuildsGetCollectionFieldsPerfPowerMetricsEnum)[keyof typeof BuildsGetCollectionFieldsPerfPowerMetricsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type BuildsGetInstanceFieldsBuildsEnum = (typeof BuildsGetInstanceFieldsBuildsEnum)[keyof typeof BuildsGetInstanceFieldsBuildsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceIncludeEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly PreReleaseVersion: "preReleaseVersion";
};
export type BuildsGetInstanceIncludeEnum = (typeof BuildsGetInstanceIncludeEnum)[keyof typeof BuildsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsDiagnosticSignaturesEnum: {
    readonly DiagnosticType: "diagnosticType";
    readonly Insight: "insight";
    readonly Logs: "logs";
    readonly Signature: "signature";
    readonly Weight: "weight";
};
export type BuildsGetInstanceFieldsDiagnosticSignaturesEnum = (typeof BuildsGetInstanceFieldsDiagnosticSignaturesEnum)[keyof typeof BuildsGetInstanceFieldsDiagnosticSignaturesEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBuildIconsEnum: {
    readonly IconAsset: "iconAsset";
    readonly IconType: "iconType";
    readonly Name: "name";
};
export type BuildsGetInstanceFieldsBuildIconsEnum = (typeof BuildsGetInstanceFieldsBuildIconsEnum)[keyof typeof BuildsGetInstanceFieldsBuildIconsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type BuildsGetInstanceFieldsBuildBetaDetailsEnum = (typeof BuildsGetInstanceFieldsBuildBetaDetailsEnum)[keyof typeof BuildsGetInstanceFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBetaAppReviewSubmissionsEnum: {
    readonly BetaReviewState: "betaReviewState";
    readonly Build: "build";
    readonly SubmittedDate: "submittedDate";
};
export type BuildsGetInstanceFieldsBetaAppReviewSubmissionsEnum = (typeof BuildsGetInstanceFieldsBetaAppReviewSubmissionsEnum)[keyof typeof BuildsGetInstanceFieldsBetaAppReviewSubmissionsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BuildsGetInstanceFieldsBetaTestersEnum = (typeof BuildsGetInstanceFieldsBetaTestersEnum)[keyof typeof BuildsGetInstanceFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type BuildsGetInstanceFieldsAppStoreVersionsEnum = (typeof BuildsGetInstanceFieldsAppStoreVersionsEnum)[keyof typeof BuildsGetInstanceFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsBetaBuildLocalizationsEnum: {
    readonly Build: "build";
    readonly Locale: "locale";
    readonly WhatsNew: "whatsNew";
};
export type BuildsGetInstanceFieldsBetaBuildLocalizationsEnum = (typeof BuildsGetInstanceFieldsBetaBuildLocalizationsEnum)[keyof typeof BuildsGetInstanceFieldsBetaBuildLocalizationsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsPreReleaseVersionsEnum: {
    readonly App: "app";
    readonly Builds: "builds";
    readonly Platform: "platform";
    readonly Version: "version";
};
export type BuildsGetInstanceFieldsPreReleaseVersionsEnum = (typeof BuildsGetInstanceFieldsPreReleaseVersionsEnum)[keyof typeof BuildsGetInstanceFieldsPreReleaseVersionsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsAppEncryptionDeclarationsEnum: {
    readonly App: "app";
    readonly AppDescription: "appDescription";
    readonly AppEncryptionDeclarationDocument: "appEncryptionDeclarationDocument";
    readonly AppEncryptionDeclarationState: "appEncryptionDeclarationState";
    readonly AvailableOnFrenchStore: "availableOnFrenchStore";
    readonly Builds: "builds";
    readonly CodeValue: "codeValue";
    readonly ContainsProprietaryCryptography: "containsProprietaryCryptography";
    readonly ContainsThirdPartyCryptography: "containsThirdPartyCryptography";
    readonly CreatedDate: "createdDate";
    readonly DocumentName: "documentName";
    readonly DocumentType: "documentType";
    readonly DocumentUrl: "documentUrl";
    readonly Exempt: "exempt";
    readonly Platform: "platform";
    readonly UploadedDate: "uploadedDate";
    readonly UsesEncryption: "usesEncryption";
};
export type BuildsGetInstanceFieldsAppEncryptionDeclarationsEnum = (typeof BuildsGetInstanceFieldsAppEncryptionDeclarationsEnum)[keyof typeof BuildsGetInstanceFieldsAppEncryptionDeclarationsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type BuildsGetInstanceFieldsAppsEnum = (typeof BuildsGetInstanceFieldsAppsEnum)[keyof typeof BuildsGetInstanceFieldsAppsEnum];
/**
 * @export
 */
export declare const BuildsGetInstanceFieldsPerfPowerMetricsEnum: {
    readonly DeviceType: "deviceType";
    readonly MetricType: "metricType";
    readonly Platform: "platform";
};
export type BuildsGetInstanceFieldsPerfPowerMetricsEnum = (typeof BuildsGetInstanceFieldsPerfPowerMetricsEnum)[keyof typeof BuildsGetInstanceFieldsPerfPowerMetricsEnum];
/**
 * @export
 */
export declare const BuildsIconsGetToManyRelatedFieldsBuildIconsEnum: {
    readonly IconAsset: "iconAsset";
    readonly IconType: "iconType";
    readonly Name: "name";
};
export type BuildsIconsGetToManyRelatedFieldsBuildIconsEnum = (typeof BuildsIconsGetToManyRelatedFieldsBuildIconsEnum)[keyof typeof BuildsIconsGetToManyRelatedFieldsBuildIconsEnum];
/**
 * @export
 */
export declare const BuildsIndividualTestersGetToManyRelatedFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type BuildsIndividualTestersGetToManyRelatedFieldsBetaTestersEnum = (typeof BuildsIndividualTestersGetToManyRelatedFieldsBetaTestersEnum)[keyof typeof BuildsIndividualTestersGetToManyRelatedFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const BuildsPerfPowerMetricsGetToManyRelatedFilterMetricTypeEnum: {
    readonly Disk: "DISK";
    readonly Hang: "HANG";
    readonly Battery: "BATTERY";
    readonly Launch: "LAUNCH";
    readonly Memory: "MEMORY";
    readonly Animation: "ANIMATION";
    readonly Termination: "TERMINATION";
};
export type BuildsPerfPowerMetricsGetToManyRelatedFilterMetricTypeEnum = (typeof BuildsPerfPowerMetricsGetToManyRelatedFilterMetricTypeEnum)[keyof typeof BuildsPerfPowerMetricsGetToManyRelatedFilterMetricTypeEnum];
/**
 * @export
 */
export declare const BuildsPerfPowerMetricsGetToManyRelatedFilterPlatformEnum: {
    readonly Ios: "IOS";
};
export type BuildsPerfPowerMetricsGetToManyRelatedFilterPlatformEnum = (typeof BuildsPerfPowerMetricsGetToManyRelatedFilterPlatformEnum)[keyof typeof BuildsPerfPowerMetricsGetToManyRelatedFilterPlatformEnum];
/**
 * @export
 */
export declare const BuildsPreReleaseVersionGetToOneRelatedFieldsPreReleaseVersionsEnum: {
    readonly App: "app";
    readonly Builds: "builds";
    readonly Platform: "platform";
    readonly Version: "version";
};
export type BuildsPreReleaseVersionGetToOneRelatedFieldsPreReleaseVersionsEnum = (typeof BuildsPreReleaseVersionGetToOneRelatedFieldsPreReleaseVersionsEnum)[keyof typeof BuildsPreReleaseVersionGetToOneRelatedFieldsPreReleaseVersionsEnum];
