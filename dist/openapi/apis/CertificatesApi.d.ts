/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { CertificateCreateRequest, CertificateResponse, CertificatesResponse } from "../models";
export interface CertificatesCreateInstanceRequest {
    certificateCreateRequest: CertificateCreateRequest;
}
export interface CertificatesDeleteInstanceRequest {
    id: string;
}
export interface CertificatesGetCollectionRequest {
    filterCertificateType?: Array<CertificatesGetCollectionFilterCertificateTypeEnum>;
    filterDisplayName?: Array<string>;
    filterSerialNumber?: Array<string>;
    filterId?: Array<string>;
    sort?: Array<CertificatesGetCollectionSortEnum>;
    fieldsCertificates?: Array<CertificatesGetCollectionFieldsCertificatesEnum>;
    limit?: number;
}
export interface CertificatesGetInstanceRequest {
    id: string;
    fieldsCertificates?: Array<CertificatesGetInstanceFieldsCertificatesEnum>;
}
/**
 *
 */
export declare class CertificatesApi extends runtime.BaseAPI {
    /**
     */
    certificatesCreateInstanceRaw(requestParameters: CertificatesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CertificateResponse>>;
    /**
     */
    certificatesCreateInstance(requestParameters: CertificatesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CertificateResponse>;
    /**
     */
    certificatesDeleteInstanceRaw(requestParameters: CertificatesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    certificatesDeleteInstance(requestParameters: CertificatesDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    certificatesGetCollectionRaw(requestParameters: CertificatesGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CertificatesResponse>>;
    /**
     */
    certificatesGetCollection(requestParameters?: CertificatesGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CertificatesResponse>;
    /**
     */
    certificatesGetInstanceRaw(requestParameters: CertificatesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CertificateResponse>>;
    /**
     */
    certificatesGetInstance(requestParameters: CertificatesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CertificateResponse>;
}
/**
 * @export
 */
export declare const CertificatesGetCollectionFilterCertificateTypeEnum: {
    readonly IosDevelopment: "IOS_DEVELOPMENT";
    readonly IosDistribution: "IOS_DISTRIBUTION";
    readonly MacAppDistribution: "MAC_APP_DISTRIBUTION";
    readonly MacInstallerDistribution: "MAC_INSTALLER_DISTRIBUTION";
    readonly MacAppDevelopment: "MAC_APP_DEVELOPMENT";
    readonly DeveloperIdKext: "DEVELOPER_ID_KEXT";
    readonly DeveloperIdApplication: "DEVELOPER_ID_APPLICATION";
    readonly Development: "DEVELOPMENT";
    readonly Distribution: "DISTRIBUTION";
    readonly PassTypeId: "PASS_TYPE_ID";
    readonly PassTypeIdWithNfc: "PASS_TYPE_ID_WITH_NFC";
};
export type CertificatesGetCollectionFilterCertificateTypeEnum = (typeof CertificatesGetCollectionFilterCertificateTypeEnum)[keyof typeof CertificatesGetCollectionFilterCertificateTypeEnum];
/**
 * @export
 */
export declare const CertificatesGetCollectionSortEnum: {
    readonly CertificateType: "-certificateType";
    readonly DisplayName: "-displayName";
    readonly Id: "-id";
    readonly SerialNumber: "-serialNumber";
};
export type CertificatesGetCollectionSortEnum = (typeof CertificatesGetCollectionSortEnum)[keyof typeof CertificatesGetCollectionSortEnum];
/**
 * @export
 */
export declare const CertificatesGetCollectionFieldsCertificatesEnum: {
    readonly CertificateContent: "certificateContent";
    readonly CertificateType: "certificateType";
    readonly CsrContent: "csrContent";
    readonly DisplayName: "displayName";
    readonly ExpirationDate: "expirationDate";
    readonly Name: "name";
    readonly Platform: "platform";
    readonly SerialNumber: "serialNumber";
};
export type CertificatesGetCollectionFieldsCertificatesEnum = (typeof CertificatesGetCollectionFieldsCertificatesEnum)[keyof typeof CertificatesGetCollectionFieldsCertificatesEnum];
/**
 * @export
 */
export declare const CertificatesGetInstanceFieldsCertificatesEnum: {
    readonly CertificateContent: "certificateContent";
    readonly CertificateType: "certificateType";
    readonly CsrContent: "csrContent";
    readonly DisplayName: "displayName";
    readonly ExpirationDate: "expirationDate";
    readonly Name: "name";
    readonly Platform: "platform";
    readonly SerialNumber: "serialNumber";
};
export type CertificatesGetInstanceFieldsCertificatesEnum = (typeof CertificatesGetInstanceFieldsCertificatesEnum)[keyof typeof CertificatesGetInstanceFieldsCertificatesEnum];
