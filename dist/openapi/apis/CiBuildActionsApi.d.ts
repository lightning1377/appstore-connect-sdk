/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { CiArtifactsResponse, CiBuildActionResponse, CiBuildRunResponse, CiIssuesResponse, CiTestResultsResponse } from "../models";
export interface CiBuildActionsArtifactsGetToManyRelatedRequest {
    id: string;
    fieldsCiArtifacts?: Array<CiBuildActionsArtifactsGetToManyRelatedFieldsCiArtifactsEnum>;
    limit?: number;
}
export interface CiBuildActionsBuildRunGetToOneRelatedRequest {
    id: string;
    fieldsScmGitReferences?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsScmGitReferencesEnum>;
    fieldsCiBuildRuns?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsCiBuildRunsEnum>;
    fieldsCiWorkflows?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsCiWorkflowsEnum>;
    fieldsScmPullRequests?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsScmPullRequestsEnum>;
    fieldsCiProducts?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsCiProductsEnum>;
    fieldsBuilds?: Array<CiBuildActionsBuildRunGetToOneRelatedFieldsBuildsEnum>;
    limitBuilds?: number;
    include?: Array<CiBuildActionsBuildRunGetToOneRelatedIncludeEnum>;
}
export interface CiBuildActionsGetInstanceRequest {
    id: string;
    fieldsCiBuildActions?: Array<CiBuildActionsGetInstanceFieldsCiBuildActionsEnum>;
    include?: Array<CiBuildActionsGetInstanceIncludeEnum>;
    fieldsCiIssues?: Array<CiBuildActionsGetInstanceFieldsCiIssuesEnum>;
    fieldsCiBuildRuns?: Array<CiBuildActionsGetInstanceFieldsCiBuildRunsEnum>;
    fieldsCiTestResults?: Array<CiBuildActionsGetInstanceFieldsCiTestResultsEnum>;
    fieldsCiArtifacts?: Array<CiBuildActionsGetInstanceFieldsCiArtifactsEnum>;
}
export interface CiBuildActionsIssuesGetToManyRelatedRequest {
    id: string;
    fieldsCiIssues?: Array<CiBuildActionsIssuesGetToManyRelatedFieldsCiIssuesEnum>;
    limit?: number;
}
export interface CiBuildActionsTestResultsGetToManyRelatedRequest {
    id: string;
    fieldsCiTestResults?: Array<CiBuildActionsTestResultsGetToManyRelatedFieldsCiTestResultsEnum>;
    limit?: number;
}
/**
 *
 */
export declare class CiBuildActionsApi extends runtime.BaseAPI {
    /**
     */
    ciBuildActionsArtifactsGetToManyRelatedRaw(requestParameters: CiBuildActionsArtifactsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiArtifactsResponse>>;
    /**
     */
    ciBuildActionsArtifactsGetToManyRelated(requestParameters: CiBuildActionsArtifactsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiArtifactsResponse>;
    /**
     */
    ciBuildActionsBuildRunGetToOneRelatedRaw(requestParameters: CiBuildActionsBuildRunGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildRunResponse>>;
    /**
     */
    ciBuildActionsBuildRunGetToOneRelated(requestParameters: CiBuildActionsBuildRunGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildRunResponse>;
    /**
     */
    ciBuildActionsGetInstanceRaw(requestParameters: CiBuildActionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildActionResponse>>;
    /**
     */
    ciBuildActionsGetInstance(requestParameters: CiBuildActionsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildActionResponse>;
    /**
     */
    ciBuildActionsIssuesGetToManyRelatedRaw(requestParameters: CiBuildActionsIssuesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiIssuesResponse>>;
    /**
     */
    ciBuildActionsIssuesGetToManyRelated(requestParameters: CiBuildActionsIssuesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiIssuesResponse>;
    /**
     */
    ciBuildActionsTestResultsGetToManyRelatedRaw(requestParameters: CiBuildActionsTestResultsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiTestResultsResponse>>;
    /**
     */
    ciBuildActionsTestResultsGetToManyRelated(requestParameters: CiBuildActionsTestResultsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiTestResultsResponse>;
}
/**
 * @export
 */
export declare const CiBuildActionsArtifactsGetToManyRelatedFieldsCiArtifactsEnum: {
    readonly DownloadUrl: "downloadUrl";
    readonly FileName: "fileName";
    readonly FileSize: "fileSize";
    readonly FileType: "fileType";
};
export type CiBuildActionsArtifactsGetToManyRelatedFieldsCiArtifactsEnum = (typeof CiBuildActionsArtifactsGetToManyRelatedFieldsCiArtifactsEnum)[keyof typeof CiBuildActionsArtifactsGetToManyRelatedFieldsCiArtifactsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsScmGitReferencesEnum: {
    readonly CanonicalName: "canonicalName";
    readonly IsDeleted: "isDeleted";
    readonly Kind: "kind";
    readonly Name: "name";
    readonly Repository: "repository";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsScmGitReferencesEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsScmGitReferencesEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsScmGitReferencesEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsCiBuildRunsEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiBuildRunsEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsCiWorkflowsEnum: {
    readonly Actions: "actions";
    readonly BranchStartCondition: "branchStartCondition";
    readonly BuildRuns: "buildRuns";
    readonly Clean: "clean";
    readonly ContainerFilePath: "containerFilePath";
    readonly Description: "description";
    readonly IsEnabled: "isEnabled";
    readonly IsLockedForEditing: "isLockedForEditing";
    readonly LastModifiedDate: "lastModifiedDate";
    readonly MacOsVersion: "macOsVersion";
    readonly ManualBranchStartCondition: "manualBranchStartCondition";
    readonly ManualPullRequestStartCondition: "manualPullRequestStartCondition";
    readonly ManualTagStartCondition: "manualTagStartCondition";
    readonly Name: "name";
    readonly Product: "product";
    readonly PullRequestStartCondition: "pullRequestStartCondition";
    readonly Repository: "repository";
    readonly ScheduledStartCondition: "scheduledStartCondition";
    readonly TagStartCondition: "tagStartCondition";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsCiWorkflowsEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiWorkflowsEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiWorkflowsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsScmPullRequestsEnum: {
    readonly DestinationBranchName: "destinationBranchName";
    readonly DestinationRepositoryName: "destinationRepositoryName";
    readonly DestinationRepositoryOwner: "destinationRepositoryOwner";
    readonly IsClosed: "isClosed";
    readonly IsCrossRepository: "isCrossRepository";
    readonly Number: "number";
    readonly Repository: "repository";
    readonly SourceBranchName: "sourceBranchName";
    readonly SourceRepositoryName: "sourceRepositoryName";
    readonly SourceRepositoryOwner: "sourceRepositoryOwner";
    readonly Title: "title";
    readonly WebUrl: "webUrl";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsScmPullRequestsEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsScmPullRequestsEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsScmPullRequestsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsCiProductsEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiProductsEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type CiBuildActionsBuildRunGetToOneRelatedFieldsBuildsEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedFieldsBuildsEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const CiBuildActionsBuildRunGetToOneRelatedIncludeEnum: {
    readonly Builds: "builds";
    readonly DestinationBranch: "destinationBranch";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly Workflow: "workflow";
};
export type CiBuildActionsBuildRunGetToOneRelatedIncludeEnum = (typeof CiBuildActionsBuildRunGetToOneRelatedIncludeEnum)[keyof typeof CiBuildActionsBuildRunGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceFieldsCiBuildActionsEnum: {
    readonly ActionType: "actionType";
    readonly Artifacts: "artifacts";
    readonly BuildRun: "buildRun";
    readonly CompletionStatus: "completionStatus";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsRequiredToPass: "isRequiredToPass";
    readonly IssueCounts: "issueCounts";
    readonly Issues: "issues";
    readonly Name: "name";
    readonly StartedDate: "startedDate";
    readonly TestResults: "testResults";
};
export type CiBuildActionsGetInstanceFieldsCiBuildActionsEnum = (typeof CiBuildActionsGetInstanceFieldsCiBuildActionsEnum)[keyof typeof CiBuildActionsGetInstanceFieldsCiBuildActionsEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceIncludeEnum: {
    readonly BuildRun: "buildRun";
};
export type CiBuildActionsGetInstanceIncludeEnum = (typeof CiBuildActionsGetInstanceIncludeEnum)[keyof typeof CiBuildActionsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceFieldsCiIssuesEnum: {
    readonly Category: "category";
    readonly FileSource: "fileSource";
    readonly IssueType: "issueType";
    readonly Message: "message";
};
export type CiBuildActionsGetInstanceFieldsCiIssuesEnum = (typeof CiBuildActionsGetInstanceFieldsCiIssuesEnum)[keyof typeof CiBuildActionsGetInstanceFieldsCiIssuesEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiBuildActionsGetInstanceFieldsCiBuildRunsEnum = (typeof CiBuildActionsGetInstanceFieldsCiBuildRunsEnum)[keyof typeof CiBuildActionsGetInstanceFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceFieldsCiTestResultsEnum: {
    readonly ClassName: "className";
    readonly DestinationTestResults: "destinationTestResults";
    readonly FileSource: "fileSource";
    readonly Message: "message";
    readonly Name: "name";
    readonly Status: "status";
};
export type CiBuildActionsGetInstanceFieldsCiTestResultsEnum = (typeof CiBuildActionsGetInstanceFieldsCiTestResultsEnum)[keyof typeof CiBuildActionsGetInstanceFieldsCiTestResultsEnum];
/**
 * @export
 */
export declare const CiBuildActionsGetInstanceFieldsCiArtifactsEnum: {
    readonly DownloadUrl: "downloadUrl";
    readonly FileName: "fileName";
    readonly FileSize: "fileSize";
    readonly FileType: "fileType";
};
export type CiBuildActionsGetInstanceFieldsCiArtifactsEnum = (typeof CiBuildActionsGetInstanceFieldsCiArtifactsEnum)[keyof typeof CiBuildActionsGetInstanceFieldsCiArtifactsEnum];
/**
 * @export
 */
export declare const CiBuildActionsIssuesGetToManyRelatedFieldsCiIssuesEnum: {
    readonly Category: "category";
    readonly FileSource: "fileSource";
    readonly IssueType: "issueType";
    readonly Message: "message";
};
export type CiBuildActionsIssuesGetToManyRelatedFieldsCiIssuesEnum = (typeof CiBuildActionsIssuesGetToManyRelatedFieldsCiIssuesEnum)[keyof typeof CiBuildActionsIssuesGetToManyRelatedFieldsCiIssuesEnum];
/**
 * @export
 */
export declare const CiBuildActionsTestResultsGetToManyRelatedFieldsCiTestResultsEnum: {
    readonly ClassName: "className";
    readonly DestinationTestResults: "destinationTestResults";
    readonly FileSource: "fileSource";
    readonly Message: "message";
    readonly Name: "name";
    readonly Status: "status";
};
export type CiBuildActionsTestResultsGetToManyRelatedFieldsCiTestResultsEnum = (typeof CiBuildActionsTestResultsGetToManyRelatedFieldsCiTestResultsEnum)[keyof typeof CiBuildActionsTestResultsGetToManyRelatedFieldsCiTestResultsEnum];
