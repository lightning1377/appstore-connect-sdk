/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { BuildsResponse, CiBuildActionsResponse, CiBuildRunCreateRequest, CiBuildRunResponse } from "../models";
export interface CiBuildRunsActionsGetToManyRelatedRequest {
    id: string;
    fieldsCiBuildRuns?: Array<CiBuildRunsActionsGetToManyRelatedFieldsCiBuildRunsEnum>;
    fieldsCiBuildActions?: Array<CiBuildRunsActionsGetToManyRelatedFieldsCiBuildActionsEnum>;
    limit?: number;
    include?: Array<CiBuildRunsActionsGetToManyRelatedIncludeEnum>;
}
export interface CiBuildRunsBuildsGetToManyRelatedRequest {
    id: string;
    filterBetaAppReviewSubmissionBetaReviewState?: Array<CiBuildRunsBuildsGetToManyRelatedFilterBetaAppReviewSubmissionBetaReviewStateEnum>;
    filterBuildAudienceType?: Array<CiBuildRunsBuildsGetToManyRelatedFilterBuildAudienceTypeEnum>;
    filterExpired?: Array<string>;
    filterPreReleaseVersionPlatform?: Array<CiBuildRunsBuildsGetToManyRelatedFilterPreReleaseVersionPlatformEnum>;
    filterPreReleaseVersionVersion?: Array<string>;
    filterProcessingState?: Array<CiBuildRunsBuildsGetToManyRelatedFilterProcessingStateEnum>;
    filterUsesNonExemptEncryption?: Array<string>;
    filterVersion?: Array<string>;
    filterApp?: Array<string>;
    filterAppStoreVersion?: Array<string>;
    filterBetaGroups?: Array<string>;
    filterPreReleaseVersion?: Array<string>;
    filterId?: Array<string>;
    sort?: Array<CiBuildRunsBuildsGetToManyRelatedSortEnum>;
    fieldsBuildBundles?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBuildBundlesEnum>;
    fieldsBuildIcons?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBuildIconsEnum>;
    fieldsBetaAppReviewSubmissions?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBetaAppReviewSubmissionsEnum>;
    fieldsBuildBetaDetails?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBuildBetaDetailsEnum>;
    fieldsBetaTesters?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBetaTestersEnum>;
    fieldsPreReleaseVersions?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsPreReleaseVersionsEnum>;
    fieldsBetaBuildLocalizations?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBetaBuildLocalizationsEnum>;
    fieldsAppStoreVersions?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsAppStoreVersionsEnum>;
    fieldsAppEncryptionDeclarations?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsAppEncryptionDeclarationsEnum>;
    fieldsApps?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsAppsEnum>;
    fieldsBuilds?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBuildsEnum>;
    fieldsBetaGroups?: Array<CiBuildRunsBuildsGetToManyRelatedFieldsBetaGroupsEnum>;
    limit?: number;
    limitIndividualTesters?: number;
    limitBetaGroups?: number;
    limitBetaBuildLocalizations?: number;
    limitIcons?: number;
    limitBuildBundles?: number;
    include?: Array<CiBuildRunsBuildsGetToManyRelatedIncludeEnum>;
}
export interface CiBuildRunsCreateInstanceRequest {
    ciBuildRunCreateRequest: CiBuildRunCreateRequest;
}
export interface CiBuildRunsGetInstanceRequest {
    id: string;
    fieldsCiBuildRuns?: Array<CiBuildRunsGetInstanceFieldsCiBuildRunsEnum>;
    include?: Array<CiBuildRunsGetInstanceIncludeEnum>;
    fieldsCiBuildActions?: Array<CiBuildRunsGetInstanceFieldsCiBuildActionsEnum>;
    fieldsBuilds?: Array<CiBuildRunsGetInstanceFieldsBuildsEnum>;
    limitBuilds?: number;
}
/**
 *
 */
export declare class CiBuildRunsApi extends runtime.BaseAPI {
    /**
     */
    ciBuildRunsActionsGetToManyRelatedRaw(requestParameters: CiBuildRunsActionsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildActionsResponse>>;
    /**
     */
    ciBuildRunsActionsGetToManyRelated(requestParameters: CiBuildRunsActionsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildActionsResponse>;
    /**
     */
    ciBuildRunsBuildsGetToManyRelatedRaw(requestParameters: CiBuildRunsBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BuildsResponse>>;
    /**
     */
    ciBuildRunsBuildsGetToManyRelated(requestParameters: CiBuildRunsBuildsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BuildsResponse>;
    /**
     */
    ciBuildRunsCreateInstanceRaw(requestParameters: CiBuildRunsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildRunResponse>>;
    /**
     */
    ciBuildRunsCreateInstance(requestParameters: CiBuildRunsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildRunResponse>;
    /**
     */
    ciBuildRunsGetInstanceRaw(requestParameters: CiBuildRunsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildRunResponse>>;
    /**
     */
    ciBuildRunsGetInstance(requestParameters: CiBuildRunsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildRunResponse>;
}
/**
 * @export
 */
export declare const CiBuildRunsActionsGetToManyRelatedFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiBuildRunsActionsGetToManyRelatedFieldsCiBuildRunsEnum = (typeof CiBuildRunsActionsGetToManyRelatedFieldsCiBuildRunsEnum)[keyof typeof CiBuildRunsActionsGetToManyRelatedFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiBuildRunsActionsGetToManyRelatedFieldsCiBuildActionsEnum: {
    readonly ActionType: "actionType";
    readonly Artifacts: "artifacts";
    readonly BuildRun: "buildRun";
    readonly CompletionStatus: "completionStatus";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsRequiredToPass: "isRequiredToPass";
    readonly IssueCounts: "issueCounts";
    readonly Issues: "issues";
    readonly Name: "name";
    readonly StartedDate: "startedDate";
    readonly TestResults: "testResults";
};
export type CiBuildRunsActionsGetToManyRelatedFieldsCiBuildActionsEnum = (typeof CiBuildRunsActionsGetToManyRelatedFieldsCiBuildActionsEnum)[keyof typeof CiBuildRunsActionsGetToManyRelatedFieldsCiBuildActionsEnum];
/**
 * @export
 */
export declare const CiBuildRunsActionsGetToManyRelatedIncludeEnum: {
    readonly BuildRun: "buildRun";
};
export type CiBuildRunsActionsGetToManyRelatedIncludeEnum = (typeof CiBuildRunsActionsGetToManyRelatedIncludeEnum)[keyof typeof CiBuildRunsActionsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFilterBetaAppReviewSubmissionBetaReviewStateEnum: {
    readonly WaitingForReview: "WAITING_FOR_REVIEW";
    readonly InReview: "IN_REVIEW";
    readonly Rejected: "REJECTED";
    readonly Approved: "APPROVED";
};
export type CiBuildRunsBuildsGetToManyRelatedFilterBetaAppReviewSubmissionBetaReviewStateEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFilterBetaAppReviewSubmissionBetaReviewStateEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFilterBetaAppReviewSubmissionBetaReviewStateEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFilterBuildAudienceTypeEnum: {
    readonly InternalOnly: "INTERNAL_ONLY";
    readonly AppStoreEligible: "APP_STORE_ELIGIBLE";
};
export type CiBuildRunsBuildsGetToManyRelatedFilterBuildAudienceTypeEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFilterBuildAudienceTypeEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFilterBuildAudienceTypeEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFilterPreReleaseVersionPlatformEnum: {
    readonly Ios: "IOS";
    readonly MacOs: "MAC_OS";
    readonly TvOs: "TV_OS";
    readonly VisionOs: "VISION_OS";
};
export type CiBuildRunsBuildsGetToManyRelatedFilterPreReleaseVersionPlatformEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFilterPreReleaseVersionPlatformEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFilterPreReleaseVersionPlatformEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFilterProcessingStateEnum: {
    readonly Processing: "PROCESSING";
    readonly Failed: "FAILED";
    readonly Invalid: "INVALID";
    readonly Valid: "VALID";
};
export type CiBuildRunsBuildsGetToManyRelatedFilterProcessingStateEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFilterProcessingStateEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFilterProcessingStateEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedSortEnum: {
    readonly PreReleaseVersion: "-preReleaseVersion";
    readonly UploadedDate: "-uploadedDate";
    readonly Version: "-version";
};
export type CiBuildRunsBuildsGetToManyRelatedSortEnum = (typeof CiBuildRunsBuildsGetToManyRelatedSortEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedSortEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBuildBundlesEnum: {
    readonly AppClipDomainCacheStatus: "appClipDomainCacheStatus";
    readonly AppClipDomainDebugStatus: "appClipDomainDebugStatus";
    readonly BetaAppClipInvocations: "betaAppClipInvocations";
    readonly BuildBundleFileSizes: "buildBundleFileSizes";
    readonly BundleId: "bundleId";
    readonly BundleType: "bundleType";
    readonly DSymUrl: "dSYMUrl";
    readonly DeviceProtocols: "deviceProtocols";
    readonly Entitlements: "entitlements";
    readonly FileName: "fileName";
    readonly HasOnDemandResources: "hasOnDemandResources";
    readonly HasPrerenderedIcon: "hasPrerenderedIcon";
    readonly HasSirikit: "hasSirikit";
    readonly IncludesSymbols: "includesSymbols";
    readonly IsIosBuildMacAppStoreCompatible: "isIosBuildMacAppStoreCompatible";
    readonly Locales: "locales";
    readonly PlatformBuild: "platformBuild";
    readonly RequiredCapabilities: "requiredCapabilities";
    readonly SdkBuild: "sdkBuild";
    readonly SupportedArchitectures: "supportedArchitectures";
    readonly UsesLocationServices: "usesLocationServices";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBuildBundlesEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildBundlesEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildBundlesEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBuildIconsEnum: {
    readonly IconAsset: "iconAsset";
    readonly IconType: "iconType";
    readonly Name: "name";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBuildIconsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildIconsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildIconsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBetaAppReviewSubmissionsEnum: {
    readonly BetaReviewState: "betaReviewState";
    readonly Build: "build";
    readonly SubmittedDate: "submittedDate";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBetaAppReviewSubmissionsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaAppReviewSubmissionsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaAppReviewSubmissionsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBuildBetaDetailsEnum: {
    readonly AutoNotifyEnabled: "autoNotifyEnabled";
    readonly Build: "build";
    readonly ExternalBuildState: "externalBuildState";
    readonly InternalBuildState: "internalBuildState";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBuildBetaDetailsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildBetaDetailsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildBetaDetailsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBetaTestersEnum: {
    readonly Apps: "apps";
    readonly BetaGroups: "betaGroups";
    readonly Builds: "builds";
    readonly Email: "email";
    readonly FirstName: "firstName";
    readonly InviteType: "inviteType";
    readonly LastName: "lastName";
    readonly State: "state";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBetaTestersEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaTestersEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaTestersEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsPreReleaseVersionsEnum: {
    readonly App: "app";
    readonly Builds: "builds";
    readonly Platform: "platform";
    readonly Version: "version";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsPreReleaseVersionsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsPreReleaseVersionsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsPreReleaseVersionsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBetaBuildLocalizationsEnum: {
    readonly Build: "build";
    readonly Locale: "locale";
    readonly WhatsNew: "whatsNew";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBetaBuildLocalizationsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaBuildLocalizationsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaBuildLocalizationsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsAppStoreVersionsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppStoreVersionsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsAppEncryptionDeclarationsEnum: {
    readonly App: "app";
    readonly AppDescription: "appDescription";
    readonly AppEncryptionDeclarationDocument: "appEncryptionDeclarationDocument";
    readonly AppEncryptionDeclarationState: "appEncryptionDeclarationState";
    readonly AvailableOnFrenchStore: "availableOnFrenchStore";
    readonly Builds: "builds";
    readonly CodeValue: "codeValue";
    readonly ContainsProprietaryCryptography: "containsProprietaryCryptography";
    readonly ContainsThirdPartyCryptography: "containsThirdPartyCryptography";
    readonly CreatedDate: "createdDate";
    readonly DocumentName: "documentName";
    readonly DocumentType: "documentType";
    readonly DocumentUrl: "documentUrl";
    readonly Exempt: "exempt";
    readonly Platform: "platform";
    readonly UploadedDate: "uploadedDate";
    readonly UsesEncryption: "usesEncryption";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsAppEncryptionDeclarationsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppEncryptionDeclarationsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppEncryptionDeclarationsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsAppsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBuildsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type CiBuildRunsBuildsGetToManyRelatedFieldsBetaGroupsEnum = (typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaGroupsEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const CiBuildRunsBuildsGetToManyRelatedIncludeEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly PreReleaseVersion: "preReleaseVersion";
};
export type CiBuildRunsBuildsGetToManyRelatedIncludeEnum = (typeof CiBuildRunsBuildsGetToManyRelatedIncludeEnum)[keyof typeof CiBuildRunsBuildsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiBuildRunsGetInstanceFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiBuildRunsGetInstanceFieldsCiBuildRunsEnum = (typeof CiBuildRunsGetInstanceFieldsCiBuildRunsEnum)[keyof typeof CiBuildRunsGetInstanceFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiBuildRunsGetInstanceIncludeEnum: {
    readonly Builds: "builds";
    readonly DestinationBranch: "destinationBranch";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly Workflow: "workflow";
};
export type CiBuildRunsGetInstanceIncludeEnum = (typeof CiBuildRunsGetInstanceIncludeEnum)[keyof typeof CiBuildRunsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const CiBuildRunsGetInstanceFieldsCiBuildActionsEnum: {
    readonly ActionType: "actionType";
    readonly Artifacts: "artifacts";
    readonly BuildRun: "buildRun";
    readonly CompletionStatus: "completionStatus";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsRequiredToPass: "isRequiredToPass";
    readonly IssueCounts: "issueCounts";
    readonly Issues: "issues";
    readonly Name: "name";
    readonly StartedDate: "startedDate";
    readonly TestResults: "testResults";
};
export type CiBuildRunsGetInstanceFieldsCiBuildActionsEnum = (typeof CiBuildRunsGetInstanceFieldsCiBuildActionsEnum)[keyof typeof CiBuildRunsGetInstanceFieldsCiBuildActionsEnum];
/**
 * @export
 */
export declare const CiBuildRunsGetInstanceFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type CiBuildRunsGetInstanceFieldsBuildsEnum = (typeof CiBuildRunsGetInstanceFieldsBuildsEnum)[keyof typeof CiBuildRunsGetInstanceFieldsBuildsEnum];
