/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AppResponse, CiBuildRunsResponse, CiProductResponse, CiProductsResponse, CiWorkflowsResponse, ScmRepositoriesResponse } from "../models";
export interface CiProductsAdditionalRepositoriesGetToManyRelatedRequest {
    id: string;
    filterId?: Array<string>;
    fieldsScmGitReferences?: Array<CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum>;
    fieldsScmProviders?: Array<CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmProvidersEnum>;
    fieldsScmRepositories?: Array<CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum>;
    limit?: number;
    include?: Array<CiProductsAdditionalRepositoriesGetToManyRelatedIncludeEnum>;
}
export interface CiProductsAppGetToOneRelatedRequest {
    id: string;
    fieldsBetaAppReviewDetails?: Array<CiProductsAppGetToOneRelatedFieldsBetaAppReviewDetailsEnum>;
    fieldsGameCenterDetails?: Array<CiProductsAppGetToOneRelatedFieldsGameCenterDetailsEnum>;
    fieldsCiProducts?: Array<CiProductsAppGetToOneRelatedFieldsCiProductsEnum>;
    fieldsReviewSubmissions?: Array<CiProductsAppGetToOneRelatedFieldsReviewSubmissionsEnum>;
    fieldsBetaGroups?: Array<CiProductsAppGetToOneRelatedFieldsBetaGroupsEnum>;
    fieldsPromotedPurchases?: Array<CiProductsAppGetToOneRelatedFieldsPromotedPurchasesEnum>;
    fieldsApps?: Array<CiProductsAppGetToOneRelatedFieldsAppsEnum>;
    fieldsAppEvents?: Array<CiProductsAppGetToOneRelatedFieldsAppEventsEnum>;
    fieldsBuilds?: Array<CiProductsAppGetToOneRelatedFieldsBuildsEnum>;
    fieldsBetaLicenseAgreements?: Array<CiProductsAppGetToOneRelatedFieldsBetaLicenseAgreementsEnum>;
    fieldsAppClips?: Array<CiProductsAppGetToOneRelatedFieldsAppClipsEnum>;
    fieldsBetaAppLocalizations?: Array<CiProductsAppGetToOneRelatedFieldsBetaAppLocalizationsEnum>;
    fieldsAppInfos?: Array<CiProductsAppGetToOneRelatedFieldsAppInfosEnum>;
    fieldsPreReleaseVersions?: Array<CiProductsAppGetToOneRelatedFieldsPreReleaseVersionsEnum>;
    fieldsInAppPurchases?: Array<CiProductsAppGetToOneRelatedFieldsInAppPurchasesEnum>;
    fieldsSubscriptionGroups?: Array<CiProductsAppGetToOneRelatedFieldsSubscriptionGroupsEnum>;
    fieldsAppPreOrders?: Array<CiProductsAppGetToOneRelatedFieldsAppPreOrdersEnum>;
    fieldsGameCenterEnabledVersions?: Array<CiProductsAppGetToOneRelatedFieldsGameCenterEnabledVersionsEnum>;
    fieldsAppStoreVersionExperiments?: Array<CiProductsAppGetToOneRelatedFieldsAppStoreVersionExperimentsEnum>;
    fieldsSubscriptionGracePeriods?: Array<CiProductsAppGetToOneRelatedFieldsSubscriptionGracePeriodsEnum>;
    fieldsEndUserLicenseAgreements?: Array<CiProductsAppGetToOneRelatedFieldsEndUserLicenseAgreementsEnum>;
    fieldsAppStoreVersions?: Array<CiProductsAppGetToOneRelatedFieldsAppStoreVersionsEnum>;
    fieldsAppEncryptionDeclarations?: Array<CiProductsAppGetToOneRelatedFieldsAppEncryptionDeclarationsEnum>;
    fieldsAppCustomProductPages?: Array<CiProductsAppGetToOneRelatedFieldsAppCustomProductPagesEnum>;
    limitAppEncryptionDeclarations?: number;
    limitBetaGroups?: number;
    limitAppStoreVersions?: number;
    limitPreReleaseVersions?: number;
    limitBetaAppLocalizations?: number;
    limitBuilds?: number;
    limitAppInfos?: number;
    limitAppClips?: number;
    limitInAppPurchases?: number;
    limitSubscriptionGroups?: number;
    limitGameCenterEnabledVersions?: number;
    limitAppCustomProductPages?: number;
    limitInAppPurchasesV2?: number;
    limitPromotedPurchases?: number;
    limitAppEvents?: number;
    limitReviewSubmissions?: number;
    limitAppStoreVersionExperimentsV2?: number;
    include?: Array<CiProductsAppGetToOneRelatedIncludeEnum>;
}
export interface CiProductsBuildRunsGetToManyRelatedRequest {
    id: string;
    filterBuilds?: Array<string>;
    sort?: Array<CiProductsBuildRunsGetToManyRelatedSortEnum>;
    fieldsScmGitReferences?: Array<CiProductsBuildRunsGetToManyRelatedFieldsScmGitReferencesEnum>;
    fieldsCiBuildRuns?: Array<CiProductsBuildRunsGetToManyRelatedFieldsCiBuildRunsEnum>;
    fieldsCiWorkflows?: Array<CiProductsBuildRunsGetToManyRelatedFieldsCiWorkflowsEnum>;
    fieldsScmPullRequests?: Array<CiProductsBuildRunsGetToManyRelatedFieldsScmPullRequestsEnum>;
    fieldsCiProducts?: Array<CiProductsBuildRunsGetToManyRelatedFieldsCiProductsEnum>;
    fieldsBuilds?: Array<CiProductsBuildRunsGetToManyRelatedFieldsBuildsEnum>;
    limit?: number;
    limitBuilds?: number;
    include?: Array<CiProductsBuildRunsGetToManyRelatedIncludeEnum>;
}
export interface CiProductsDeleteInstanceRequest {
    id: string;
}
export interface CiProductsGetCollectionRequest {
    filterProductType?: Array<CiProductsGetCollectionFilterProductTypeEnum>;
    filterApp?: Array<string>;
    fieldsCiProducts?: Array<CiProductsGetCollectionFieldsCiProductsEnum>;
    limit?: number;
    include?: Array<CiProductsGetCollectionIncludeEnum>;
    fieldsCiBuildRuns?: Array<CiProductsGetCollectionFieldsCiBuildRunsEnum>;
    fieldsCiWorkflows?: Array<CiProductsGetCollectionFieldsCiWorkflowsEnum>;
    fieldsApps?: Array<CiProductsGetCollectionFieldsAppsEnum>;
    fieldsScmRepositories?: Array<CiProductsGetCollectionFieldsScmRepositoriesEnum>;
    limitPrimaryRepositories?: number;
}
export interface CiProductsGetInstanceRequest {
    id: string;
    fieldsCiProducts?: Array<CiProductsGetInstanceFieldsCiProductsEnum>;
    include?: Array<CiProductsGetInstanceIncludeEnum>;
    fieldsCiBuildRuns?: Array<CiProductsGetInstanceFieldsCiBuildRunsEnum>;
    fieldsCiWorkflows?: Array<CiProductsGetInstanceFieldsCiWorkflowsEnum>;
    fieldsApps?: Array<CiProductsGetInstanceFieldsAppsEnum>;
    fieldsScmRepositories?: Array<CiProductsGetInstanceFieldsScmRepositoriesEnum>;
    limitPrimaryRepositories?: number;
}
export interface CiProductsPrimaryRepositoriesGetToManyRelatedRequest {
    id: string;
    filterId?: Array<string>;
    fieldsScmGitReferences?: Array<CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum>;
    fieldsScmProviders?: Array<CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmProvidersEnum>;
    fieldsScmRepositories?: Array<CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum>;
    limit?: number;
    include?: Array<CiProductsPrimaryRepositoriesGetToManyRelatedIncludeEnum>;
}
export interface CiProductsWorkflowsGetToManyRelatedRequest {
    id: string;
    fieldsCiXcodeVersions?: Array<CiProductsWorkflowsGetToManyRelatedFieldsCiXcodeVersionsEnum>;
    fieldsCiWorkflows?: Array<CiProductsWorkflowsGetToManyRelatedFieldsCiWorkflowsEnum>;
    fieldsCiMacOsVersions?: Array<CiProductsWorkflowsGetToManyRelatedFieldsCiMacOsVersionsEnum>;
    fieldsCiProducts?: Array<CiProductsWorkflowsGetToManyRelatedFieldsCiProductsEnum>;
    fieldsScmRepositories?: Array<CiProductsWorkflowsGetToManyRelatedFieldsScmRepositoriesEnum>;
    limit?: number;
    include?: Array<CiProductsWorkflowsGetToManyRelatedIncludeEnum>;
}
/**
 *
 */
export declare class CiProductsApi extends runtime.BaseAPI {
    /**
     */
    ciProductsAdditionalRepositoriesGetToManyRelatedRaw(requestParameters: CiProductsAdditionalRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScmRepositoriesResponse>>;
    /**
     */
    ciProductsAdditionalRepositoriesGetToManyRelated(requestParameters: CiProductsAdditionalRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScmRepositoriesResponse>;
    /**
     */
    ciProductsAppGetToOneRelatedRaw(requestParameters: CiProductsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppResponse>>;
    /**
     */
    ciProductsAppGetToOneRelated(requestParameters: CiProductsAppGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppResponse>;
    /**
     */
    ciProductsBuildRunsGetToManyRelatedRaw(requestParameters: CiProductsBuildRunsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiBuildRunsResponse>>;
    /**
     */
    ciProductsBuildRunsGetToManyRelated(requestParameters: CiProductsBuildRunsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiBuildRunsResponse>;
    /**
     */
    ciProductsDeleteInstanceRaw(requestParameters: CiProductsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    ciProductsDeleteInstance(requestParameters: CiProductsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    ciProductsGetCollectionRaw(requestParameters: CiProductsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiProductsResponse>>;
    /**
     */
    ciProductsGetCollection(requestParameters?: CiProductsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiProductsResponse>;
    /**
     */
    ciProductsGetInstanceRaw(requestParameters: CiProductsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiProductResponse>>;
    /**
     */
    ciProductsGetInstance(requestParameters: CiProductsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiProductResponse>;
    /**
     */
    ciProductsPrimaryRepositoriesGetToManyRelatedRaw(requestParameters: CiProductsPrimaryRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScmRepositoriesResponse>>;
    /**
     */
    ciProductsPrimaryRepositoriesGetToManyRelated(requestParameters: CiProductsPrimaryRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScmRepositoriesResponse>;
    /**
     */
    ciProductsWorkflowsGetToManyRelatedRaw(requestParameters: CiProductsWorkflowsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CiWorkflowsResponse>>;
    /**
     */
    ciProductsWorkflowsGetToManyRelated(requestParameters: CiProductsWorkflowsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CiWorkflowsResponse>;
}
/**
 * @export
 */
export declare const CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum: {
    readonly CanonicalName: "canonicalName";
    readonly IsDeleted: "isDeleted";
    readonly Kind: "kind";
    readonly Name: "name";
    readonly Repository: "repository";
};
export type CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum = (typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum)[keyof typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum];
/**
 * @export
 */
export declare const CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmProvidersEnum: {
    readonly Repositories: "repositories";
    readonly ScmProviderType: "scmProviderType";
    readonly Url: "url";
};
export type CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmProvidersEnum = (typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmProvidersEnum)[keyof typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmProvidersEnum];
/**
 * @export
 */
export declare const CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum = (typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum)[keyof typeof CiProductsAdditionalRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const CiProductsAdditionalRepositoriesGetToManyRelatedIncludeEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly ScmProvider: "scmProvider";
};
export type CiProductsAdditionalRepositoriesGetToManyRelatedIncludeEnum = (typeof CiProductsAdditionalRepositoriesGetToManyRelatedIncludeEnum)[keyof typeof CiProductsAdditionalRepositoriesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsBetaAppReviewDetailsEnum: {
    readonly App: "app";
    readonly ContactEmail: "contactEmail";
    readonly ContactFirstName: "contactFirstName";
    readonly ContactLastName: "contactLastName";
    readonly ContactPhone: "contactPhone";
    readonly DemoAccountName: "demoAccountName";
    readonly DemoAccountPassword: "demoAccountPassword";
    readonly DemoAccountRequired: "demoAccountRequired";
    readonly Notes: "notes";
};
export type CiProductsAppGetToOneRelatedFieldsBetaAppReviewDetailsEnum = (typeof CiProductsAppGetToOneRelatedFieldsBetaAppReviewDetailsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsBetaAppReviewDetailsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type CiProductsAppGetToOneRelatedFieldsGameCenterDetailsEnum = (typeof CiProductsAppGetToOneRelatedFieldsGameCenterDetailsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiProductsAppGetToOneRelatedFieldsCiProductsEnum = (typeof CiProductsAppGetToOneRelatedFieldsCiProductsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsReviewSubmissionsEnum: {
    readonly App: "app";
    readonly AppStoreVersionForReview: "appStoreVersionForReview";
    readonly Canceled: "canceled";
    readonly Items: "items";
    readonly LastUpdatedByActor: "lastUpdatedByActor";
    readonly Platform: "platform";
    readonly State: "state";
    readonly Submitted: "submitted";
    readonly SubmittedByActor: "submittedByActor";
    readonly SubmittedDate: "submittedDate";
};
export type CiProductsAppGetToOneRelatedFieldsReviewSubmissionsEnum = (typeof CiProductsAppGetToOneRelatedFieldsReviewSubmissionsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsReviewSubmissionsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsBetaGroupsEnum: {
    readonly App: "app";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly CreatedDate: "createdDate";
    readonly FeedbackEnabled: "feedbackEnabled";
    readonly HasAccessToAllBuilds: "hasAccessToAllBuilds";
    readonly IosBuildsAvailableForAppleSiliconMac: "iosBuildsAvailableForAppleSiliconMac";
    readonly IsInternalGroup: "isInternalGroup";
    readonly Name: "name";
    readonly PublicLink: "publicLink";
    readonly PublicLinkEnabled: "publicLinkEnabled";
    readonly PublicLinkId: "publicLinkId";
    readonly PublicLinkLimit: "publicLinkLimit";
    readonly PublicLinkLimitEnabled: "publicLinkLimitEnabled";
};
export type CiProductsAppGetToOneRelatedFieldsBetaGroupsEnum = (typeof CiProductsAppGetToOneRelatedFieldsBetaGroupsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsBetaGroupsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsPromotedPurchasesEnum: {
    readonly App: "app";
    readonly Enabled: "enabled";
    readonly InAppPurchaseV2: "inAppPurchaseV2";
    readonly PromotionImages: "promotionImages";
    readonly State: "state";
    readonly Subscription: "subscription";
    readonly VisibleForAllUsers: "visibleForAllUsers";
};
export type CiProductsAppGetToOneRelatedFieldsPromotedPurchasesEnum = (typeof CiProductsAppGetToOneRelatedFieldsPromotedPurchasesEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsPromotedPurchasesEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type CiProductsAppGetToOneRelatedFieldsAppsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppEventsEnum: {
    readonly App: "app";
    readonly ArchivedTerritorySchedules: "archivedTerritorySchedules";
    readonly Badge: "badge";
    readonly DeepLink: "deepLink";
    readonly EventState: "eventState";
    readonly Localizations: "localizations";
    readonly PrimaryLocale: "primaryLocale";
    readonly Priority: "priority";
    readonly PurchaseRequirement: "purchaseRequirement";
    readonly Purpose: "purpose";
    readonly ReferenceName: "referenceName";
    readonly TerritorySchedules: "territorySchedules";
};
export type CiProductsAppGetToOneRelatedFieldsAppEventsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppEventsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppEventsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type CiProductsAppGetToOneRelatedFieldsBuildsEnum = (typeof CiProductsAppGetToOneRelatedFieldsBuildsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsBetaLicenseAgreementsEnum: {
    readonly AgreementText: "agreementText";
    readonly App: "app";
};
export type CiProductsAppGetToOneRelatedFieldsBetaLicenseAgreementsEnum = (typeof CiProductsAppGetToOneRelatedFieldsBetaLicenseAgreementsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsBetaLicenseAgreementsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppClipsEnum: {
    readonly App: "app";
    readonly AppClipAdvancedExperiences: "appClipAdvancedExperiences";
    readonly AppClipDefaultExperiences: "appClipDefaultExperiences";
    readonly BundleId: "bundleId";
};
export type CiProductsAppGetToOneRelatedFieldsAppClipsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppClipsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppClipsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsBetaAppLocalizationsEnum: {
    readonly App: "app";
    readonly Description: "description";
    readonly FeedbackEmail: "feedbackEmail";
    readonly Locale: "locale";
    readonly MarketingUrl: "marketingUrl";
    readonly PrivacyPolicyUrl: "privacyPolicyUrl";
    readonly TvOsPrivacyPolicy: "tvOsPrivacyPolicy";
};
export type CiProductsAppGetToOneRelatedFieldsBetaAppLocalizationsEnum = (typeof CiProductsAppGetToOneRelatedFieldsBetaAppLocalizationsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsBetaAppLocalizationsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppInfosEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly App: "app";
    readonly AppInfoLocalizations: "appInfoLocalizations";
    readonly AppStoreAgeRating: "appStoreAgeRating";
    readonly AppStoreState: "appStoreState";
    readonly BrazilAgeRating: "brazilAgeRating";
    readonly BrazilAgeRatingV2: "brazilAgeRatingV2";
    readonly KidsAgeBand: "kidsAgeBand";
    readonly PrimaryCategory: "primaryCategory";
    readonly PrimarySubcategoryOne: "primarySubcategoryOne";
    readonly PrimarySubcategoryTwo: "primarySubcategoryTwo";
    readonly SecondaryCategory: "secondaryCategory";
    readonly SecondarySubcategoryOne: "secondarySubcategoryOne";
    readonly SecondarySubcategoryTwo: "secondarySubcategoryTwo";
    readonly State: "state";
};
export type CiProductsAppGetToOneRelatedFieldsAppInfosEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppInfosEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppInfosEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsPreReleaseVersionsEnum: {
    readonly App: "app";
    readonly Builds: "builds";
    readonly Platform: "platform";
    readonly Version: "version";
};
export type CiProductsAppGetToOneRelatedFieldsPreReleaseVersionsEnum = (typeof CiProductsAppGetToOneRelatedFieldsPreReleaseVersionsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsPreReleaseVersionsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsInAppPurchasesEnum: {
    readonly App: "app";
    readonly AppStoreReviewScreenshot: "appStoreReviewScreenshot";
    readonly Apps: "apps";
    readonly Content: "content";
    readonly ContentHosting: "contentHosting";
    readonly FamilySharable: "familySharable";
    readonly IapPriceSchedule: "iapPriceSchedule";
    readonly InAppPurchaseAvailability: "inAppPurchaseAvailability";
    readonly InAppPurchaseLocalizations: "inAppPurchaseLocalizations";
    readonly InAppPurchaseType: "inAppPurchaseType";
    readonly Name: "name";
    readonly PricePoints: "pricePoints";
    readonly ProductId: "productId";
    readonly PromotedPurchase: "promotedPurchase";
    readonly ReferenceName: "referenceName";
    readonly ReviewNote: "reviewNote";
    readonly State: "state";
};
export type CiProductsAppGetToOneRelatedFieldsInAppPurchasesEnum = (typeof CiProductsAppGetToOneRelatedFieldsInAppPurchasesEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsInAppPurchasesEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsSubscriptionGroupsEnum: {
    readonly App: "app";
    readonly ReferenceName: "referenceName";
    readonly SubscriptionGroupLocalizations: "subscriptionGroupLocalizations";
    readonly Subscriptions: "subscriptions";
};
export type CiProductsAppGetToOneRelatedFieldsSubscriptionGroupsEnum = (typeof CiProductsAppGetToOneRelatedFieldsSubscriptionGroupsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsSubscriptionGroupsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppPreOrdersEnum: {
    readonly App: "app";
    readonly AppReleaseDate: "appReleaseDate";
    readonly PreOrderAvailableDate: "preOrderAvailableDate";
};
export type CiProductsAppGetToOneRelatedFieldsAppPreOrdersEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppPreOrdersEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppPreOrdersEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsGameCenterEnabledVersionsEnum: {
    readonly App: "app";
    readonly CompatibleVersions: "compatibleVersions";
    readonly IconAsset: "iconAsset";
    readonly Platform: "platform";
    readonly VersionString: "versionString";
};
export type CiProductsAppGetToOneRelatedFieldsGameCenterEnabledVersionsEnum = (typeof CiProductsAppGetToOneRelatedFieldsGameCenterEnabledVersionsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsGameCenterEnabledVersionsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppStoreVersionExperimentsEnum: {
    readonly App: "app";
    readonly AppStoreVersionExperimentTreatments: "appStoreVersionExperimentTreatments";
    readonly ControlVersions: "controlVersions";
    readonly EndDate: "endDate";
    readonly LatestControlVersion: "latestControlVersion";
    readonly Name: "name";
    readonly Platform: "platform";
    readonly ReviewRequired: "reviewRequired";
    readonly StartDate: "startDate";
    readonly Started: "started";
    readonly State: "state";
    readonly TrafficProportion: "trafficProportion";
};
export type CiProductsAppGetToOneRelatedFieldsAppStoreVersionExperimentsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppStoreVersionExperimentsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppStoreVersionExperimentsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsSubscriptionGracePeriodsEnum: {
    readonly Duration: "duration";
    readonly OptIn: "optIn";
    readonly RenewalType: "renewalType";
    readonly SandboxOptIn: "sandboxOptIn";
};
export type CiProductsAppGetToOneRelatedFieldsSubscriptionGracePeriodsEnum = (typeof CiProductsAppGetToOneRelatedFieldsSubscriptionGracePeriodsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsSubscriptionGracePeriodsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsEndUserLicenseAgreementsEnum: {
    readonly AgreementText: "agreementText";
    readonly App: "app";
    readonly Territories: "territories";
};
export type CiProductsAppGetToOneRelatedFieldsEndUserLicenseAgreementsEnum = (typeof CiProductsAppGetToOneRelatedFieldsEndUserLicenseAgreementsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsEndUserLicenseAgreementsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type CiProductsAppGetToOneRelatedFieldsAppStoreVersionsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppStoreVersionsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppEncryptionDeclarationsEnum: {
    readonly App: "app";
    readonly AppDescription: "appDescription";
    readonly AppEncryptionDeclarationDocument: "appEncryptionDeclarationDocument";
    readonly AppEncryptionDeclarationState: "appEncryptionDeclarationState";
    readonly AvailableOnFrenchStore: "availableOnFrenchStore";
    readonly Builds: "builds";
    readonly CodeValue: "codeValue";
    readonly ContainsProprietaryCryptography: "containsProprietaryCryptography";
    readonly ContainsThirdPartyCryptography: "containsThirdPartyCryptography";
    readonly CreatedDate: "createdDate";
    readonly DocumentName: "documentName";
    readonly DocumentType: "documentType";
    readonly DocumentUrl: "documentUrl";
    readonly Exempt: "exempt";
    readonly Platform: "platform";
    readonly UploadedDate: "uploadedDate";
    readonly UsesEncryption: "usesEncryption";
};
export type CiProductsAppGetToOneRelatedFieldsAppEncryptionDeclarationsEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppEncryptionDeclarationsEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppEncryptionDeclarationsEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedFieldsAppCustomProductPagesEnum: {
    readonly App: "app";
    readonly AppCustomProductPageVersions: "appCustomProductPageVersions";
    readonly AppStoreVersionTemplate: "appStoreVersionTemplate";
    readonly CustomProductPageTemplate: "customProductPageTemplate";
    readonly Name: "name";
    readonly Url: "url";
    readonly Visible: "visible";
};
export type CiProductsAppGetToOneRelatedFieldsAppCustomProductPagesEnum = (typeof CiProductsAppGetToOneRelatedFieldsAppCustomProductPagesEnum)[keyof typeof CiProductsAppGetToOneRelatedFieldsAppCustomProductPagesEnum];
/**
 * @export
 */
export declare const CiProductsAppGetToOneRelatedIncludeEnum: {
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly Builds: "builds";
    readonly CiProduct: "ciProduct";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
};
export type CiProductsAppGetToOneRelatedIncludeEnum = (typeof CiProductsAppGetToOneRelatedIncludeEnum)[keyof typeof CiProductsAppGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedSortEnum: {
    readonly Number: "-number";
};
export type CiProductsBuildRunsGetToManyRelatedSortEnum = (typeof CiProductsBuildRunsGetToManyRelatedSortEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedSortEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsScmGitReferencesEnum: {
    readonly CanonicalName: "canonicalName";
    readonly IsDeleted: "isDeleted";
    readonly Kind: "kind";
    readonly Name: "name";
    readonly Repository: "repository";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsScmGitReferencesEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsScmGitReferencesEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsScmGitReferencesEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsCiBuildRunsEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsCiBuildRunsEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsCiWorkflowsEnum: {
    readonly Actions: "actions";
    readonly BranchStartCondition: "branchStartCondition";
    readonly BuildRuns: "buildRuns";
    readonly Clean: "clean";
    readonly ContainerFilePath: "containerFilePath";
    readonly Description: "description";
    readonly IsEnabled: "isEnabled";
    readonly IsLockedForEditing: "isLockedForEditing";
    readonly LastModifiedDate: "lastModifiedDate";
    readonly MacOsVersion: "macOsVersion";
    readonly ManualBranchStartCondition: "manualBranchStartCondition";
    readonly ManualPullRequestStartCondition: "manualPullRequestStartCondition";
    readonly ManualTagStartCondition: "manualTagStartCondition";
    readonly Name: "name";
    readonly Product: "product";
    readonly PullRequestStartCondition: "pullRequestStartCondition";
    readonly Repository: "repository";
    readonly ScheduledStartCondition: "scheduledStartCondition";
    readonly TagStartCondition: "tagStartCondition";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsCiWorkflowsEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsCiWorkflowsEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsCiWorkflowsEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsScmPullRequestsEnum: {
    readonly DestinationBranchName: "destinationBranchName";
    readonly DestinationRepositoryName: "destinationRepositoryName";
    readonly DestinationRepositoryOwner: "destinationRepositoryOwner";
    readonly IsClosed: "isClosed";
    readonly IsCrossRepository: "isCrossRepository";
    readonly Number: "number";
    readonly Repository: "repository";
    readonly SourceBranchName: "sourceBranchName";
    readonly SourceRepositoryName: "sourceRepositoryName";
    readonly SourceRepositoryOwner: "sourceRepositoryOwner";
    readonly Title: "title";
    readonly WebUrl: "webUrl";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsScmPullRequestsEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsScmPullRequestsEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsScmPullRequestsEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsCiProductsEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsCiProductsEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedFieldsBuildsEnum: {
    readonly App: "app";
    readonly AppEncryptionDeclaration: "appEncryptionDeclaration";
    readonly AppStoreVersion: "appStoreVersion";
    readonly BetaAppReviewSubmission: "betaAppReviewSubmission";
    readonly BetaBuildLocalizations: "betaBuildLocalizations";
    readonly BetaGroups: "betaGroups";
    readonly BuildAudienceType: "buildAudienceType";
    readonly BuildBetaDetail: "buildBetaDetail";
    readonly BuildBundles: "buildBundles";
    readonly ComputedMinMacOsVersion: "computedMinMacOsVersion";
    readonly DiagnosticSignatures: "diagnosticSignatures";
    readonly ExpirationDate: "expirationDate";
    readonly Expired: "expired";
    readonly IconAssetToken: "iconAssetToken";
    readonly Icons: "icons";
    readonly IndividualTesters: "individualTesters";
    readonly LsMinimumSystemVersion: "lsMinimumSystemVersion";
    readonly MinOsVersion: "minOsVersion";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreReleaseVersion: "preReleaseVersion";
    readonly ProcessingState: "processingState";
    readonly UploadedDate: "uploadedDate";
    readonly UsesNonExemptEncryption: "usesNonExemptEncryption";
    readonly Version: "version";
};
export type CiProductsBuildRunsGetToManyRelatedFieldsBuildsEnum = (typeof CiProductsBuildRunsGetToManyRelatedFieldsBuildsEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedFieldsBuildsEnum];
/**
 * @export
 */
export declare const CiProductsBuildRunsGetToManyRelatedIncludeEnum: {
    readonly Builds: "builds";
    readonly DestinationBranch: "destinationBranch";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly Workflow: "workflow";
};
export type CiProductsBuildRunsGetToManyRelatedIncludeEnum = (typeof CiProductsBuildRunsGetToManyRelatedIncludeEnum)[keyof typeof CiProductsBuildRunsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFilterProductTypeEnum: {
    readonly App: "APP";
    readonly Framework: "FRAMEWORK";
};
export type CiProductsGetCollectionFilterProductTypeEnum = (typeof CiProductsGetCollectionFilterProductTypeEnum)[keyof typeof CiProductsGetCollectionFilterProductTypeEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiProductsGetCollectionFieldsCiProductsEnum = (typeof CiProductsGetCollectionFieldsCiProductsEnum)[keyof typeof CiProductsGetCollectionFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionIncludeEnum: {
    readonly App: "app";
    readonly BundleId: "bundleId";
    readonly PrimaryRepositories: "primaryRepositories";
};
export type CiProductsGetCollectionIncludeEnum = (typeof CiProductsGetCollectionIncludeEnum)[keyof typeof CiProductsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiProductsGetCollectionFieldsCiBuildRunsEnum = (typeof CiProductsGetCollectionFieldsCiBuildRunsEnum)[keyof typeof CiProductsGetCollectionFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFieldsCiWorkflowsEnum: {
    readonly Actions: "actions";
    readonly BranchStartCondition: "branchStartCondition";
    readonly BuildRuns: "buildRuns";
    readonly Clean: "clean";
    readonly ContainerFilePath: "containerFilePath";
    readonly Description: "description";
    readonly IsEnabled: "isEnabled";
    readonly IsLockedForEditing: "isLockedForEditing";
    readonly LastModifiedDate: "lastModifiedDate";
    readonly MacOsVersion: "macOsVersion";
    readonly ManualBranchStartCondition: "manualBranchStartCondition";
    readonly ManualPullRequestStartCondition: "manualPullRequestStartCondition";
    readonly ManualTagStartCondition: "manualTagStartCondition";
    readonly Name: "name";
    readonly Product: "product";
    readonly PullRequestStartCondition: "pullRequestStartCondition";
    readonly Repository: "repository";
    readonly ScheduledStartCondition: "scheduledStartCondition";
    readonly TagStartCondition: "tagStartCondition";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiProductsGetCollectionFieldsCiWorkflowsEnum = (typeof CiProductsGetCollectionFieldsCiWorkflowsEnum)[keyof typeof CiProductsGetCollectionFieldsCiWorkflowsEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type CiProductsGetCollectionFieldsAppsEnum = (typeof CiProductsGetCollectionFieldsAppsEnum)[keyof typeof CiProductsGetCollectionFieldsAppsEnum];
/**
 * @export
 */
export declare const CiProductsGetCollectionFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type CiProductsGetCollectionFieldsScmRepositoriesEnum = (typeof CiProductsGetCollectionFieldsScmRepositoriesEnum)[keyof typeof CiProductsGetCollectionFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiProductsGetInstanceFieldsCiProductsEnum = (typeof CiProductsGetInstanceFieldsCiProductsEnum)[keyof typeof CiProductsGetInstanceFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceIncludeEnum: {
    readonly App: "app";
    readonly BundleId: "bundleId";
    readonly PrimaryRepositories: "primaryRepositories";
};
export type CiProductsGetInstanceIncludeEnum = (typeof CiProductsGetInstanceIncludeEnum)[keyof typeof CiProductsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceFieldsCiBuildRunsEnum: {
    readonly Actions: "actions";
    readonly BuildRun: "buildRun";
    readonly Builds: "builds";
    readonly CancelReason: "cancelReason";
    readonly Clean: "clean";
    readonly CompletionStatus: "completionStatus";
    readonly CreatedDate: "createdDate";
    readonly DestinationBranch: "destinationBranch";
    readonly DestinationCommit: "destinationCommit";
    readonly ExecutionProgress: "executionProgress";
    readonly FinishedDate: "finishedDate";
    readonly IsPullRequestBuild: "isPullRequestBuild";
    readonly IssueCounts: "issueCounts";
    readonly Number: "number";
    readonly Product: "product";
    readonly PullRequest: "pullRequest";
    readonly SourceBranchOrTag: "sourceBranchOrTag";
    readonly SourceCommit: "sourceCommit";
    readonly StartReason: "startReason";
    readonly StartedDate: "startedDate";
    readonly Workflow: "workflow";
};
export type CiProductsGetInstanceFieldsCiBuildRunsEnum = (typeof CiProductsGetInstanceFieldsCiBuildRunsEnum)[keyof typeof CiProductsGetInstanceFieldsCiBuildRunsEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceFieldsCiWorkflowsEnum: {
    readonly Actions: "actions";
    readonly BranchStartCondition: "branchStartCondition";
    readonly BuildRuns: "buildRuns";
    readonly Clean: "clean";
    readonly ContainerFilePath: "containerFilePath";
    readonly Description: "description";
    readonly IsEnabled: "isEnabled";
    readonly IsLockedForEditing: "isLockedForEditing";
    readonly LastModifiedDate: "lastModifiedDate";
    readonly MacOsVersion: "macOsVersion";
    readonly ManualBranchStartCondition: "manualBranchStartCondition";
    readonly ManualPullRequestStartCondition: "manualPullRequestStartCondition";
    readonly ManualTagStartCondition: "manualTagStartCondition";
    readonly Name: "name";
    readonly Product: "product";
    readonly PullRequestStartCondition: "pullRequestStartCondition";
    readonly Repository: "repository";
    readonly ScheduledStartCondition: "scheduledStartCondition";
    readonly TagStartCondition: "tagStartCondition";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiProductsGetInstanceFieldsCiWorkflowsEnum = (typeof CiProductsGetInstanceFieldsCiWorkflowsEnum)[keyof typeof CiProductsGetInstanceFieldsCiWorkflowsEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceFieldsAppsEnum: {
    readonly AlternativeDistributionKey: "alternativeDistributionKey";
    readonly AnalyticsReportRequests: "analyticsReportRequests";
    readonly AppAvailability: "appAvailability";
    readonly AppClips: "appClips";
    readonly AppCustomProductPages: "appCustomProductPages";
    readonly AppEncryptionDeclarations: "appEncryptionDeclarations";
    readonly AppEvents: "appEvents";
    readonly AppInfos: "appInfos";
    readonly AppPricePoints: "appPricePoints";
    readonly AppPriceSchedule: "appPriceSchedule";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersions: "appStoreVersions";
    readonly BetaAppLocalizations: "betaAppLocalizations";
    readonly BetaAppReviewDetail: "betaAppReviewDetail";
    readonly BetaGroups: "betaGroups";
    readonly BetaLicenseAgreement: "betaLicenseAgreement";
    readonly BetaTesters: "betaTesters";
    readonly Builds: "builds";
    readonly BundleId: "bundleId";
    readonly CiProduct: "ciProduct";
    readonly ContentRightsDeclaration: "contentRightsDeclaration";
    readonly CustomerReviews: "customerReviews";
    readonly EndUserLicenseAgreement: "endUserLicenseAgreement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterEnabledVersions: "gameCenterEnabledVersions";
    readonly InAppPurchases: "inAppPurchases";
    readonly InAppPurchasesV2: "inAppPurchasesV2";
    readonly IsOrEverWasMadeForKids: "isOrEverWasMadeForKids";
    readonly MarketplaceSearchDetail: "marketplaceSearchDetail";
    readonly Name: "name";
    readonly PerfPowerMetrics: "perfPowerMetrics";
    readonly PreOrder: "preOrder";
    readonly PreReleaseVersions: "preReleaseVersions";
    readonly PrimaryLocale: "primaryLocale";
    readonly PromotedPurchases: "promotedPurchases";
    readonly ReviewSubmissions: "reviewSubmissions";
    readonly Sku: "sku";
    readonly SubscriptionGracePeriod: "subscriptionGracePeriod";
    readonly SubscriptionGroups: "subscriptionGroups";
    readonly SubscriptionStatusUrl: "subscriptionStatusUrl";
    readonly SubscriptionStatusUrlForSandbox: "subscriptionStatusUrlForSandbox";
    readonly SubscriptionStatusUrlVersion: "subscriptionStatusUrlVersion";
    readonly SubscriptionStatusUrlVersionForSandbox: "subscriptionStatusUrlVersionForSandbox";
};
export type CiProductsGetInstanceFieldsAppsEnum = (typeof CiProductsGetInstanceFieldsAppsEnum)[keyof typeof CiProductsGetInstanceFieldsAppsEnum];
/**
 * @export
 */
export declare const CiProductsGetInstanceFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type CiProductsGetInstanceFieldsScmRepositoriesEnum = (typeof CiProductsGetInstanceFieldsScmRepositoriesEnum)[keyof typeof CiProductsGetInstanceFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum: {
    readonly CanonicalName: "canonicalName";
    readonly IsDeleted: "isDeleted";
    readonly Kind: "kind";
    readonly Name: "name";
    readonly Repository: "repository";
};
export type CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum = (typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum)[keyof typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum];
/**
 * @export
 */
export declare const CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmProvidersEnum: {
    readonly Repositories: "repositories";
    readonly ScmProviderType: "scmProviderType";
    readonly Url: "url";
};
export type CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmProvidersEnum = (typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmProvidersEnum)[keyof typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmProvidersEnum];
/**
 * @export
 */
export declare const CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum = (typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum)[keyof typeof CiProductsPrimaryRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const CiProductsPrimaryRepositoriesGetToManyRelatedIncludeEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly ScmProvider: "scmProvider";
};
export type CiProductsPrimaryRepositoriesGetToManyRelatedIncludeEnum = (typeof CiProductsPrimaryRepositoriesGetToManyRelatedIncludeEnum)[keyof typeof CiProductsPrimaryRepositoriesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedFieldsCiXcodeVersionsEnum: {
    readonly MacOsVersions: "macOsVersions";
    readonly Name: "name";
    readonly TestDestinations: "testDestinations";
    readonly Version: "version";
};
export type CiProductsWorkflowsGetToManyRelatedFieldsCiXcodeVersionsEnum = (typeof CiProductsWorkflowsGetToManyRelatedFieldsCiXcodeVersionsEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedFieldsCiXcodeVersionsEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedFieldsCiWorkflowsEnum: {
    readonly Actions: "actions";
    readonly BranchStartCondition: "branchStartCondition";
    readonly BuildRuns: "buildRuns";
    readonly Clean: "clean";
    readonly ContainerFilePath: "containerFilePath";
    readonly Description: "description";
    readonly IsEnabled: "isEnabled";
    readonly IsLockedForEditing: "isLockedForEditing";
    readonly LastModifiedDate: "lastModifiedDate";
    readonly MacOsVersion: "macOsVersion";
    readonly ManualBranchStartCondition: "manualBranchStartCondition";
    readonly ManualPullRequestStartCondition: "manualPullRequestStartCondition";
    readonly ManualTagStartCondition: "manualTagStartCondition";
    readonly Name: "name";
    readonly Product: "product";
    readonly PullRequestStartCondition: "pullRequestStartCondition";
    readonly Repository: "repository";
    readonly ScheduledStartCondition: "scheduledStartCondition";
    readonly TagStartCondition: "tagStartCondition";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiProductsWorkflowsGetToManyRelatedFieldsCiWorkflowsEnum = (typeof CiProductsWorkflowsGetToManyRelatedFieldsCiWorkflowsEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedFieldsCiWorkflowsEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedFieldsCiMacOsVersionsEnum: {
    readonly Name: "name";
    readonly Version: "version";
    readonly XcodeVersions: "xcodeVersions";
};
export type CiProductsWorkflowsGetToManyRelatedFieldsCiMacOsVersionsEnum = (typeof CiProductsWorkflowsGetToManyRelatedFieldsCiMacOsVersionsEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedFieldsCiMacOsVersionsEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedFieldsCiProductsEnum: {
    readonly AdditionalRepositories: "additionalRepositories";
    readonly App: "app";
    readonly BuildRuns: "buildRuns";
    readonly BundleId: "bundleId";
    readonly CreatedDate: "createdDate";
    readonly Name: "name";
    readonly PrimaryRepositories: "primaryRepositories";
    readonly ProductType: "productType";
    readonly Workflows: "workflows";
};
export type CiProductsWorkflowsGetToManyRelatedFieldsCiProductsEnum = (typeof CiProductsWorkflowsGetToManyRelatedFieldsCiProductsEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedFieldsCiProductsEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type CiProductsWorkflowsGetToManyRelatedFieldsScmRepositoriesEnum = (typeof CiProductsWorkflowsGetToManyRelatedFieldsScmRepositoriesEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const CiProductsWorkflowsGetToManyRelatedIncludeEnum: {
    readonly MacOsVersion: "macOsVersion";
    readonly Product: "product";
    readonly Repository: "repository";
    readonly XcodeVersion: "xcodeVersion";
};
export type CiProductsWorkflowsGetToManyRelatedIncludeEnum = (typeof CiProductsWorkflowsGetToManyRelatedIncludeEnum)[keyof typeof CiProductsWorkflowsGetToManyRelatedIncludeEnum];
