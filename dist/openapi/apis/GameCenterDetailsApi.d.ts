/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { GameCenterAchievementReleasesResponse, GameCenterAchievementsResponse, GameCenterAppVersionsResponse, GameCenterDetailCreateRequest, GameCenterDetailGameCenterAchievementsLinkagesRequest, GameCenterDetailGameCenterAchievementsLinkagesResponse, GameCenterDetailGameCenterLeaderboardSetsLinkagesRequest, GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse, GameCenterDetailGameCenterLeaderboardsLinkagesRequest, GameCenterDetailGameCenterLeaderboardsLinkagesResponse, GameCenterDetailResponse, GameCenterDetailUpdateRequest, GameCenterGroupResponse, GameCenterLeaderboardReleasesResponse, GameCenterLeaderboardSetReleasesResponse, GameCenterLeaderboardSetsResponse, GameCenterLeaderboardsResponse, GameCenterMatchmakingAppRequestsV1MetricResponse } from "../models";
export interface GameCenterDetailsAchievementReleasesGetToManyRelatedRequest {
    id: string;
    filterLive?: Array<string>;
    filterGameCenterAchievement?: Array<string>;
    fieldsGameCenterAchievementReleases?: Array<GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementReleasesEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterAchievements?: Array<GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementsEnum>;
    limit?: number;
    include?: Array<GameCenterDetailsAchievementReleasesGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsClassicMatchmakingRequestsGetMetricsRequest {
    id: string;
    granularity: GameCenterDetailsClassicMatchmakingRequestsGetMetricsGranularityEnum;
    limit?: number;
    groupBy?: Array<GameCenterDetailsClassicMatchmakingRequestsGetMetricsGroupByEnum>;
    filterResult?: GameCenterDetailsClassicMatchmakingRequestsGetMetricsFilterResultEnum;
    sort?: Array<GameCenterDetailsClassicMatchmakingRequestsGetMetricsSortEnum>;
}
export interface GameCenterDetailsCreateInstanceRequest {
    gameCenterDetailCreateRequest: GameCenterDetailCreateRequest;
}
export interface GameCenterDetailsGameCenterAchievementsGetToManyRelatedRequest {
    id: string;
    filterArchived?: Array<string>;
    filterReferenceName?: Array<string>;
    filterId?: Array<string>;
    fieldsGameCenterAchievementReleases?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementReleasesEnum>;
    fieldsGameCenterGroups?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterAchievementLocalizations?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementLocalizationsEnum>;
    fieldsGameCenterAchievements?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementsEnum>;
    limit?: number;
    limitLocalizations?: number;
    limitReleases?: number;
    include?: Array<GameCenterDetailsGameCenterAchievementsGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsGameCenterAchievementsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipRequest {
    id: string;
    gameCenterDetailGameCenterAchievementsLinkagesRequest: GameCenterDetailGameCenterAchievementsLinkagesRequest;
}
export interface GameCenterDetailsGameCenterAppVersionsGetToManyRelatedRequest {
    id: string;
    filterEnabled?: Array<string>;
    fieldsAppStoreVersions?: Array<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsAppStoreVersionsEnum>;
    fieldsGameCenterAppVersions?: Array<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsGameCenterAppVersionsEnum>;
    limit?: number;
    limitCompatibilityVersions?: number;
    include?: Array<GameCenterDetailsGameCenterAppVersionsGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsGameCenterGroupGetToOneRelatedRequest {
    id: string;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterAchievements?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterAchievementsEnum>;
    limitGameCenterDetails?: number;
    limitGameCenterLeaderboards?: number;
    limitGameCenterLeaderboardSets?: number;
    limitGameCenterAchievements?: number;
    include?: Array<GameCenterDetailsGameCenterGroupGetToOneRelatedIncludeEnum>;
}
export interface GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedRequest {
    id: string;
    filterReferenceName?: Array<string>;
    filterId?: Array<string>;
    fieldsGameCenterLeaderboardSetLocalizations?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum>;
    fieldsGameCenterLeaderboardSetReleases?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardsEnum>;
    limit?: number;
    limitLocalizations?: number;
    limitGameCenterLeaderboards?: number;
    limitReleases?: number;
    include?: Array<GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipRequest {
    id: string;
    gameCenterDetailGameCenterLeaderboardSetsLinkagesRequest: GameCenterDetailGameCenterLeaderboardSetsLinkagesRequest;
}
export interface GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedRequest {
    id: string;
    filterArchived?: Array<string>;
    filterReferenceName?: Array<string>;
    filterId?: Array<string>;
    fieldsGameCenterLeaderboardLocalizations?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum>;
    limit?: number;
    limitGameCenterLeaderboardSets?: number;
    limitLocalizations?: number;
    limitReleases?: number;
    include?: Array<GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipRequest {
    id: string;
    limit?: number;
}
export interface GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipRequest {
    id: string;
    gameCenterDetailGameCenterLeaderboardsLinkagesRequest: GameCenterDetailGameCenterLeaderboardsLinkagesRequest;
}
export interface GameCenterDetailsGetInstanceRequest {
    id: string;
    fieldsGameCenterDetails?: Array<GameCenterDetailsGetInstanceFieldsGameCenterDetailsEnum>;
    include?: Array<GameCenterDetailsGetInstanceIncludeEnum>;
    fieldsGameCenterAchievementReleases?: Array<GameCenterDetailsGetInstanceFieldsGameCenterAchievementReleasesEnum>;
    fieldsGameCenterLeaderboardSetReleases?: Array<GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetReleasesEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterDetailsGetInstanceFieldsGameCenterGroupsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterAchievements?: Array<GameCenterDetailsGetInstanceFieldsGameCenterAchievementsEnum>;
    fieldsGameCenterAppVersions?: Array<GameCenterDetailsGetInstanceFieldsGameCenterAppVersionsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardReleasesEnum>;
    limitAchievementReleases?: number;
    limitGameCenterAchievements?: number;
    limitGameCenterAppVersions?: number;
    limitGameCenterLeaderboardSets?: number;
    limitGameCenterLeaderboards?: number;
    limitLeaderboardReleases?: number;
    limitLeaderboardSetReleases?: number;
}
export interface GameCenterDetailsLeaderboardReleasesGetToManyRelatedRequest {
    id: string;
    filterLive?: Array<string>;
    filterGameCenterLeaderboard?: Array<string>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum>;
    limit?: number;
    include?: Array<GameCenterDetailsLeaderboardReleasesGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedRequest {
    id: string;
    filterLive?: Array<string>;
    filterGameCenterLeaderboardSet?: Array<string>;
    fieldsGameCenterLeaderboardSetReleases?: Array<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterDetailsEnum>;
    limit?: number;
    include?: Array<GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedIncludeEnum>;
}
export interface GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsRequest {
    id: string;
    granularity: GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGranularityEnum;
    limit?: number;
    groupBy?: Array<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGroupByEnum>;
    filterResult?: GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsFilterResultEnum;
    sort?: Array<GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsSortEnum>;
}
export interface GameCenterDetailsUpdateInstanceRequest {
    id: string;
    gameCenterDetailUpdateRequest: GameCenterDetailUpdateRequest;
}
/**
 *
 */
export declare class GameCenterDetailsApi extends runtime.BaseAPI {
    /**
     */
    gameCenterDetailsAchievementReleasesGetToManyRelatedRaw(requestParameters: GameCenterDetailsAchievementReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterAchievementReleasesResponse>>;
    /**
     */
    gameCenterDetailsAchievementReleasesGetToManyRelated(requestParameters: GameCenterDetailsAchievementReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterAchievementReleasesResponse>;
    /**
     */
    gameCenterDetailsClassicMatchmakingRequestsGetMetricsRaw(requestParameters: GameCenterDetailsClassicMatchmakingRequestsGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingAppRequestsV1MetricResponse>>;
    /**
     */
    gameCenterDetailsClassicMatchmakingRequestsGetMetrics(requestParameters: GameCenterDetailsClassicMatchmakingRequestsGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingAppRequestsV1MetricResponse>;
    /**
     */
    gameCenterDetailsCreateInstanceRaw(requestParameters: GameCenterDetailsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailResponse>>;
    /**
     */
    gameCenterDetailsCreateInstance(requestParameters: GameCenterDetailsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailResponse>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsGetToManyRelatedRaw(requestParameters: GameCenterDetailsGameCenterAchievementsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterAchievementsResponse>>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsGetToManyRelated(requestParameters: GameCenterDetailsGameCenterAchievementsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterAchievementsResponse>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsGetToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterAchievementsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailGameCenterAchievementsLinkagesResponse>>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsGetToManyRelationship(requestParameters: GameCenterDetailsGameCenterAchievementsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailGameCenterAchievementsLinkagesResponse>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterDetailsGameCenterAchievementsReplaceToManyRelationship(requestParameters: GameCenterDetailsGameCenterAchievementsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterDetailsGameCenterAppVersionsGetToManyRelatedRaw(requestParameters: GameCenterDetailsGameCenterAppVersionsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterAppVersionsResponse>>;
    /**
     */
    gameCenterDetailsGameCenterAppVersionsGetToManyRelated(requestParameters: GameCenterDetailsGameCenterAppVersionsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterAppVersionsResponse>;
    /**
     */
    gameCenterDetailsGameCenterGroupGetToOneRelatedRaw(requestParameters: GameCenterDetailsGameCenterGroupGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterGroupResponse>>;
    /**
     */
    gameCenterDetailsGameCenterGroupGetToOneRelated(requestParameters: GameCenterDetailsGameCenterGroupGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterGroupResponse>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetsResponse>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelated(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetsResponse>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationship(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationship(requestParameters: GameCenterDetailsGameCenterLeaderboardSetsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsGetToManyRelatedRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardsResponse>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsGetToManyRelated(requestParameters: GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardsResponse>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailGameCenterLeaderboardsLinkagesResponse>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsGetToManyRelationship(requestParameters: GameCenterDetailsGameCenterLeaderboardsGetToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailGameCenterLeaderboardsLinkagesResponse>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipRaw(requestParameters: GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationship(requestParameters: GameCenterDetailsGameCenterLeaderboardsReplaceToManyRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterDetailsGetInstanceRaw(requestParameters: GameCenterDetailsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailResponse>>;
    /**
     */
    gameCenterDetailsGetInstance(requestParameters: GameCenterDetailsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailResponse>;
    /**
     */
    gameCenterDetailsLeaderboardReleasesGetToManyRelatedRaw(requestParameters: GameCenterDetailsLeaderboardReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardReleasesResponse>>;
    /**
     */
    gameCenterDetailsLeaderboardReleasesGetToManyRelated(requestParameters: GameCenterDetailsLeaderboardReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardReleasesResponse>;
    /**
     */
    gameCenterDetailsLeaderboardSetReleasesGetToManyRelatedRaw(requestParameters: GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardSetReleasesResponse>>;
    /**
     */
    gameCenterDetailsLeaderboardSetReleasesGetToManyRelated(requestParameters: GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardSetReleasesResponse>;
    /**
     */
    gameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsRaw(requestParameters: GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingAppRequestsV1MetricResponse>>;
    /**
     */
    gameCenterDetailsRuleBasedMatchmakingRequestsGetMetrics(requestParameters: GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingAppRequestsV1MetricResponse>;
    /**
     */
    gameCenterDetailsUpdateInstanceRaw(requestParameters: GameCenterDetailsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterDetailResponse>>;
    /**
     */
    gameCenterDetailsUpdateInstance(requestParameters: GameCenterDetailsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterDetailResponse>;
}
/**
 * @export
 */
export declare const GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementReleasesEnum: {
    readonly GameCenterAchievement: "gameCenterAchievement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly Live: "live";
};
export type GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementReleasesEnum = (typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementReleasesEnum)[keyof typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementsEnum: {
    readonly Archived: "archived";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GroupAchievement: "groupAchievement";
    readonly Localizations: "localizations";
    readonly Points: "points";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly Repeatable: "repeatable";
    readonly ShowBeforeEarned: "showBeforeEarned";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementsEnum = (typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementsEnum)[keyof typeof GameCenterDetailsAchievementReleasesGetToManyRelatedFieldsGameCenterAchievementsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsAchievementReleasesGetToManyRelatedIncludeEnum: {
    readonly GameCenterAchievement: "gameCenterAchievement";
    readonly GameCenterDetail: "gameCenterDetail";
};
export type GameCenterDetailsAchievementReleasesGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsAchievementReleasesGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsAchievementReleasesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsClassicMatchmakingRequestsGetMetricsGranularityEnum: {
    readonly P1D: "P1D";
    readonly Pt1H: "PT1H";
    readonly Pt15M: "PT15M";
};
export type GameCenterDetailsClassicMatchmakingRequestsGetMetricsGranularityEnum = (typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsGranularityEnum)[keyof typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsGranularityEnum];
/**
 * @export
 */
export declare const GameCenterDetailsClassicMatchmakingRequestsGetMetricsGroupByEnum: {
    readonly Result: "result";
};
export type GameCenterDetailsClassicMatchmakingRequestsGetMetricsGroupByEnum = (typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsGroupByEnum)[keyof typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsGroupByEnum];
/**
 * @export
 */
export declare const GameCenterDetailsClassicMatchmakingRequestsGetMetricsFilterResultEnum: {
    readonly Matched: "MATCHED";
    readonly Canceled: "CANCELED";
    readonly Expired: "EXPIRED";
};
export type GameCenterDetailsClassicMatchmakingRequestsGetMetricsFilterResultEnum = (typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsFilterResultEnum)[keyof typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsFilterResultEnum];
/**
 * @export
 */
export declare const GameCenterDetailsClassicMatchmakingRequestsGetMetricsSortEnum: {
    readonly AverageSecondsInQueue: "-averageSecondsInQueue";
    readonly Count: "-count";
    readonly P50SecondsInQueue: "-p50SecondsInQueue";
    readonly P95SecondsInQueue: "-p95SecondsInQueue";
};
export type GameCenterDetailsClassicMatchmakingRequestsGetMetricsSortEnum = (typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsSortEnum)[keyof typeof GameCenterDetailsClassicMatchmakingRequestsGetMetricsSortEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementReleasesEnum: {
    readonly GameCenterAchievement: "gameCenterAchievement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly Live: "live";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementReleasesEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementReleasesEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterGroupsEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterGroupsEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementLocalizationsEnum: {
    readonly AfterEarnedDescription: "afterEarnedDescription";
    readonly BeforeEarnedDescription: "beforeEarnedDescription";
    readonly GameCenterAchievement: "gameCenterAchievement";
    readonly GameCenterAchievementImage: "gameCenterAchievementImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementLocalizationsEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementLocalizationsEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementsEnum: {
    readonly Archived: "archived";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GroupAchievement: "groupAchievement";
    readonly Localizations: "localizations";
    readonly Points: "points";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly Repeatable: "repeatable";
    readonly ShowBeforeEarned: "showBeforeEarned";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementsEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementsEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedFieldsGameCenterAchievementsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAchievementsGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GroupAchievement: "groupAchievement";
    readonly Localizations: "localizations";
    readonly Releases: "releases";
};
export type GameCenterDetailsGameCenterAchievementsGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsGameCenterAchievementsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsAppStoreVersionsEnum: {
    readonly AgeRatingDeclaration: "ageRatingDeclaration";
    readonly AlternativeDistributionPackage: "alternativeDistributionPackage";
    readonly App: "app";
    readonly AppClipDefaultExperience: "appClipDefaultExperience";
    readonly AppStoreReviewDetail: "appStoreReviewDetail";
    readonly AppStoreState: "appStoreState";
    readonly AppStoreVersionExperiments: "appStoreVersionExperiments";
    readonly AppStoreVersionExperimentsV2: "appStoreVersionExperimentsV2";
    readonly AppStoreVersionLocalizations: "appStoreVersionLocalizations";
    readonly AppStoreVersionPhasedRelease: "appStoreVersionPhasedRelease";
    readonly AppStoreVersionSubmission: "appStoreVersionSubmission";
    readonly AppVersionState: "appVersionState";
    readonly Build: "build";
    readonly Copyright: "copyright";
    readonly CreatedDate: "createdDate";
    readonly CustomerReviews: "customerReviews";
    readonly Downloadable: "downloadable";
    readonly EarliestReleaseDate: "earliestReleaseDate";
    readonly Platform: "platform";
    readonly ReleaseType: "releaseType";
    readonly ReviewType: "reviewType";
    readonly RoutingAppCoverage: "routingAppCoverage";
    readonly VersionString: "versionString";
};
export type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsAppStoreVersionsEnum = (typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsAppStoreVersionsEnum)[keyof typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsAppStoreVersionsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsGameCenterAppVersionsEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly CompatibilityVersions: "compatibilityVersions";
    readonly Enabled: "enabled";
};
export type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsGameCenterAppVersionsEnum = (typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsGameCenterAppVersionsEnum)[keyof typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedFieldsGameCenterAppVersionsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterAppVersionsGetToManyRelatedIncludeEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly CompatibilityVersions: "compatibilityVersions";
};
export type GameCenterDetailsGameCenterAppVersionsGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsGameCenterAppVersionsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterGroupsEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterGroupsEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterAchievementsEnum: {
    readonly Archived: "archived";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GroupAchievement: "groupAchievement";
    readonly Localizations: "localizations";
    readonly Points: "points";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly Repeatable: "repeatable";
    readonly ShowBeforeEarned: "showBeforeEarned";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterAchievementsEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterAchievementsEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedFieldsGameCenterAchievementsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterGroupGetToOneRelatedIncludeEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
};
export type GameCenterDetailsGameCenterGroupGetToOneRelatedIncludeEnum = (typeof GameCenterDetailsGameCenterGroupGetToOneRelatedIncludeEnum)[keyof typeof GameCenterDetailsGameCenterGroupGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum: {
    readonly GameCenterLeaderboardSet: "gameCenterLeaderboardSet";
    readonly GameCenterLeaderboardSetImage: "gameCenterLeaderboardSetImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboardSet: "gameCenterLeaderboardSet";
    readonly Live: "live";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterGroupsEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterGroupsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly Releases: "releases";
};
export type GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardSetsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum: {
    readonly FormatterOverride: "formatterOverride";
    readonly FormatterSuffix: "formatterSuffix";
    readonly FormatterSuffixSingular: "formatterSuffixSingular";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly GameCenterLeaderboardImage: "gameCenterLeaderboardImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterGroupsEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterGroupsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly Releases: "releases";
};
export type GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsGameCenterLeaderboardsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceIncludeEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsGetInstanceIncludeEnum = (typeof GameCenterDetailsGetInstanceIncludeEnum)[keyof typeof GameCenterDetailsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterAchievementReleasesEnum: {
    readonly GameCenterAchievement: "gameCenterAchievement";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly Live: "live";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterAchievementReleasesEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterAchievementReleasesEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterAchievementReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboardSet: "gameCenterLeaderboardSet";
    readonly Live: "live";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetReleasesEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetReleasesEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterGroupsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterGroupsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterAchievementsEnum: {
    readonly Archived: "archived";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GroupAchievement: "groupAchievement";
    readonly Localizations: "localizations";
    readonly Points: "points";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly Repeatable: "repeatable";
    readonly ShowBeforeEarned: "showBeforeEarned";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterAchievementsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterAchievementsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterAchievementsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterAppVersionsEnum: {
    readonly AppStoreVersion: "appStoreVersion";
    readonly CompatibilityVersions: "compatibilityVersions";
    readonly Enabled: "enabled";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterAppVersionsEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterAppVersionsEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterAppVersionsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterDetailsGetInstanceFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardReleasesGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
};
export type GameCenterDetailsLeaderboardReleasesGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsLeaderboardReleasesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboardSet: "gameCenterLeaderboardSet";
    readonly Live: "live";
};
export type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum = (typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum)[keyof typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetReleasesEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboardSet: "gameCenterLeaderboardSet";
};
export type GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedIncludeEnum = (typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedIncludeEnum)[keyof typeof GameCenterDetailsLeaderboardSetReleasesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGranularityEnum: {
    readonly P1D: "P1D";
    readonly Pt1H: "PT1H";
    readonly Pt15M: "PT15M";
};
export type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGranularityEnum = (typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGranularityEnum)[keyof typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGranularityEnum];
/**
 * @export
 */
export declare const GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGroupByEnum: {
    readonly Result: "result";
};
export type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGroupByEnum = (typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGroupByEnum)[keyof typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsGroupByEnum];
/**
 * @export
 */
export declare const GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsFilterResultEnum: {
    readonly Matched: "MATCHED";
    readonly Canceled: "CANCELED";
    readonly Expired: "EXPIRED";
};
export type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsFilterResultEnum = (typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsFilterResultEnum)[keyof typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsFilterResultEnum];
/**
 * @export
 */
export declare const GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsSortEnum: {
    readonly AverageSecondsInQueue: "-averageSecondsInQueue";
    readonly Count: "-count";
    readonly P50SecondsInQueue: "-p50SecondsInQueue";
    readonly P95SecondsInQueue: "-p95SecondsInQueue";
};
export type GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsSortEnum = (typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsSortEnum)[keyof typeof GameCenterDetailsRuleBasedMatchmakingRequestsGetMetricsSortEnum];
