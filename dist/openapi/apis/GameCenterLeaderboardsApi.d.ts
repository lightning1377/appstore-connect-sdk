/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { GameCenterLeaderboardCreateRequest, GameCenterLeaderboardGroupLeaderboardLinkageRequest, GameCenterLeaderboardGroupLeaderboardLinkageResponse, GameCenterLeaderboardLocalizationsResponse, GameCenterLeaderboardReleasesResponse, GameCenterLeaderboardResponse, GameCenterLeaderboardUpdateRequest } from "../models";
export interface GameCenterLeaderboardsCreateInstanceRequest {
    gameCenterLeaderboardCreateRequest: GameCenterLeaderboardCreateRequest;
}
export interface GameCenterLeaderboardsDeleteInstanceRequest {
    id: string;
}
export interface GameCenterLeaderboardsGetInstanceRequest {
    id: string;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardsEnum>;
    include?: Array<GameCenterLeaderboardsGetInstanceIncludeEnum>;
    fieldsGameCenterLeaderboardLocalizations?: Array<GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardLocalizationsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardReleasesEnum>;
    limitGameCenterLeaderboardSets?: number;
    limitLocalizations?: number;
    limitReleases?: number;
}
export interface GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedRequest {
    id: string;
    fieldsGameCenterLeaderboardLocalizations?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum>;
    fieldsGameCenterLeaderboardSets?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum>;
    fieldsGameCenterGroups?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum>;
    fieldsGameCenterDetails?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum>;
    limitGameCenterLeaderboardSets?: number;
    limitLocalizations?: number;
    limitReleases?: number;
    include?: Array<GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedIncludeEnum>;
}
export interface GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipRequest {
    id: string;
}
export interface GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipRequest {
    id: string;
    gameCenterLeaderboardGroupLeaderboardLinkageRequest: GameCenterLeaderboardGroupLeaderboardLinkageRequest;
}
export interface GameCenterLeaderboardsLocalizationsGetToManyRelatedRequest {
    id: string;
    fieldsGameCenterLeaderboardLocalizations?: Array<GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum>;
    fieldsGameCenterLeaderboardImages?: Array<GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardImagesEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardsEnum>;
    limit?: number;
    include?: Array<GameCenterLeaderboardsLocalizationsGetToManyRelatedIncludeEnum>;
}
export interface GameCenterLeaderboardsReleasesGetToManyRelatedRequest {
    id: string;
    filterLive?: Array<string>;
    filterGameCenterDetail?: Array<string>;
    fieldsGameCenterDetails?: Array<GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterDetailsEnum>;
    fieldsGameCenterLeaderboards?: Array<GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum>;
    fieldsGameCenterLeaderboardReleases?: Array<GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum>;
    limit?: number;
    include?: Array<GameCenterLeaderboardsReleasesGetToManyRelatedIncludeEnum>;
}
export interface GameCenterLeaderboardsUpdateInstanceRequest {
    id: string;
    gameCenterLeaderboardUpdateRequest: GameCenterLeaderboardUpdateRequest;
}
/**
 *
 */
export declare class GameCenterLeaderboardsApi extends runtime.BaseAPI {
    /**
     */
    gameCenterLeaderboardsCreateInstanceRaw(requestParameters: GameCenterLeaderboardsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardResponse>>;
    /**
     */
    gameCenterLeaderboardsCreateInstance(requestParameters: GameCenterLeaderboardsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardResponse>;
    /**
     */
    gameCenterLeaderboardsDeleteInstanceRaw(requestParameters: GameCenterLeaderboardsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterLeaderboardsDeleteInstance(requestParameters: GameCenterLeaderboardsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterLeaderboardsGetInstanceRaw(requestParameters: GameCenterLeaderboardsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardResponse>>;
    /**
     */
    gameCenterLeaderboardsGetInstance(requestParameters: GameCenterLeaderboardsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardResponse>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardGetToOneRelatedRaw(requestParameters: GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardResponse>>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardGetToOneRelated(requestParameters: GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardResponse>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipRaw(requestParameters: GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardGroupLeaderboardLinkageResponse>>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardGetToOneRelationship(requestParameters: GameCenterLeaderboardsGroupLeaderboardGetToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardGroupLeaderboardLinkageResponse>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipRaw(requestParameters: GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationship(requestParameters: GameCenterLeaderboardsGroupLeaderboardUpdateToOneRelationshipRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterLeaderboardsLocalizationsGetToManyRelatedRaw(requestParameters: GameCenterLeaderboardsLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardLocalizationsResponse>>;
    /**
     */
    gameCenterLeaderboardsLocalizationsGetToManyRelated(requestParameters: GameCenterLeaderboardsLocalizationsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardLocalizationsResponse>;
    /**
     */
    gameCenterLeaderboardsReleasesGetToManyRelatedRaw(requestParameters: GameCenterLeaderboardsReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardReleasesResponse>>;
    /**
     */
    gameCenterLeaderboardsReleasesGetToManyRelated(requestParameters: GameCenterLeaderboardsReleasesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardReleasesResponse>;
    /**
     */
    gameCenterLeaderboardsUpdateInstanceRaw(requestParameters: GameCenterLeaderboardsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterLeaderboardResponse>>;
    /**
     */
    gameCenterLeaderboardsUpdateInstance(requestParameters: GameCenterLeaderboardsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterLeaderboardResponse>;
}
/**
 * @export
 */
export declare const GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardsEnum = (typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGetInstanceIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly Releases: "releases";
};
export type GameCenterLeaderboardsGetInstanceIncludeEnum = (typeof GameCenterLeaderboardsGetInstanceIncludeEnum)[keyof typeof GameCenterLeaderboardsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardLocalizationsEnum: {
    readonly FormatterOverride: "formatterOverride";
    readonly FormatterSuffix: "formatterSuffix";
    readonly FormatterSuffixSingular: "formatterSuffixSingular";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly GameCenterLeaderboardImage: "gameCenterLeaderboardImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardLocalizationsEnum = (typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardLocalizationsEnum)[keyof typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterLeaderboardsGetInstanceFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum: {
    readonly FormatterOverride: "formatterOverride";
    readonly FormatterSuffix: "formatterSuffix";
    readonly FormatterSuffixSingular: "formatterSuffixSingular";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly GameCenterLeaderboardImage: "gameCenterLeaderboardImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly GroupLeaderboardSet: "groupLeaderboardSet";
    readonly Localizations: "localizations";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardSetsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum: {
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterDetails: "gameCenterDetails";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly ReferenceName: "referenceName";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterGroupsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly Releases: "releases";
};
export type GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedIncludeEnum = (typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedIncludeEnum)[keyof typeof GameCenterLeaderboardsGroupLeaderboardGetToOneRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum: {
    readonly FormatterOverride: "formatterOverride";
    readonly FormatterSuffix: "formatterSuffix";
    readonly FormatterSuffixSingular: "formatterSuffixSingular";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly GameCenterLeaderboardImage: "gameCenterLeaderboardImage";
    readonly Locale: "locale";
    readonly Name: "name";
};
export type GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum = (typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum)[keyof typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardLocalizationsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardImagesEnum: {
    readonly AssetDeliveryState: "assetDeliveryState";
    readonly FileName: "fileName";
    readonly FileSize: "fileSize";
    readonly GameCenterLeaderboardLocalization: "gameCenterLeaderboardLocalization";
    readonly ImageAsset: "imageAsset";
    readonly UploadOperations: "uploadOperations";
    readonly Uploaded: "uploaded";
};
export type GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardImagesEnum = (typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardImagesEnum)[keyof typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardImagesEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsLocalizationsGetToManyRelatedIncludeEnum: {
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly GameCenterLeaderboardImage: "gameCenterLeaderboardImage";
};
export type GameCenterLeaderboardsLocalizationsGetToManyRelatedIncludeEnum = (typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedIncludeEnum)[keyof typeof GameCenterLeaderboardsLocalizationsGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterDetailsEnum: {
    readonly AchievementReleases: "achievementReleases";
    readonly App: "app";
    readonly ArcadeEnabled: "arcadeEnabled";
    readonly ChallengeEnabled: "challengeEnabled";
    readonly DefaultGroupLeaderboard: "defaultGroupLeaderboard";
    readonly DefaultLeaderboard: "defaultLeaderboard";
    readonly GameCenterAchievements: "gameCenterAchievements";
    readonly GameCenterAppVersions: "gameCenterAppVersions";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GameCenterLeaderboards: "gameCenterLeaderboards";
    readonly LeaderboardReleases: "leaderboardReleases";
    readonly LeaderboardSetReleases: "leaderboardSetReleases";
};
export type GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterDetailsEnum = (typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterDetailsEnum)[keyof typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterDetailsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum: {
    readonly Archived: "archived";
    readonly DefaultFormatter: "defaultFormatter";
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterGroup: "gameCenterGroup";
    readonly GameCenterLeaderboardSets: "gameCenterLeaderboardSets";
    readonly GroupLeaderboard: "groupLeaderboard";
    readonly Localizations: "localizations";
    readonly RecurrenceDuration: "recurrenceDuration";
    readonly RecurrenceRule: "recurrenceRule";
    readonly RecurrenceStartDate: "recurrenceStartDate";
    readonly ReferenceName: "referenceName";
    readonly Releases: "releases";
    readonly ScoreRangeEnd: "scoreRangeEnd";
    readonly ScoreRangeStart: "scoreRangeStart";
    readonly ScoreSortType: "scoreSortType";
    readonly SubmissionType: "submissionType";
    readonly VendorIdentifier: "vendorIdentifier";
};
export type GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum = (typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum)[keyof typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardsEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
    readonly Live: "live";
};
export type GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum = (typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum)[keyof typeof GameCenterLeaderboardsReleasesGetToManyRelatedFieldsGameCenterLeaderboardReleasesEnum];
/**
 * @export
 */
export declare const GameCenterLeaderboardsReleasesGetToManyRelatedIncludeEnum: {
    readonly GameCenterDetail: "gameCenterDetail";
    readonly GameCenterLeaderboard: "gameCenterLeaderboard";
};
export type GameCenterLeaderboardsReleasesGetToManyRelatedIncludeEnum = (typeof GameCenterLeaderboardsReleasesGetToManyRelatedIncludeEnum)[keyof typeof GameCenterLeaderboardsReleasesGetToManyRelatedIncludeEnum];
