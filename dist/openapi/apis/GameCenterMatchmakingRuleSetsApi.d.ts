/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { GameCenterMatchmakingQueuesResponse, GameCenterMatchmakingRuleSetCreateRequest, GameCenterMatchmakingRuleSetResponse, GameCenterMatchmakingRuleSetUpdateRequest, GameCenterMatchmakingRuleSetsResponse, GameCenterMatchmakingRulesResponse, GameCenterMatchmakingTeamsResponse } from "../models";
export interface GameCenterMatchmakingRuleSetsCreateInstanceRequest {
    gameCenterMatchmakingRuleSetCreateRequest: GameCenterMatchmakingRuleSetCreateRequest;
}
export interface GameCenterMatchmakingRuleSetsDeleteInstanceRequest {
    id: string;
}
export interface GameCenterMatchmakingRuleSetsGetCollectionRequest {
    fieldsGameCenterMatchmakingRuleSets?: Array<GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRuleSetsEnum>;
    limit?: number;
    include?: Array<GameCenterMatchmakingRuleSetsGetCollectionIncludeEnum>;
    fieldsGameCenterMatchmakingQueues?: Array<GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingQueuesEnum>;
    fieldsGameCenterMatchmakingTeams?: Array<GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingTeamsEnum>;
    fieldsGameCenterMatchmakingRules?: Array<GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRulesEnum>;
    limitMatchmakingQueues?: number;
    limitRules?: number;
    limitTeams?: number;
}
export interface GameCenterMatchmakingRuleSetsGetInstanceRequest {
    id: string;
    fieldsGameCenterMatchmakingRuleSets?: Array<GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRuleSetsEnum>;
    include?: Array<GameCenterMatchmakingRuleSetsGetInstanceIncludeEnum>;
    fieldsGameCenterMatchmakingQueues?: Array<GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingQueuesEnum>;
    fieldsGameCenterMatchmakingTeams?: Array<GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingTeamsEnum>;
    fieldsGameCenterMatchmakingRules?: Array<GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRulesEnum>;
    limitMatchmakingQueues?: number;
    limitRules?: number;
    limitTeams?: number;
}
export interface GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedRequest {
    id: string;
    fieldsGameCenterMatchmakingQueues?: Array<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingQueuesEnum>;
    fieldsGameCenterMatchmakingRuleSets?: Array<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingRuleSetsEnum>;
    limit?: number;
    include?: Array<GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedIncludeEnum>;
}
export interface GameCenterMatchmakingRuleSetsRulesGetToManyRelatedRequest {
    id: string;
    fieldsGameCenterMatchmakingRules?: Array<GameCenterMatchmakingRuleSetsRulesGetToManyRelatedFieldsGameCenterMatchmakingRulesEnum>;
    limit?: number;
}
export interface GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedRequest {
    id: string;
    fieldsGameCenterMatchmakingTeams?: Array<GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedFieldsGameCenterMatchmakingTeamsEnum>;
    limit?: number;
}
export interface GameCenterMatchmakingRuleSetsUpdateInstanceRequest {
    id: string;
    gameCenterMatchmakingRuleSetUpdateRequest: GameCenterMatchmakingRuleSetUpdateRequest;
}
/**
 *
 */
export declare class GameCenterMatchmakingRuleSetsApi extends runtime.BaseAPI {
    /**
     */
    gameCenterMatchmakingRuleSetsCreateInstanceRaw(requestParameters: GameCenterMatchmakingRuleSetsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingRuleSetResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsCreateInstance(requestParameters: GameCenterMatchmakingRuleSetsCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingRuleSetResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsDeleteInstanceRaw(requestParameters: GameCenterMatchmakingRuleSetsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     */
    gameCenterMatchmakingRuleSetsDeleteInstance(requestParameters: GameCenterMatchmakingRuleSetsDeleteInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     */
    gameCenterMatchmakingRuleSetsGetCollectionRaw(requestParameters: GameCenterMatchmakingRuleSetsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingRuleSetsResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsGetCollection(requestParameters?: GameCenterMatchmakingRuleSetsGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingRuleSetsResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsGetInstanceRaw(requestParameters: GameCenterMatchmakingRuleSetsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingRuleSetResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsGetInstance(requestParameters: GameCenterMatchmakingRuleSetsGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingRuleSetResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedRaw(requestParameters: GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingQueuesResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelated(requestParameters: GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingQueuesResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsRulesGetToManyRelatedRaw(requestParameters: GameCenterMatchmakingRuleSetsRulesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingRulesResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsRulesGetToManyRelated(requestParameters: GameCenterMatchmakingRuleSetsRulesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingRulesResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsTeamsGetToManyRelatedRaw(requestParameters: GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingTeamsResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsTeamsGetToManyRelated(requestParameters: GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingTeamsResponse>;
    /**
     */
    gameCenterMatchmakingRuleSetsUpdateInstanceRaw(requestParameters: GameCenterMatchmakingRuleSetsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GameCenterMatchmakingRuleSetResponse>>;
    /**
     */
    gameCenterMatchmakingRuleSetsUpdateInstance(requestParameters: GameCenterMatchmakingRuleSetsUpdateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GameCenterMatchmakingRuleSetResponse>;
}
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRuleSetsEnum: {
    readonly MatchmakingQueues: "matchmakingQueues";
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleLanguageVersion: "ruleLanguageVersion";
    readonly Rules: "rules";
    readonly Teams: "teams";
};
export type GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRuleSetsEnum = (typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRuleSetsEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRuleSetsEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetCollectionIncludeEnum: {
    readonly MatchmakingQueues: "matchmakingQueues";
    readonly Rules: "rules";
    readonly Teams: "teams";
};
export type GameCenterMatchmakingRuleSetsGetCollectionIncludeEnum = (typeof GameCenterMatchmakingRuleSetsGetCollectionIncludeEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetCollectionIncludeEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingQueuesEnum: {
    readonly ClassicMatchmakingBundleIds: "classicMatchmakingBundleIds";
    readonly ExperimentRuleSet: "experimentRuleSet";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingQueuesEnum = (typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingQueuesEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingQueuesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingTeamsEnum: {
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingTeamsEnum = (typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingTeamsEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingTeamsEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRulesEnum: {
    readonly Description: "description";
    readonly Expression: "expression";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
    readonly Type: "type";
    readonly Weight: "weight";
};
export type GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRulesEnum = (typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRulesEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetCollectionFieldsGameCenterMatchmakingRulesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRuleSetsEnum: {
    readonly MatchmakingQueues: "matchmakingQueues";
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleLanguageVersion: "ruleLanguageVersion";
    readonly Rules: "rules";
    readonly Teams: "teams";
};
export type GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRuleSetsEnum = (typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRuleSetsEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRuleSetsEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetInstanceIncludeEnum: {
    readonly MatchmakingQueues: "matchmakingQueues";
    readonly Rules: "rules";
    readonly Teams: "teams";
};
export type GameCenterMatchmakingRuleSetsGetInstanceIncludeEnum = (typeof GameCenterMatchmakingRuleSetsGetInstanceIncludeEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingQueuesEnum: {
    readonly ClassicMatchmakingBundleIds: "classicMatchmakingBundleIds";
    readonly ExperimentRuleSet: "experimentRuleSet";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingQueuesEnum = (typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingQueuesEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingQueuesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingTeamsEnum: {
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingTeamsEnum = (typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingTeamsEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingTeamsEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRulesEnum: {
    readonly Description: "description";
    readonly Expression: "expression";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
    readonly Type: "type";
    readonly Weight: "weight";
};
export type GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRulesEnum = (typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRulesEnum)[keyof typeof GameCenterMatchmakingRuleSetsGetInstanceFieldsGameCenterMatchmakingRulesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingQueuesEnum: {
    readonly ClassicMatchmakingBundleIds: "classicMatchmakingBundleIds";
    readonly ExperimentRuleSet: "experimentRuleSet";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingQueuesEnum = (typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingQueuesEnum)[keyof typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingQueuesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingRuleSetsEnum: {
    readonly MatchmakingQueues: "matchmakingQueues";
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleLanguageVersion: "ruleLanguageVersion";
    readonly Rules: "rules";
    readonly Teams: "teams";
};
export type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingRuleSetsEnum = (typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingRuleSetsEnum)[keyof typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedFieldsGameCenterMatchmakingRuleSetsEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedIncludeEnum: {
    readonly ExperimentRuleSet: "experimentRuleSet";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedIncludeEnum = (typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedIncludeEnum)[keyof typeof GameCenterMatchmakingRuleSetsMatchmakingQueuesGetToManyRelatedIncludeEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsRulesGetToManyRelatedFieldsGameCenterMatchmakingRulesEnum: {
    readonly Description: "description";
    readonly Expression: "expression";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
    readonly Type: "type";
    readonly Weight: "weight";
};
export type GameCenterMatchmakingRuleSetsRulesGetToManyRelatedFieldsGameCenterMatchmakingRulesEnum = (typeof GameCenterMatchmakingRuleSetsRulesGetToManyRelatedFieldsGameCenterMatchmakingRulesEnum)[keyof typeof GameCenterMatchmakingRuleSetsRulesGetToManyRelatedFieldsGameCenterMatchmakingRulesEnum];
/**
 * @export
 */
export declare const GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedFieldsGameCenterMatchmakingTeamsEnum: {
    readonly MaxPlayers: "maxPlayers";
    readonly MinPlayers: "minPlayers";
    readonly ReferenceName: "referenceName";
    readonly RuleSet: "ruleSet";
};
export type GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedFieldsGameCenterMatchmakingTeamsEnum = (typeof GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedFieldsGameCenterMatchmakingTeamsEnum)[keyof typeof GameCenterMatchmakingRuleSetsTeamsGetToManyRelatedFieldsGameCenterMatchmakingTeamsEnum];
