/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { ScmProviderResponse, ScmProvidersResponse, ScmRepositoriesResponse } from "../models";
export interface ScmProvidersGetCollectionRequest {
    fieldsScmProviders?: Array<ScmProvidersGetCollectionFieldsScmProvidersEnum>;
    limit?: number;
    fieldsScmRepositories?: Array<ScmProvidersGetCollectionFieldsScmRepositoriesEnum>;
}
export interface ScmProvidersGetInstanceRequest {
    id: string;
    fieldsScmProviders?: Array<ScmProvidersGetInstanceFieldsScmProvidersEnum>;
    fieldsScmRepositories?: Array<ScmProvidersGetInstanceFieldsScmRepositoriesEnum>;
}
export interface ScmProvidersRepositoriesGetToManyRelatedRequest {
    id: string;
    filterId?: Array<string>;
    fieldsScmGitReferences?: Array<ScmProvidersRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum>;
    fieldsScmProviders?: Array<ScmProvidersRepositoriesGetToManyRelatedFieldsScmProvidersEnum>;
    fieldsScmRepositories?: Array<ScmProvidersRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum>;
    limit?: number;
    include?: Array<ScmProvidersRepositoriesGetToManyRelatedIncludeEnum>;
}
/**
 *
 */
export declare class ScmProvidersApi extends runtime.BaseAPI {
    /**
     */
    scmProvidersGetCollectionRaw(requestParameters: ScmProvidersGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScmProvidersResponse>>;
    /**
     */
    scmProvidersGetCollection(requestParameters?: ScmProvidersGetCollectionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScmProvidersResponse>;
    /**
     */
    scmProvidersGetInstanceRaw(requestParameters: ScmProvidersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScmProviderResponse>>;
    /**
     */
    scmProvidersGetInstance(requestParameters: ScmProvidersGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScmProviderResponse>;
    /**
     */
    scmProvidersRepositoriesGetToManyRelatedRaw(requestParameters: ScmProvidersRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScmRepositoriesResponse>>;
    /**
     */
    scmProvidersRepositoriesGetToManyRelated(requestParameters: ScmProvidersRepositoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScmRepositoriesResponse>;
}
/**
 * @export
 */
export declare const ScmProvidersGetCollectionFieldsScmProvidersEnum: {
    readonly Repositories: "repositories";
    readonly ScmProviderType: "scmProviderType";
    readonly Url: "url";
};
export type ScmProvidersGetCollectionFieldsScmProvidersEnum = (typeof ScmProvidersGetCollectionFieldsScmProvidersEnum)[keyof typeof ScmProvidersGetCollectionFieldsScmProvidersEnum];
/**
 * @export
 */
export declare const ScmProvidersGetCollectionFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type ScmProvidersGetCollectionFieldsScmRepositoriesEnum = (typeof ScmProvidersGetCollectionFieldsScmRepositoriesEnum)[keyof typeof ScmProvidersGetCollectionFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const ScmProvidersGetInstanceFieldsScmProvidersEnum: {
    readonly Repositories: "repositories";
    readonly ScmProviderType: "scmProviderType";
    readonly Url: "url";
};
export type ScmProvidersGetInstanceFieldsScmProvidersEnum = (typeof ScmProvidersGetInstanceFieldsScmProvidersEnum)[keyof typeof ScmProvidersGetInstanceFieldsScmProvidersEnum];
/**
 * @export
 */
export declare const ScmProvidersGetInstanceFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type ScmProvidersGetInstanceFieldsScmRepositoriesEnum = (typeof ScmProvidersGetInstanceFieldsScmRepositoriesEnum)[keyof typeof ScmProvidersGetInstanceFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const ScmProvidersRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum: {
    readonly CanonicalName: "canonicalName";
    readonly IsDeleted: "isDeleted";
    readonly Kind: "kind";
    readonly Name: "name";
    readonly Repository: "repository";
};
export type ScmProvidersRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum = (typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum)[keyof typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmGitReferencesEnum];
/**
 * @export
 */
export declare const ScmProvidersRepositoriesGetToManyRelatedFieldsScmProvidersEnum: {
    readonly Repositories: "repositories";
    readonly ScmProviderType: "scmProviderType";
    readonly Url: "url";
};
export type ScmProvidersRepositoriesGetToManyRelatedFieldsScmProvidersEnum = (typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmProvidersEnum)[keyof typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmProvidersEnum];
/**
 * @export
 */
export declare const ScmProvidersRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly GitReferences: "gitReferences";
    readonly HttpCloneUrl: "httpCloneUrl";
    readonly LastAccessedDate: "lastAccessedDate";
    readonly OwnerName: "ownerName";
    readonly PullRequests: "pullRequests";
    readonly RepositoryName: "repositoryName";
    readonly ScmProvider: "scmProvider";
    readonly SshCloneUrl: "sshCloneUrl";
};
export type ScmProvidersRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum = (typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum)[keyof typeof ScmProvidersRepositoriesGetToManyRelatedFieldsScmRepositoriesEnum];
/**
 * @export
 */
export declare const ScmProvidersRepositoriesGetToManyRelatedIncludeEnum: {
    readonly DefaultBranch: "defaultBranch";
    readonly ScmProvider: "scmProvider";
};
export type ScmProvidersRepositoriesGetToManyRelatedIncludeEnum = (typeof ScmProvidersRepositoriesGetToManyRelatedIncludeEnum)[keyof typeof ScmProvidersRepositoriesGetToManyRelatedIncludeEnum];
