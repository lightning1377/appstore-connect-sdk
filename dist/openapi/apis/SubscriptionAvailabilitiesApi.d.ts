/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { SubscriptionAvailabilityCreateRequest, SubscriptionAvailabilityResponse, TerritoriesResponse } from "../models";
export interface SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedRequest {
    id: string;
    fieldsTerritories?: Array<SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedFieldsTerritoriesEnum>;
    limit?: number;
}
export interface SubscriptionAvailabilitiesCreateInstanceRequest {
    subscriptionAvailabilityCreateRequest: SubscriptionAvailabilityCreateRequest;
}
export interface SubscriptionAvailabilitiesGetInstanceRequest {
    id: string;
    fieldsSubscriptionAvailabilities?: Array<SubscriptionAvailabilitiesGetInstanceFieldsSubscriptionAvailabilitiesEnum>;
    include?: Array<SubscriptionAvailabilitiesGetInstanceIncludeEnum>;
    fieldsTerritories?: Array<SubscriptionAvailabilitiesGetInstanceFieldsTerritoriesEnum>;
    limitAvailableTerritories?: number;
}
/**
 *
 */
export declare class SubscriptionAvailabilitiesApi extends runtime.BaseAPI {
    /**
     */
    subscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedRaw(requestParameters: SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TerritoriesResponse>>;
    /**
     */
    subscriptionAvailabilitiesAvailableTerritoriesGetToManyRelated(requestParameters: SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TerritoriesResponse>;
    /**
     */
    subscriptionAvailabilitiesCreateInstanceRaw(requestParameters: SubscriptionAvailabilitiesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubscriptionAvailabilityResponse>>;
    /**
     */
    subscriptionAvailabilitiesCreateInstance(requestParameters: SubscriptionAvailabilitiesCreateInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubscriptionAvailabilityResponse>;
    /**
     */
    subscriptionAvailabilitiesGetInstanceRaw(requestParameters: SubscriptionAvailabilitiesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubscriptionAvailabilityResponse>>;
    /**
     */
    subscriptionAvailabilitiesGetInstance(requestParameters: SubscriptionAvailabilitiesGetInstanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubscriptionAvailabilityResponse>;
}
/**
 * @export
 */
export declare const SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedFieldsTerritoriesEnum: {
    readonly Currency: "currency";
};
export type SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedFieldsTerritoriesEnum = (typeof SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedFieldsTerritoriesEnum)[keyof typeof SubscriptionAvailabilitiesAvailableTerritoriesGetToManyRelatedFieldsTerritoriesEnum];
/**
 * @export
 */
export declare const SubscriptionAvailabilitiesGetInstanceFieldsSubscriptionAvailabilitiesEnum: {
    readonly AvailableInNewTerritories: "availableInNewTerritories";
    readonly AvailableTerritories: "availableTerritories";
    readonly Subscription: "subscription";
};
export type SubscriptionAvailabilitiesGetInstanceFieldsSubscriptionAvailabilitiesEnum = (typeof SubscriptionAvailabilitiesGetInstanceFieldsSubscriptionAvailabilitiesEnum)[keyof typeof SubscriptionAvailabilitiesGetInstanceFieldsSubscriptionAvailabilitiesEnum];
/**
 * @export
 */
export declare const SubscriptionAvailabilitiesGetInstanceIncludeEnum: {
    readonly AvailableTerritories: "availableTerritories";
    readonly Subscription: "subscription";
};
export type SubscriptionAvailabilitiesGetInstanceIncludeEnum = (typeof SubscriptionAvailabilitiesGetInstanceIncludeEnum)[keyof typeof SubscriptionAvailabilitiesGetInstanceIncludeEnum];
/**
 * @export
 */
export declare const SubscriptionAvailabilitiesGetInstanceFieldsTerritoriesEnum: {
    readonly Currency: "currency";
};
export type SubscriptionAvailabilitiesGetInstanceFieldsTerritoriesEnum = (typeof SubscriptionAvailabilitiesGetInstanceFieldsTerritoriesEnum)[keyof typeof SubscriptionAvailabilitiesGetInstanceFieldsTerritoriesEnum];
