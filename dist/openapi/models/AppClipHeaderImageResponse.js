"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAppClipHeaderImageResponse = instanceOfAppClipHeaderImageResponse;
exports.AppClipHeaderImageResponseFromJSON = AppClipHeaderImageResponseFromJSON;
exports.AppClipHeaderImageResponseFromJSONTyped = AppClipHeaderImageResponseFromJSONTyped;
exports.AppClipHeaderImageResponseToJSON = AppClipHeaderImageResponseToJSON;
const runtime_1 = require("../runtime");
const AppClipDefaultExperienceLocalization_1 = require("./AppClipDefaultExperienceLocalization");
const AppClipHeaderImage_1 = require("./AppClipHeaderImage");
const DocumentLinks_1 = require("./DocumentLinks");
/**
 * Check if a given object implements the AppClipHeaderImageResponse interface.
 */
function instanceOfAppClipHeaderImageResponse(value) {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "links" in value;
    return isInstance;
}
function AppClipHeaderImageResponseFromJSON(json) {
    return AppClipHeaderImageResponseFromJSONTyped(json, false);
}
function AppClipHeaderImageResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        data: (0, AppClipHeaderImage_1.AppClipHeaderImageFromJSON)(json["data"]),
        included: !(0, runtime_1.exists)(json, "included") ? undefined : json["included"].map(AppClipDefaultExperienceLocalization_1.AppClipDefaultExperienceLocalizationFromJSON),
        links: (0, DocumentLinks_1.DocumentLinksFromJSON)(json["links"])
    };
}
function AppClipHeaderImageResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        data: (0, AppClipHeaderImage_1.AppClipHeaderImageToJSON)(value.data),
        included: value.included === undefined ? undefined : value.included.map(AppClipDefaultExperienceLocalization_1.AppClipDefaultExperienceLocalizationToJSON),
        links: (0, DocumentLinks_1.DocumentLinksToJSON)(value.links)
    };
}
