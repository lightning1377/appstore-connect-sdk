"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAppCustomProductPageLocalizationInlineCreateAttributes = instanceOfAppCustomProductPageLocalizationInlineCreateAttributes;
exports.AppCustomProductPageLocalizationInlineCreateAttributesFromJSON = AppCustomProductPageLocalizationInlineCreateAttributesFromJSON;
exports.AppCustomProductPageLocalizationInlineCreateAttributesFromJSONTyped = AppCustomProductPageLocalizationInlineCreateAttributesFromJSONTyped;
exports.AppCustomProductPageLocalizationInlineCreateAttributesToJSON = AppCustomProductPageLocalizationInlineCreateAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the AppCustomProductPageLocalizationInlineCreateAttributes interface.
 */
function instanceOfAppCustomProductPageLocalizationInlineCreateAttributes(value) {
    let isInstance = true;
    isInstance = isInstance && "locale" in value;
    return isInstance;
}
function AppCustomProductPageLocalizationInlineCreateAttributesFromJSON(json) {
    return AppCustomProductPageLocalizationInlineCreateAttributesFromJSONTyped(json, false);
}
function AppCustomProductPageLocalizationInlineCreateAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        locale: json["locale"],
        promotionalText: !(0, runtime_1.exists)(json, "promotionalText") ? undefined : json["promotionalText"]
    };
}
function AppCustomProductPageLocalizationInlineCreateAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        locale: value.locale,
        promotionalText: value.promotionalText
    };
}
