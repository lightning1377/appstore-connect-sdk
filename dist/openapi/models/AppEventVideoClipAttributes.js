"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAppEventVideoClipAttributes = instanceOfAppEventVideoClipAttributes;
exports.AppEventVideoClipAttributesFromJSON = AppEventVideoClipAttributesFromJSON;
exports.AppEventVideoClipAttributesFromJSONTyped = AppEventVideoClipAttributesFromJSONTyped;
exports.AppEventVideoClipAttributesToJSON = AppEventVideoClipAttributesToJSON;
const runtime_1 = require("../runtime");
const AppEventAssetType_1 = require("./AppEventAssetType");
const AppMediaAssetState_1 = require("./AppMediaAssetState");
const ImageAsset_1 = require("./ImageAsset");
const UploadOperation_1 = require("./UploadOperation");
/**
 * Check if a given object implements the AppEventVideoClipAttributes interface.
 */
function instanceOfAppEventVideoClipAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function AppEventVideoClipAttributesFromJSON(json) {
    return AppEventVideoClipAttributesFromJSONTyped(json, false);
}
function AppEventVideoClipAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        fileSize: !(0, runtime_1.exists)(json, "fileSize") ? undefined : json["fileSize"],
        fileName: !(0, runtime_1.exists)(json, "fileName") ? undefined : json["fileName"],
        previewFrameTimeCode: !(0, runtime_1.exists)(json, "previewFrameTimeCode") ? undefined : json["previewFrameTimeCode"],
        videoUrl: !(0, runtime_1.exists)(json, "videoUrl") ? undefined : json["videoUrl"],
        previewImage: !(0, runtime_1.exists)(json, "previewImage") ? undefined : (0, ImageAsset_1.ImageAssetFromJSON)(json["previewImage"]),
        uploadOperations: !(0, runtime_1.exists)(json, "uploadOperations") ? undefined : json["uploadOperations"].map(UploadOperation_1.UploadOperationFromJSON),
        assetDeliveryState: !(0, runtime_1.exists)(json, "assetDeliveryState") ? undefined : (0, AppMediaAssetState_1.AppMediaAssetStateFromJSON)(json["assetDeliveryState"]),
        appEventAssetType: !(0, runtime_1.exists)(json, "appEventAssetType") ? undefined : (0, AppEventAssetType_1.AppEventAssetTypeFromJSON)(json["appEventAssetType"])
    };
}
function AppEventVideoClipAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        fileSize: value.fileSize,
        fileName: value.fileName,
        previewFrameTimeCode: value.previewFrameTimeCode,
        videoUrl: value.videoUrl,
        previewImage: (0, ImageAsset_1.ImageAssetToJSON)(value.previewImage),
        uploadOperations: value.uploadOperations === undefined ? undefined : value.uploadOperations.map(UploadOperation_1.UploadOperationToJSON),
        assetDeliveryState: (0, AppMediaAssetState_1.AppMediaAssetStateToJSON)(value.assetDeliveryState),
        appEventAssetType: (0, AppEventAssetType_1.AppEventAssetTypeToJSON)(value.appEventAssetType)
    };
}
