"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppMediaAssetStateStateEnum = void 0;
exports.instanceOfAppMediaAssetState = instanceOfAppMediaAssetState;
exports.AppMediaAssetStateFromJSON = AppMediaAssetStateFromJSON;
exports.AppMediaAssetStateFromJSONTyped = AppMediaAssetStateFromJSONTyped;
exports.AppMediaAssetStateToJSON = AppMediaAssetStateToJSON;
const runtime_1 = require("../runtime");
const AppMediaStateError_1 = require("./AppMediaStateError");
/**
 * @export
 */
exports.AppMediaAssetStateStateEnum = {
    AwaitingUpload: "AWAITING_UPLOAD",
    UploadComplete: "UPLOAD_COMPLETE",
    Complete: "COMPLETE",
    Failed: "FAILED"
};
/**
 * Check if a given object implements the AppMediaAssetState interface.
 */
function instanceOfAppMediaAssetState(value) {
    let isInstance = true;
    return isInstance;
}
function AppMediaAssetStateFromJSON(json) {
    return AppMediaAssetStateFromJSONTyped(json, false);
}
function AppMediaAssetStateFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        errors: !(0, runtime_1.exists)(json, "errors") ? undefined : json["errors"].map(AppMediaStateError_1.AppMediaStateErrorFromJSON),
        warnings: !(0, runtime_1.exists)(json, "warnings") ? undefined : json["warnings"].map(AppMediaStateError_1.AppMediaStateErrorFromJSON),
        state: !(0, runtime_1.exists)(json, "state") ? undefined : json["state"]
    };
}
function AppMediaAssetStateToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        errors: value.errors === undefined ? undefined : value.errors.map(AppMediaStateError_1.AppMediaStateErrorToJSON),
        warnings: value.warnings === undefined ? undefined : value.warnings.map(AppMediaStateError_1.AppMediaStateErrorToJSON),
        state: value.state
    };
}
