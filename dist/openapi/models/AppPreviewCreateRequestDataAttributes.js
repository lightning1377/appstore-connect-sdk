"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAppPreviewCreateRequestDataAttributes = instanceOfAppPreviewCreateRequestDataAttributes;
exports.AppPreviewCreateRequestDataAttributesFromJSON = AppPreviewCreateRequestDataAttributesFromJSON;
exports.AppPreviewCreateRequestDataAttributesFromJSONTyped = AppPreviewCreateRequestDataAttributesFromJSONTyped;
exports.AppPreviewCreateRequestDataAttributesToJSON = AppPreviewCreateRequestDataAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the AppPreviewCreateRequestDataAttributes interface.
 */
function instanceOfAppPreviewCreateRequestDataAttributes(value) {
    let isInstance = true;
    isInstance = isInstance && "fileSize" in value;
    isInstance = isInstance && "fileName" in value;
    return isInstance;
}
function AppPreviewCreateRequestDataAttributesFromJSON(json) {
    return AppPreviewCreateRequestDataAttributesFromJSONTyped(json, false);
}
function AppPreviewCreateRequestDataAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        fileSize: json["fileSize"],
        fileName: json["fileName"],
        previewFrameTimeCode: !(0, runtime_1.exists)(json, "previewFrameTimeCode") ? undefined : json["previewFrameTimeCode"],
        mimeType: !(0, runtime_1.exists)(json, "mimeType") ? undefined : json["mimeType"]
    };
}
function AppPreviewCreateRequestDataAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        fileSize: value.fileSize,
        fileName: value.fileName,
        previewFrameTimeCode: value.previewFrameTimeCode,
        mimeType: value.mimeType
    };
}
