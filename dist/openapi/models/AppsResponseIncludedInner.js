"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppsResponseIncludedInnerFromJSON = AppsResponseIncludedInnerFromJSON;
exports.AppsResponseIncludedInnerFromJSONTyped = AppsResponseIncludedInnerFromJSONTyped;
exports.AppsResponseIncludedInnerToJSON = AppsResponseIncludedInnerToJSON;
const AppClip_1 = require("./AppClip");
const AppCustomProductPage_1 = require("./AppCustomProductPage");
const AppEncryptionDeclaration_1 = require("./AppEncryptionDeclaration");
const AppEvent_1 = require("./AppEvent");
const AppInfo_1 = require("./AppInfo");
const AppPreOrder_1 = require("./AppPreOrder");
const AppStoreVersion_1 = require("./AppStoreVersion");
const AppStoreVersionExperimentV2_1 = require("./AppStoreVersionExperimentV2");
const BetaAppLocalization_1 = require("./BetaAppLocalization");
const BetaAppReviewDetail_1 = require("./BetaAppReviewDetail");
const BetaGroup_1 = require("./BetaGroup");
const BetaLicenseAgreement_1 = require("./BetaLicenseAgreement");
const Build_1 = require("./Build");
const CiProduct_1 = require("./CiProduct");
const EndUserLicenseAgreement_1 = require("./EndUserLicenseAgreement");
const GameCenterDetail_1 = require("./GameCenterDetail");
const GameCenterEnabledVersion_1 = require("./GameCenterEnabledVersion");
const InAppPurchase_1 = require("./InAppPurchase");
const InAppPurchaseV2_1 = require("./InAppPurchaseV2");
const PrereleaseVersion_1 = require("./PrereleaseVersion");
const PromotedPurchase_1 = require("./PromotedPurchase");
const ReviewSubmission_1 = require("./ReviewSubmission");
const SubscriptionGracePeriod_1 = require("./SubscriptionGracePeriod");
const SubscriptionGroup_1 = require("./SubscriptionGroup");
function AppsResponseIncludedInnerFromJSON(json) {
    return AppsResponseIncludedInnerFromJSONTyped(json, false);
}
function AppsResponseIncludedInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (0, AppClip_1.AppClipFromJSONTyped)(json, true)), (0, AppCustomProductPage_1.AppCustomProductPageFromJSONTyped)(json, true)), (0, AppEncryptionDeclaration_1.AppEncryptionDeclarationFromJSONTyped)(json, true)), (0, AppEvent_1.AppEventFromJSONTyped)(json, true)), (0, AppInfo_1.AppInfoFromJSONTyped)(json, true)), (0, AppPreOrder_1.AppPreOrderFromJSONTyped)(json, true)), (0, AppStoreVersion_1.AppStoreVersionFromJSONTyped)(json, true)), (0, AppStoreVersionExperimentV2_1.AppStoreVersionExperimentV2FromJSONTyped)(json, true)), (0, BetaAppLocalization_1.BetaAppLocalizationFromJSONTyped)(json, true)), (0, BetaAppReviewDetail_1.BetaAppReviewDetailFromJSONTyped)(json, true)), (0, BetaGroup_1.BetaGroupFromJSONTyped)(json, true)), (0, BetaLicenseAgreement_1.BetaLicenseAgreementFromJSONTyped)(json, true)), (0, Build_1.BuildFromJSONTyped)(json, true)), (0, CiProduct_1.CiProductFromJSONTyped)(json, true)), (0, EndUserLicenseAgreement_1.EndUserLicenseAgreementFromJSONTyped)(json, true)), (0, GameCenterDetail_1.GameCenterDetailFromJSONTyped)(json, true)), (0, GameCenterEnabledVersion_1.GameCenterEnabledVersionFromJSONTyped)(json, true)), (0, InAppPurchase_1.InAppPurchaseFromJSONTyped)(json, true)), (0, InAppPurchaseV2_1.InAppPurchaseV2FromJSONTyped)(json, true)), (0, PrereleaseVersion_1.PrereleaseVersionFromJSONTyped)(json, true)), (0, PromotedPurchase_1.PromotedPurchaseFromJSONTyped)(json, true)), (0, ReviewSubmission_1.ReviewSubmissionFromJSONTyped)(json, true)), (0, SubscriptionGracePeriod_1.SubscriptionGracePeriodFromJSONTyped)(json, true)), (0, SubscriptionGroup_1.SubscriptionGroupFromJSONTyped)(json, true));
}
function AppsResponseIncludedInnerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    if ((0, AppClip_1.instanceOfAppClip)(value)) {
        return (0, AppClip_1.AppClipToJSON)(value);
    }
    if ((0, AppCustomProductPage_1.instanceOfAppCustomProductPage)(value)) {
        return (0, AppCustomProductPage_1.AppCustomProductPageToJSON)(value);
    }
    if ((0, AppEncryptionDeclaration_1.instanceOfAppEncryptionDeclaration)(value)) {
        return (0, AppEncryptionDeclaration_1.AppEncryptionDeclarationToJSON)(value);
    }
    if ((0, AppEvent_1.instanceOfAppEvent)(value)) {
        return (0, AppEvent_1.AppEventToJSON)(value);
    }
    if ((0, AppInfo_1.instanceOfAppInfo)(value)) {
        return (0, AppInfo_1.AppInfoToJSON)(value);
    }
    if ((0, AppPreOrder_1.instanceOfAppPreOrder)(value)) {
        return (0, AppPreOrder_1.AppPreOrderToJSON)(value);
    }
    if ((0, AppStoreVersion_1.instanceOfAppStoreVersion)(value)) {
        return (0, AppStoreVersion_1.AppStoreVersionToJSON)(value);
    }
    if ((0, AppStoreVersionExperimentV2_1.instanceOfAppStoreVersionExperimentV2)(value)) {
        return (0, AppStoreVersionExperimentV2_1.AppStoreVersionExperimentV2ToJSON)(value);
    }
    if ((0, BetaAppLocalization_1.instanceOfBetaAppLocalization)(value)) {
        return (0, BetaAppLocalization_1.BetaAppLocalizationToJSON)(value);
    }
    if ((0, BetaAppReviewDetail_1.instanceOfBetaAppReviewDetail)(value)) {
        return (0, BetaAppReviewDetail_1.BetaAppReviewDetailToJSON)(value);
    }
    if ((0, BetaGroup_1.instanceOfBetaGroup)(value)) {
        return (0, BetaGroup_1.BetaGroupToJSON)(value);
    }
    if ((0, BetaLicenseAgreement_1.instanceOfBetaLicenseAgreement)(value)) {
        return (0, BetaLicenseAgreement_1.BetaLicenseAgreementToJSON)(value);
    }
    if ((0, Build_1.instanceOfBuild)(value)) {
        return (0, Build_1.BuildToJSON)(value);
    }
    if ((0, CiProduct_1.instanceOfCiProduct)(value)) {
        return (0, CiProduct_1.CiProductToJSON)(value);
    }
    if ((0, EndUserLicenseAgreement_1.instanceOfEndUserLicenseAgreement)(value)) {
        return (0, EndUserLicenseAgreement_1.EndUserLicenseAgreementToJSON)(value);
    }
    if ((0, GameCenterDetail_1.instanceOfGameCenterDetail)(value)) {
        return (0, GameCenterDetail_1.GameCenterDetailToJSON)(value);
    }
    if ((0, GameCenterEnabledVersion_1.instanceOfGameCenterEnabledVersion)(value)) {
        return (0, GameCenterEnabledVersion_1.GameCenterEnabledVersionToJSON)(value);
    }
    if ((0, InAppPurchase_1.instanceOfInAppPurchase)(value)) {
        return (0, InAppPurchase_1.InAppPurchaseToJSON)(value);
    }
    if ((0, InAppPurchaseV2_1.instanceOfInAppPurchaseV2)(value)) {
        return (0, InAppPurchaseV2_1.InAppPurchaseV2ToJSON)(value);
    }
    if ((0, PrereleaseVersion_1.instanceOfPrereleaseVersion)(value)) {
        return (0, PrereleaseVersion_1.PrereleaseVersionToJSON)(value);
    }
    if ((0, PromotedPurchase_1.instanceOfPromotedPurchase)(value)) {
        return (0, PromotedPurchase_1.PromotedPurchaseToJSON)(value);
    }
    if ((0, ReviewSubmission_1.instanceOfReviewSubmission)(value)) {
        return (0, ReviewSubmission_1.ReviewSubmissionToJSON)(value);
    }
    if ((0, SubscriptionGracePeriod_1.instanceOfSubscriptionGracePeriod)(value)) {
        return (0, SubscriptionGracePeriod_1.SubscriptionGracePeriodToJSON)(value);
    }
    if ((0, SubscriptionGroup_1.instanceOfSubscriptionGroup)(value)) {
        return (0, SubscriptionGroup_1.SubscriptionGroupToJSON)(value);
    }
    return {};
}
