"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBetaTesterAttributes = instanceOfBetaTesterAttributes;
exports.BetaTesterAttributesFromJSON = BetaTesterAttributesFromJSON;
exports.BetaTesterAttributesFromJSONTyped = BetaTesterAttributesFromJSONTyped;
exports.BetaTesterAttributesToJSON = BetaTesterAttributesToJSON;
const runtime_1 = require("../runtime");
const BetaInviteType_1 = require("./BetaInviteType");
const BetaTesterState_1 = require("./BetaTesterState");
/**
 * Check if a given object implements the BetaTesterAttributes interface.
 */
function instanceOfBetaTesterAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function BetaTesterAttributesFromJSON(json) {
    return BetaTesterAttributesFromJSONTyped(json, false);
}
function BetaTesterAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        firstName: !(0, runtime_1.exists)(json, "firstName") ? undefined : json["firstName"],
        lastName: !(0, runtime_1.exists)(json, "lastName") ? undefined : json["lastName"],
        email: !(0, runtime_1.exists)(json, "email") ? undefined : json["email"],
        inviteType: !(0, runtime_1.exists)(json, "inviteType") ? undefined : (0, BetaInviteType_1.BetaInviteTypeFromJSON)(json["inviteType"]),
        state: !(0, runtime_1.exists)(json, "state") ? undefined : (0, BetaTesterState_1.BetaTesterStateFromJSON)(json["state"])
    };
}
function BetaTesterAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        firstName: value.firstName,
        lastName: value.lastName,
        email: value.email,
        inviteType: (0, BetaInviteType_1.BetaInviteTypeToJSON)(value.inviteType),
        state: (0, BetaTesterState_1.BetaTesterStateToJSON)(value.state)
    };
}
