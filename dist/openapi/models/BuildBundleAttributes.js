"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildBundleAttributesBundleTypeEnum = void 0;
exports.instanceOfBuildBundleAttributes = instanceOfBuildBundleAttributes;
exports.BuildBundleAttributesFromJSON = BuildBundleAttributesFromJSON;
exports.BuildBundleAttributesFromJSONTyped = BuildBundleAttributesFromJSONTyped;
exports.BuildBundleAttributesToJSON = BuildBundleAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.BuildBundleAttributesBundleTypeEnum = {
    App: "APP",
    AppClip: "APP_CLIP"
};
/**
 * Check if a given object implements the BuildBundleAttributes interface.
 */
function instanceOfBuildBundleAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function BuildBundleAttributesFromJSON(json) {
    return BuildBundleAttributesFromJSONTyped(json, false);
}
function BuildBundleAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        bundleId: !(0, runtime_1.exists)(json, "bundleId") ? undefined : json["bundleId"],
        bundleType: !(0, runtime_1.exists)(json, "bundleType") ? undefined : json["bundleType"],
        sdkBuild: !(0, runtime_1.exists)(json, "sdkBuild") ? undefined : json["sdkBuild"],
        platformBuild: !(0, runtime_1.exists)(json, "platformBuild") ? undefined : json["platformBuild"],
        fileName: !(0, runtime_1.exists)(json, "fileName") ? undefined : json["fileName"],
        hasSirikit: !(0, runtime_1.exists)(json, "hasSirikit") ? undefined : json["hasSirikit"],
        hasOnDemandResources: !(0, runtime_1.exists)(json, "hasOnDemandResources") ? undefined : json["hasOnDemandResources"],
        hasPrerenderedIcon: !(0, runtime_1.exists)(json, "hasPrerenderedIcon") ? undefined : json["hasPrerenderedIcon"],
        usesLocationServices: !(0, runtime_1.exists)(json, "usesLocationServices") ? undefined : json["usesLocationServices"],
        isIosBuildMacAppStoreCompatible: !(0, runtime_1.exists)(json, "isIosBuildMacAppStoreCompatible") ? undefined : json["isIosBuildMacAppStoreCompatible"],
        includesSymbols: !(0, runtime_1.exists)(json, "includesSymbols") ? undefined : json["includesSymbols"],
        dSYMUrl: !(0, runtime_1.exists)(json, "dSYMUrl") ? undefined : json["dSYMUrl"],
        supportedArchitectures: !(0, runtime_1.exists)(json, "supportedArchitectures") ? undefined : json["supportedArchitectures"],
        requiredCapabilities: !(0, runtime_1.exists)(json, "requiredCapabilities") ? undefined : json["requiredCapabilities"],
        deviceProtocols: !(0, runtime_1.exists)(json, "deviceProtocols") ? undefined : json["deviceProtocols"],
        locales: !(0, runtime_1.exists)(json, "locales") ? undefined : json["locales"],
        entitlements: !(0, runtime_1.exists)(json, "entitlements") ? undefined : json["entitlements"]
    };
}
function BuildBundleAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        bundleId: value.bundleId,
        bundleType: value.bundleType,
        sdkBuild: value.sdkBuild,
        platformBuild: value.platformBuild,
        fileName: value.fileName,
        hasSirikit: value.hasSirikit,
        hasOnDemandResources: value.hasOnDemandResources,
        hasPrerenderedIcon: value.hasPrerenderedIcon,
        usesLocationServices: value.usesLocationServices,
        isIosBuildMacAppStoreCompatible: value.isIosBuildMacAppStoreCompatible,
        includesSymbols: value.includesSymbols,
        dSYMUrl: value.dSYMUrl,
        supportedArchitectures: value.supportedArchitectures,
        requiredCapabilities: value.requiredCapabilities,
        deviceProtocols: value.deviceProtocols,
        locales: value.locales,
        entitlements: value.entitlements
    };
}
