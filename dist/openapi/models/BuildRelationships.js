"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBuildRelationships = instanceOfBuildRelationships;
exports.BuildRelationshipsFromJSON = BuildRelationshipsFromJSON;
exports.BuildRelationshipsFromJSONTyped = BuildRelationshipsFromJSONTyped;
exports.BuildRelationshipsToJSON = BuildRelationshipsToJSON;
const runtime_1 = require("../runtime");
const AppAvailabilityRelationshipsApp_1 = require("./AppAvailabilityRelationshipsApp");
const AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion_1 = require("./AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion");
const AppRelationshipsBetaGroups_1 = require("./AppRelationshipsBetaGroups");
const BetaGroupRelationshipsBetaTesters_1 = require("./BetaGroupRelationshipsBetaTesters");
const BuildRelationshipsAppEncryptionDeclaration_1 = require("./BuildRelationshipsAppEncryptionDeclaration");
const BuildRelationshipsBetaAppReviewSubmission_1 = require("./BuildRelationshipsBetaAppReviewSubmission");
const BuildRelationshipsBetaBuildLocalizations_1 = require("./BuildRelationshipsBetaBuildLocalizations");
const BuildRelationshipsBuildBetaDetail_1 = require("./BuildRelationshipsBuildBetaDetail");
const BuildRelationshipsBuildBundles_1 = require("./BuildRelationshipsBuildBundles");
const BuildRelationshipsIcons_1 = require("./BuildRelationshipsIcons");
const BuildRelationshipsPreReleaseVersion_1 = require("./BuildRelationshipsPreReleaseVersion");
/**
 * Check if a given object implements the BuildRelationships interface.
 */
function instanceOfBuildRelationships(value) {
    let isInstance = true;
    return isInstance;
}
function BuildRelationshipsFromJSON(json) {
    return BuildRelationshipsFromJSONTyped(json, false);
}
function BuildRelationshipsFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        preReleaseVersion: !(0, runtime_1.exists)(json, "preReleaseVersion") ? undefined : (0, BuildRelationshipsPreReleaseVersion_1.BuildRelationshipsPreReleaseVersionFromJSON)(json["preReleaseVersion"]),
        individualTesters: !(0, runtime_1.exists)(json, "individualTesters") ? undefined : (0, BetaGroupRelationshipsBetaTesters_1.BetaGroupRelationshipsBetaTestersFromJSON)(json["individualTesters"]),
        betaGroups: !(0, runtime_1.exists)(json, "betaGroups") ? undefined : (0, AppRelationshipsBetaGroups_1.AppRelationshipsBetaGroupsFromJSON)(json["betaGroups"]),
        betaBuildLocalizations: !(0, runtime_1.exists)(json, "betaBuildLocalizations") ? undefined : (0, BuildRelationshipsBetaBuildLocalizations_1.BuildRelationshipsBetaBuildLocalizationsFromJSON)(json["betaBuildLocalizations"]),
        appEncryptionDeclaration: !(0, runtime_1.exists)(json, "appEncryptionDeclaration") ? undefined : (0, BuildRelationshipsAppEncryptionDeclaration_1.BuildRelationshipsAppEncryptionDeclarationFromJSON)(json["appEncryptionDeclaration"]),
        betaAppReviewSubmission: !(0, runtime_1.exists)(json, "betaAppReviewSubmission") ? undefined : (0, BuildRelationshipsBetaAppReviewSubmission_1.BuildRelationshipsBetaAppReviewSubmissionFromJSON)(json["betaAppReviewSubmission"]),
        app: !(0, runtime_1.exists)(json, "app") ? undefined : (0, AppAvailabilityRelationshipsApp_1.AppAvailabilityRelationshipsAppFromJSON)(json["app"]),
        buildBetaDetail: !(0, runtime_1.exists)(json, "buildBetaDetail") ? undefined : (0, BuildRelationshipsBuildBetaDetail_1.BuildRelationshipsBuildBetaDetailFromJSON)(json["buildBetaDetail"]),
        appStoreVersion: !(0, runtime_1.exists)(json, "appStoreVersion") ? undefined : (0, AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion_1.AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionFromJSON)(json["appStoreVersion"]),
        icons: !(0, runtime_1.exists)(json, "icons") ? undefined : (0, BuildRelationshipsIcons_1.BuildRelationshipsIconsFromJSON)(json["icons"]),
        buildBundles: !(0, runtime_1.exists)(json, "buildBundles") ? undefined : (0, BuildRelationshipsBuildBundles_1.BuildRelationshipsBuildBundlesFromJSON)(json["buildBundles"])
    };
}
function BuildRelationshipsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        preReleaseVersion: (0, BuildRelationshipsPreReleaseVersion_1.BuildRelationshipsPreReleaseVersionToJSON)(value.preReleaseVersion),
        individualTesters: (0, BetaGroupRelationshipsBetaTesters_1.BetaGroupRelationshipsBetaTestersToJSON)(value.individualTesters),
        betaGroups: (0, AppRelationshipsBetaGroups_1.AppRelationshipsBetaGroupsToJSON)(value.betaGroups),
        betaBuildLocalizations: (0, BuildRelationshipsBetaBuildLocalizations_1.BuildRelationshipsBetaBuildLocalizationsToJSON)(value.betaBuildLocalizations),
        appEncryptionDeclaration: (0, BuildRelationshipsAppEncryptionDeclaration_1.BuildRelationshipsAppEncryptionDeclarationToJSON)(value.appEncryptionDeclaration),
        betaAppReviewSubmission: (0, BuildRelationshipsBetaAppReviewSubmission_1.BuildRelationshipsBetaAppReviewSubmissionToJSON)(value.betaAppReviewSubmission),
        app: (0, AppAvailabilityRelationshipsApp_1.AppAvailabilityRelationshipsAppToJSON)(value.app),
        buildBetaDetail: (0, BuildRelationshipsBuildBetaDetail_1.BuildRelationshipsBuildBetaDetailToJSON)(value.buildBetaDetail),
        appStoreVersion: (0, AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersion_1.AppClipDefaultExperienceRelationshipsReleaseWithAppStoreVersionToJSON)(value.appStoreVersion),
        icons: (0, BuildRelationshipsIcons_1.BuildRelationshipsIconsToJSON)(value.icons),
        buildBundles: (0, BuildRelationshipsBuildBundles_1.BuildRelationshipsBuildBundlesToJSON)(value.buildBundles)
    };
}
