"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapabilityOptionKeyEnum = void 0;
exports.instanceOfCapabilityOption = instanceOfCapabilityOption;
exports.CapabilityOptionFromJSON = CapabilityOptionFromJSON;
exports.CapabilityOptionFromJSONTyped = CapabilityOptionFromJSONTyped;
exports.CapabilityOptionToJSON = CapabilityOptionToJSON;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.CapabilityOptionKeyEnum = {
    Xcode5: "XCODE_5",
    Xcode6: "XCODE_6",
    CompleteProtection: "COMPLETE_PROTECTION",
    ProtectedUnlessOpen: "PROTECTED_UNLESS_OPEN",
    ProtectedUntilFirstUserAuth: "PROTECTED_UNTIL_FIRST_USER_AUTH",
    PrimaryAppConsent: "PRIMARY_APP_CONSENT"
};
/**
 * Check if a given object implements the CapabilityOption interface.
 */
function instanceOfCapabilityOption(value) {
    let isInstance = true;
    return isInstance;
}
function CapabilityOptionFromJSON(json) {
    return CapabilityOptionFromJSONTyped(json, false);
}
function CapabilityOptionFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        key: !(0, runtime_1.exists)(json, "key") ? undefined : json["key"],
        name: !(0, runtime_1.exists)(json, "name") ? undefined : json["name"],
        description: !(0, runtime_1.exists)(json, "description") ? undefined : json["description"],
        enabledByDefault: !(0, runtime_1.exists)(json, "enabledByDefault") ? undefined : json["enabledByDefault"],
        enabled: !(0, runtime_1.exists)(json, "enabled") ? undefined : json["enabled"],
        supportsWildcard: !(0, runtime_1.exists)(json, "supportsWildcard") ? undefined : json["supportsWildcard"]
    };
}
function CapabilityOptionToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        key: value.key,
        name: value.name,
        description: value.description,
        enabledByDefault: value.enabledByDefault,
        enabled: value.enabled,
        supportsWildcard: value.supportsWildcard
    };
}
