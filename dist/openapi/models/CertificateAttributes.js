"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCertificateAttributes = instanceOfCertificateAttributes;
exports.CertificateAttributesFromJSON = CertificateAttributesFromJSON;
exports.CertificateAttributesFromJSONTyped = CertificateAttributesFromJSONTyped;
exports.CertificateAttributesToJSON = CertificateAttributesToJSON;
const runtime_1 = require("../runtime");
const BundleIdPlatform_1 = require("./BundleIdPlatform");
const CertificateType_1 = require("./CertificateType");
/**
 * Check if a given object implements the CertificateAttributes interface.
 */
function instanceOfCertificateAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function CertificateAttributesFromJSON(json) {
    return CertificateAttributesFromJSONTyped(json, false);
}
function CertificateAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        name: !(0, runtime_1.exists)(json, "name") ? undefined : json["name"],
        certificateType: !(0, runtime_1.exists)(json, "certificateType") ? undefined : (0, CertificateType_1.CertificateTypeFromJSON)(json["certificateType"]),
        displayName: !(0, runtime_1.exists)(json, "displayName") ? undefined : json["displayName"],
        serialNumber: !(0, runtime_1.exists)(json, "serialNumber") ? undefined : json["serialNumber"],
        platform: !(0, runtime_1.exists)(json, "platform") ? undefined : (0, BundleIdPlatform_1.BundleIdPlatformFromJSON)(json["platform"]),
        expirationDate: !(0, runtime_1.exists)(json, "expirationDate") ? undefined : new Date(json["expirationDate"]),
        certificateContent: !(0, runtime_1.exists)(json, "certificateContent") ? undefined : json["certificateContent"]
    };
}
function CertificateAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        name: value.name,
        certificateType: (0, CertificateType_1.CertificateTypeToJSON)(value.certificateType),
        displayName: value.displayName,
        serialNumber: value.serialNumber,
        platform: (0, BundleIdPlatform_1.BundleIdPlatformToJSON)(value.platform),
        expirationDate: value.expirationDate === undefined ? undefined : value.expirationDate.toISOString(),
        certificateContent: value.certificateContent
    };
}
