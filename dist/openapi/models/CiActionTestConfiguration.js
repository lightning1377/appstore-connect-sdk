"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiActionTestConfigurationKindEnum = void 0;
exports.instanceOfCiActionTestConfiguration = instanceOfCiActionTestConfiguration;
exports.CiActionTestConfigurationFromJSON = CiActionTestConfigurationFromJSON;
exports.CiActionTestConfigurationFromJSONTyped = CiActionTestConfigurationFromJSONTyped;
exports.CiActionTestConfigurationToJSON = CiActionTestConfigurationToJSON;
const runtime_1 = require("../runtime");
const CiTestDestination_1 = require("./CiTestDestination");
/**
 * @export
 */
exports.CiActionTestConfigurationKindEnum = {
    UseSchemeSettings: "USE_SCHEME_SETTINGS",
    SpecificTestPlans: "SPECIFIC_TEST_PLANS"
};
/**
 * Check if a given object implements the CiActionTestConfiguration interface.
 */
function instanceOfCiActionTestConfiguration(value) {
    let isInstance = true;
    return isInstance;
}
function CiActionTestConfigurationFromJSON(json) {
    return CiActionTestConfigurationFromJSONTyped(json, false);
}
function CiActionTestConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        kind: !(0, runtime_1.exists)(json, "kind") ? undefined : json["kind"],
        testPlanName: !(0, runtime_1.exists)(json, "testPlanName") ? undefined : json["testPlanName"],
        testDestinations: !(0, runtime_1.exists)(json, "testDestinations") ? undefined : json["testDestinations"].map(CiTestDestination_1.CiTestDestinationFromJSON)
    };
}
function CiActionTestConfigurationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        kind: value.kind,
        testPlanName: value.testPlanName,
        testDestinations: value.testDestinations === undefined ? undefined : value.testDestinations.map(CiTestDestination_1.CiTestDestinationToJSON)
    };
}
