"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiArtifactAttributesFileTypeEnum = void 0;
exports.instanceOfCiArtifactAttributes = instanceOfCiArtifactAttributes;
exports.CiArtifactAttributesFromJSON = CiArtifactAttributesFromJSON;
exports.CiArtifactAttributesFromJSONTyped = CiArtifactAttributesFromJSONTyped;
exports.CiArtifactAttributesToJSON = CiArtifactAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.CiArtifactAttributesFileTypeEnum = {
    Archive: "ARCHIVE",
    ArchiveExport: "ARCHIVE_EXPORT",
    LogBundle: "LOG_BUNDLE",
    ResultBundle: "RESULT_BUNDLE",
    TestProducts: "TEST_PRODUCTS",
    XcodebuildProducts: "XCODEBUILD_PRODUCTS",
    StapledNotarizedArchive: "STAPLED_NOTARIZED_ARCHIVE"
};
/**
 * Check if a given object implements the CiArtifactAttributes interface.
 */
function instanceOfCiArtifactAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function CiArtifactAttributesFromJSON(json) {
    return CiArtifactAttributesFromJSONTyped(json, false);
}
function CiArtifactAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        fileType: !(0, runtime_1.exists)(json, "fileType") ? undefined : json["fileType"],
        fileName: !(0, runtime_1.exists)(json, "fileName") ? undefined : json["fileName"],
        fileSize: !(0, runtime_1.exists)(json, "fileSize") ? undefined : json["fileSize"],
        downloadUrl: !(0, runtime_1.exists)(json, "downloadUrl") ? undefined : json["downloadUrl"]
    };
}
function CiArtifactAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        fileType: value.fileType,
        fileName: value.fileName,
        fileSize: value.fileSize,
        downloadUrl: value.downloadUrl
    };
}
