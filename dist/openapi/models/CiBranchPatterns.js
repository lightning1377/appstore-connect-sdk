"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCiBranchPatterns = instanceOfCiBranchPatterns;
exports.CiBranchPatternsFromJSON = CiBranchPatternsFromJSON;
exports.CiBranchPatternsFromJSONTyped = CiBranchPatternsFromJSONTyped;
exports.CiBranchPatternsToJSON = CiBranchPatternsToJSON;
const runtime_1 = require("../runtime");
const CiBranchPatternsPatternsInner_1 = require("./CiBranchPatternsPatternsInner");
/**
 * Check if a given object implements the CiBranchPatterns interface.
 */
function instanceOfCiBranchPatterns(value) {
    let isInstance = true;
    return isInstance;
}
function CiBranchPatternsFromJSON(json) {
    return CiBranchPatternsFromJSONTyped(json, false);
}
function CiBranchPatternsFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        isAllMatch: !(0, runtime_1.exists)(json, "isAllMatch") ? undefined : json["isAllMatch"],
        patterns: !(0, runtime_1.exists)(json, "patterns") ? undefined : json["patterns"].map(CiBranchPatternsPatternsInner_1.CiBranchPatternsPatternsInnerFromJSON)
    };
}
function CiBranchPatternsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        isAllMatch: value.isAllMatch,
        patterns: value.patterns === undefined ? undefined : value.patterns.map(CiBranchPatternsPatternsInner_1.CiBranchPatternsPatternsInnerToJSON)
    };
}
