"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCiBuildActionAttributes = instanceOfCiBuildActionAttributes;
exports.CiBuildActionAttributesFromJSON = CiBuildActionAttributesFromJSON;
exports.CiBuildActionAttributesFromJSONTyped = CiBuildActionAttributesFromJSONTyped;
exports.CiBuildActionAttributesToJSON = CiBuildActionAttributesToJSON;
const runtime_1 = require("../runtime");
const CiActionType_1 = require("./CiActionType");
const CiCompletionStatus_1 = require("./CiCompletionStatus");
const CiExecutionProgress_1 = require("./CiExecutionProgress");
const CiIssueCounts_1 = require("./CiIssueCounts");
/**
 * Check if a given object implements the CiBuildActionAttributes interface.
 */
function instanceOfCiBuildActionAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function CiBuildActionAttributesFromJSON(json) {
    return CiBuildActionAttributesFromJSONTyped(json, false);
}
function CiBuildActionAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        name: !(0, runtime_1.exists)(json, "name") ? undefined : json["name"],
        actionType: !(0, runtime_1.exists)(json, "actionType") ? undefined : (0, CiActionType_1.CiActionTypeFromJSON)(json["actionType"]),
        startedDate: !(0, runtime_1.exists)(json, "startedDate") ? undefined : new Date(json["startedDate"]),
        finishedDate: !(0, runtime_1.exists)(json, "finishedDate") ? undefined : new Date(json["finishedDate"]),
        issueCounts: !(0, runtime_1.exists)(json, "issueCounts") ? undefined : (0, CiIssueCounts_1.CiIssueCountsFromJSON)(json["issueCounts"]),
        executionProgress: !(0, runtime_1.exists)(json, "executionProgress") ? undefined : (0, CiExecutionProgress_1.CiExecutionProgressFromJSON)(json["executionProgress"]),
        completionStatus: !(0, runtime_1.exists)(json, "completionStatus") ? undefined : (0, CiCompletionStatus_1.CiCompletionStatusFromJSON)(json["completionStatus"]),
        isRequiredToPass: !(0, runtime_1.exists)(json, "isRequiredToPass") ? undefined : json["isRequiredToPass"]
    };
}
function CiBuildActionAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        name: value.name,
        actionType: (0, CiActionType_1.CiActionTypeToJSON)(value.actionType),
        startedDate: value.startedDate === undefined ? undefined : value.startedDate.toISOString(),
        finishedDate: value.finishedDate === undefined ? undefined : value.finishedDate.toISOString(),
        issueCounts: (0, CiIssueCounts_1.CiIssueCountsToJSON)(value.issueCounts),
        executionProgress: (0, CiExecutionProgress_1.CiExecutionProgressToJSON)(value.executionProgress),
        completionStatus: (0, CiCompletionStatus_1.CiCompletionStatusToJSON)(value.completionStatus),
        isRequiredToPass: value.isRequiredToPass
    };
}
