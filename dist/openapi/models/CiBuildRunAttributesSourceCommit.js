"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCiBuildRunAttributesSourceCommit = instanceOfCiBuildRunAttributesSourceCommit;
exports.CiBuildRunAttributesSourceCommitFromJSON = CiBuildRunAttributesSourceCommitFromJSON;
exports.CiBuildRunAttributesSourceCommitFromJSONTyped = CiBuildRunAttributesSourceCommitFromJSONTyped;
exports.CiBuildRunAttributesSourceCommitToJSON = CiBuildRunAttributesSourceCommitToJSON;
const runtime_1 = require("../runtime");
const CiGitUser_1 = require("./CiGitUser");
/**
 * Check if a given object implements the CiBuildRunAttributesSourceCommit interface.
 */
function instanceOfCiBuildRunAttributesSourceCommit(value) {
    let isInstance = true;
    return isInstance;
}
function CiBuildRunAttributesSourceCommitFromJSON(json) {
    return CiBuildRunAttributesSourceCommitFromJSONTyped(json, false);
}
function CiBuildRunAttributesSourceCommitFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        commitSha: !(0, runtime_1.exists)(json, "commitSha") ? undefined : json["commitSha"],
        message: !(0, runtime_1.exists)(json, "message") ? undefined : json["message"],
        author: !(0, runtime_1.exists)(json, "author") ? undefined : (0, CiGitUser_1.CiGitUserFromJSON)(json["author"]),
        committer: !(0, runtime_1.exists)(json, "committer") ? undefined : (0, CiGitUser_1.CiGitUserFromJSON)(json["committer"]),
        webUrl: !(0, runtime_1.exists)(json, "webUrl") ? undefined : json["webUrl"]
    };
}
function CiBuildRunAttributesSourceCommitToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        commitSha: value.commitSha,
        message: value.message,
        author: (0, CiGitUser_1.CiGitUserToJSON)(value.author),
        committer: (0, CiGitUser_1.CiGitUserToJSON)(value.committer),
        webUrl: value.webUrl
    };
}
