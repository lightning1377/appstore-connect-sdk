"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiFilesAndFoldersRuleModeEnum = void 0;
exports.instanceOfCiFilesAndFoldersRule = instanceOfCiFilesAndFoldersRule;
exports.CiFilesAndFoldersRuleFromJSON = CiFilesAndFoldersRuleFromJSON;
exports.CiFilesAndFoldersRuleFromJSONTyped = CiFilesAndFoldersRuleFromJSONTyped;
exports.CiFilesAndFoldersRuleToJSON = CiFilesAndFoldersRuleToJSON;
const runtime_1 = require("../runtime");
const CiStartConditionFileMatcher_1 = require("./CiStartConditionFileMatcher");
/**
 * @export
 */
exports.CiFilesAndFoldersRuleModeEnum = {
    StartIfAnyFileMatches: "START_IF_ANY_FILE_MATCHES",
    DoNotStartIfAllFilesMatch: "DO_NOT_START_IF_ALL_FILES_MATCH"
};
/**
 * Check if a given object implements the CiFilesAndFoldersRule interface.
 */
function instanceOfCiFilesAndFoldersRule(value) {
    let isInstance = true;
    return isInstance;
}
function CiFilesAndFoldersRuleFromJSON(json) {
    return CiFilesAndFoldersRuleFromJSONTyped(json, false);
}
function CiFilesAndFoldersRuleFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        mode: !(0, runtime_1.exists)(json, "mode") ? undefined : json["mode"],
        matchers: !(0, runtime_1.exists)(json, "matchers") ? undefined : json["matchers"].map(CiStartConditionFileMatcher_1.CiStartConditionFileMatcherFromJSON)
    };
}
function CiFilesAndFoldersRuleToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        mode: value.mode,
        matchers: value.matchers === undefined ? undefined : value.matchers.map(CiStartConditionFileMatcher_1.CiStartConditionFileMatcherToJSON)
    };
}
