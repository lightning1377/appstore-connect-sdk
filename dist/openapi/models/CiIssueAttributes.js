"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CiIssueAttributesIssueTypeEnum = void 0;
exports.instanceOfCiIssueAttributes = instanceOfCiIssueAttributes;
exports.CiIssueAttributesFromJSON = CiIssueAttributesFromJSON;
exports.CiIssueAttributesFromJSONTyped = CiIssueAttributesFromJSONTyped;
exports.CiIssueAttributesToJSON = CiIssueAttributesToJSON;
const runtime_1 = require("../runtime");
const FileLocation_1 = require("./FileLocation");
/**
 * @export
 */
exports.CiIssueAttributesIssueTypeEnum = {
    AnalyzerWarning: "ANALYZER_WARNING",
    Error: "ERROR",
    TestFailure: "TEST_FAILURE",
    Warning: "WARNING"
};
/**
 * Check if a given object implements the CiIssueAttributes interface.
 */
function instanceOfCiIssueAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function CiIssueAttributesFromJSON(json) {
    return CiIssueAttributesFromJSONTyped(json, false);
}
function CiIssueAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        issueType: !(0, runtime_1.exists)(json, "issueType") ? undefined : json["issueType"],
        message: !(0, runtime_1.exists)(json, "message") ? undefined : json["message"],
        fileSource: !(0, runtime_1.exists)(json, "fileSource") ? undefined : (0, FileLocation_1.FileLocationFromJSON)(json["fileSource"]),
        category: !(0, runtime_1.exists)(json, "category") ? undefined : json["category"]
    };
}
function CiIssueAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        issueType: value.issueType,
        message: value.message,
        fileSource: (0, FileLocation_1.FileLocationToJSON)(value.fileSource),
        category: value.category
    };
}
