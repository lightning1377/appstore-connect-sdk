"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceAttributesStatusEnum = exports.DeviceAttributesDeviceClassEnum = void 0;
exports.instanceOfDeviceAttributes = instanceOfDeviceAttributes;
exports.DeviceAttributesFromJSON = DeviceAttributesFromJSON;
exports.DeviceAttributesFromJSONTyped = DeviceAttributesFromJSONTyped;
exports.DeviceAttributesToJSON = DeviceAttributesToJSON;
const runtime_1 = require("../runtime");
const BundleIdPlatform_1 = require("./BundleIdPlatform");
/**
 * @export
 */
exports.DeviceAttributesDeviceClassEnum = {
    AppleWatch: "APPLE_WATCH",
    Ipad: "IPAD",
    Iphone: "IPHONE",
    Ipod: "IPOD",
    AppleTv: "APPLE_TV",
    Mac: "MAC"
};
/**
 * @export
 */
exports.DeviceAttributesStatusEnum = {
    Enabled: "ENABLED",
    Disabled: "DISABLED"
};
/**
 * Check if a given object implements the DeviceAttributes interface.
 */
function instanceOfDeviceAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function DeviceAttributesFromJSON(json) {
    return DeviceAttributesFromJSONTyped(json, false);
}
function DeviceAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        name: !(0, runtime_1.exists)(json, "name") ? undefined : json["name"],
        platform: !(0, runtime_1.exists)(json, "platform") ? undefined : (0, BundleIdPlatform_1.BundleIdPlatformFromJSON)(json["platform"]),
        udid: !(0, runtime_1.exists)(json, "udid") ? undefined : json["udid"],
        deviceClass: !(0, runtime_1.exists)(json, "deviceClass") ? undefined : json["deviceClass"],
        status: !(0, runtime_1.exists)(json, "status") ? undefined : json["status"],
        model: !(0, runtime_1.exists)(json, "model") ? undefined : json["model"],
        addedDate: !(0, runtime_1.exists)(json, "addedDate") ? undefined : new Date(json["addedDate"])
    };
}
function DeviceAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        name: value.name,
        platform: (0, BundleIdPlatform_1.BundleIdPlatformToJSON)(value.platform),
        udid: value.udid,
        deviceClass: value.deviceClass,
        status: value.status,
        model: value.model,
        addedDate: value.addedDate === undefined ? undefined : value.addedDate.toISOString()
    };
}
