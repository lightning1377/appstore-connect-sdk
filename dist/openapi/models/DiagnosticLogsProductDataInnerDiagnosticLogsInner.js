"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfDiagnosticLogsProductDataInnerDiagnosticLogsInner = instanceOfDiagnosticLogsProductDataInnerDiagnosticLogsInner;
exports.DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSON = DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSON;
exports.DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSONTyped = DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSONTyped;
exports.DiagnosticLogsProductDataInnerDiagnosticLogsInnerToJSON = DiagnosticLogsProductDataInnerDiagnosticLogsInnerToJSON;
const runtime_1 = require("../runtime");
const DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInner_1 = require("./DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInner");
const DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData_1 = require("./DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData");
/**
 * Check if a given object implements the DiagnosticLogsProductDataInnerDiagnosticLogsInner interface.
 */
function instanceOfDiagnosticLogsProductDataInnerDiagnosticLogsInner(value) {
    let isInstance = true;
    return isInstance;
}
function DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSON(json) {
    return DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSONTyped(json, false);
}
function DiagnosticLogsProductDataInnerDiagnosticLogsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        callStackTree: !(0, runtime_1.exists)(json, "callStackTree") ? undefined : json["callStackTree"].map(DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInner_1.DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInnerFromJSON),
        diagnosticMetaData: !(0, runtime_1.exists)(json, "diagnosticMetaData") ? undefined : (0, DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData_1.DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaDataFromJSON)(json["diagnosticMetaData"])
    };
}
function DiagnosticLogsProductDataInnerDiagnosticLogsInnerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        callStackTree: value.callStackTree === undefined ? undefined : value.callStackTree.map(DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInner_1.DiagnosticLogsProductDataInnerDiagnosticLogsInnerCallStackTreeInnerToJSON),
        diagnosticMetaData: (0, DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaData_1.DiagnosticLogsProductDataInnerDiagnosticLogsInnerDiagnosticMetaDataToJSON)(value.diagnosticMetaData)
    };
}
