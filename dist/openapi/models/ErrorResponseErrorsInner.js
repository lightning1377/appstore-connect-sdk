"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfErrorResponseErrorsInner = instanceOfErrorResponseErrorsInner;
exports.ErrorResponseErrorsInnerFromJSON = ErrorResponseErrorsInnerFromJSON;
exports.ErrorResponseErrorsInnerFromJSONTyped = ErrorResponseErrorsInnerFromJSONTyped;
exports.ErrorResponseErrorsInnerToJSON = ErrorResponseErrorsInnerToJSON;
const runtime_1 = require("../runtime");
const ErrorLinks_1 = require("./ErrorLinks");
const ErrorResponseErrorsInnerSource_1 = require("./ErrorResponseErrorsInnerSource");
/**
 * Check if a given object implements the ErrorResponseErrorsInner interface.
 */
function instanceOfErrorResponseErrorsInner(value) {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "detail" in value;
    return isInstance;
}
function ErrorResponseErrorsInnerFromJSON(json) {
    return ErrorResponseErrorsInnerFromJSONTyped(json, false);
}
function ErrorResponseErrorsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: !(0, runtime_1.exists)(json, "id") ? undefined : json["id"],
        status: json["status"],
        code: json["code"],
        title: json["title"],
        detail: json["detail"],
        source: !(0, runtime_1.exists)(json, "source") ? undefined : (0, ErrorResponseErrorsInnerSource_1.ErrorResponseErrorsInnerSourceFromJSON)(json["source"]),
        links: !(0, runtime_1.exists)(json, "links") ? undefined : (0, ErrorLinks_1.ErrorLinksFromJSON)(json["links"]),
        meta: !(0, runtime_1.exists)(json, "meta") ? undefined : json["meta"]
    };
}
function ErrorResponseErrorsInnerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        status: value.status,
        code: value.code,
        title: value.title,
        detail: value.detail,
        source: (0, ErrorResponseErrorsInnerSource_1.ErrorResponseErrorsInnerSourceToJSON)(value.source),
        links: (0, ErrorLinks_1.ErrorLinksToJSON)(value.links),
        meta: value.meta
    };
}
