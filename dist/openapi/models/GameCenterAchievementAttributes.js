"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGameCenterAchievementAttributes = instanceOfGameCenterAchievementAttributes;
exports.GameCenterAchievementAttributesFromJSON = GameCenterAchievementAttributesFromJSON;
exports.GameCenterAchievementAttributesFromJSONTyped = GameCenterAchievementAttributesFromJSONTyped;
exports.GameCenterAchievementAttributesToJSON = GameCenterAchievementAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the GameCenterAchievementAttributes interface.
 */
function instanceOfGameCenterAchievementAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function GameCenterAchievementAttributesFromJSON(json) {
    return GameCenterAchievementAttributesFromJSONTyped(json, false);
}
function GameCenterAchievementAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        referenceName: !(0, runtime_1.exists)(json, "referenceName") ? undefined : json["referenceName"],
        vendorIdentifier: !(0, runtime_1.exists)(json, "vendorIdentifier") ? undefined : json["vendorIdentifier"],
        points: !(0, runtime_1.exists)(json, "points") ? undefined : json["points"],
        showBeforeEarned: !(0, runtime_1.exists)(json, "showBeforeEarned") ? undefined : json["showBeforeEarned"],
        repeatable: !(0, runtime_1.exists)(json, "repeatable") ? undefined : json["repeatable"],
        archived: !(0, runtime_1.exists)(json, "archived") ? undefined : json["archived"]
    };
}
function GameCenterAchievementAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        referenceName: value.referenceName,
        vendorIdentifier: value.vendorIdentifier,
        points: value.points,
        showBeforeEarned: value.showBeforeEarned,
        repeatable: value.repeatable,
        archived: value.archived
    };
}
