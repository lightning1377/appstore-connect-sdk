"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameCenterLeaderboardTypeEnum = void 0;
exports.instanceOfGameCenterLeaderboard = instanceOfGameCenterLeaderboard;
exports.GameCenterLeaderboardFromJSON = GameCenterLeaderboardFromJSON;
exports.GameCenterLeaderboardFromJSONTyped = GameCenterLeaderboardFromJSONTyped;
exports.GameCenterLeaderboardToJSON = GameCenterLeaderboardToJSON;
const runtime_1 = require("../runtime");
const GameCenterLeaderboardAttributes_1 = require("./GameCenterLeaderboardAttributes");
const GameCenterLeaderboardRelationships_1 = require("./GameCenterLeaderboardRelationships");
const ResourceLinks_1 = require("./ResourceLinks");
/**
 * @export
 */
exports.GameCenterLeaderboardTypeEnum = {
    GameCenterLeaderboards: "gameCenterLeaderboards"
};
/**
 * Check if a given object implements the GameCenterLeaderboard interface.
 */
function instanceOfGameCenterLeaderboard(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    return isInstance;
}
function GameCenterLeaderboardFromJSON(json) {
    return GameCenterLeaderboardFromJSONTyped(json, false);
}
function GameCenterLeaderboardFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        type: json["type"],
        id: json["id"],
        attributes: !(0, runtime_1.exists)(json, "attributes") ? undefined : (0, GameCenterLeaderboardAttributes_1.GameCenterLeaderboardAttributesFromJSON)(json["attributes"]),
        relationships: !(0, runtime_1.exists)(json, "relationships") ? undefined : (0, GameCenterLeaderboardRelationships_1.GameCenterLeaderboardRelationshipsFromJSON)(json["relationships"]),
        links: !(0, runtime_1.exists)(json, "links") ? undefined : (0, ResourceLinks_1.ResourceLinksFromJSON)(json["links"])
    };
}
function GameCenterLeaderboardToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        type: value.type,
        id: value.id,
        attributes: (0, GameCenterLeaderboardAttributes_1.GameCenterLeaderboardAttributesToJSON)(value.attributes),
        relationships: (0, GameCenterLeaderboardRelationships_1.GameCenterLeaderboardRelationshipsToJSON)(value.relationships),
        links: (0, ResourceLinks_1.ResourceLinksToJSON)(value.links)
    };
}
