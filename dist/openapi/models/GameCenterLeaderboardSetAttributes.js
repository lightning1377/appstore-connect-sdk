"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGameCenterLeaderboardSetAttributes = instanceOfGameCenterLeaderboardSetAttributes;
exports.GameCenterLeaderboardSetAttributesFromJSON = GameCenterLeaderboardSetAttributesFromJSON;
exports.GameCenterLeaderboardSetAttributesFromJSONTyped = GameCenterLeaderboardSetAttributesFromJSONTyped;
exports.GameCenterLeaderboardSetAttributesToJSON = GameCenterLeaderboardSetAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the GameCenterLeaderboardSetAttributes interface.
 */
function instanceOfGameCenterLeaderboardSetAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function GameCenterLeaderboardSetAttributesFromJSON(json) {
    return GameCenterLeaderboardSetAttributesFromJSONTyped(json, false);
}
function GameCenterLeaderboardSetAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        referenceName: !(0, runtime_1.exists)(json, "referenceName") ? undefined : json["referenceName"],
        vendorIdentifier: !(0, runtime_1.exists)(json, "vendorIdentifier") ? undefined : json["vendorIdentifier"]
    };
}
function GameCenterLeaderboardSetAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        referenceName: value.referenceName,
        vendorIdentifier: value.vendorIdentifier
    };
}
