"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameCenterLeaderboardSetMemberLocalizationTypeEnum = void 0;
exports.instanceOfGameCenterLeaderboardSetMemberLocalization = instanceOfGameCenterLeaderboardSetMemberLocalization;
exports.GameCenterLeaderboardSetMemberLocalizationFromJSON = GameCenterLeaderboardSetMemberLocalizationFromJSON;
exports.GameCenterLeaderboardSetMemberLocalizationFromJSONTyped = GameCenterLeaderboardSetMemberLocalizationFromJSONTyped;
exports.GameCenterLeaderboardSetMemberLocalizationToJSON = GameCenterLeaderboardSetMemberLocalizationToJSON;
const runtime_1 = require("../runtime");
const GameCenterLeaderboardSetMemberLocalizationAttributes_1 = require("./GameCenterLeaderboardSetMemberLocalizationAttributes");
const GameCenterLeaderboardSetMemberLocalizationRelationships_1 = require("./GameCenterLeaderboardSetMemberLocalizationRelationships");
const ResourceLinks_1 = require("./ResourceLinks");
/**
 * @export
 */
exports.GameCenterLeaderboardSetMemberLocalizationTypeEnum = {
    GameCenterLeaderboardSetMemberLocalizations: "gameCenterLeaderboardSetMemberLocalizations"
};
/**
 * Check if a given object implements the GameCenterLeaderboardSetMemberLocalization interface.
 */
function instanceOfGameCenterLeaderboardSetMemberLocalization(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "id" in value;
    return isInstance;
}
function GameCenterLeaderboardSetMemberLocalizationFromJSON(json) {
    return GameCenterLeaderboardSetMemberLocalizationFromJSONTyped(json, false);
}
function GameCenterLeaderboardSetMemberLocalizationFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        type: json["type"],
        id: json["id"],
        attributes: !(0, runtime_1.exists)(json, "attributes") ? undefined : (0, GameCenterLeaderboardSetMemberLocalizationAttributes_1.GameCenterLeaderboardSetMemberLocalizationAttributesFromJSON)(json["attributes"]),
        relationships: !(0, runtime_1.exists)(json, "relationships") ? undefined : (0, GameCenterLeaderboardSetMemberLocalizationRelationships_1.GameCenterLeaderboardSetMemberLocalizationRelationshipsFromJSON)(json["relationships"]),
        links: !(0, runtime_1.exists)(json, "links") ? undefined : (0, ResourceLinks_1.ResourceLinksFromJSON)(json["links"])
    };
}
function GameCenterLeaderboardSetMemberLocalizationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        type: value.type,
        id: value.id,
        attributes: (0, GameCenterLeaderboardSetMemberLocalizationAttributes_1.GameCenterLeaderboardSetMemberLocalizationAttributesToJSON)(value.attributes),
        relationships: (0, GameCenterLeaderboardSetMemberLocalizationRelationships_1.GameCenterLeaderboardSetMemberLocalizationRelationshipsToJSON)(value.relationships),
        links: (0, ResourceLinks_1.ResourceLinksToJSON)(value.links)
    };
}
