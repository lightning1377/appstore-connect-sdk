"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGameCenterMatchmakingRuleUpdateRequestDataAttributes = instanceOfGameCenterMatchmakingRuleUpdateRequestDataAttributes;
exports.GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSON = GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSON;
exports.GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSONTyped = GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSONTyped;
exports.GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSON = GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the GameCenterMatchmakingRuleUpdateRequestDataAttributes interface.
 */
function instanceOfGameCenterMatchmakingRuleUpdateRequestDataAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSON(json) {
    return GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSONTyped(json, false);
}
function GameCenterMatchmakingRuleUpdateRequestDataAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        description: !(0, runtime_1.exists)(json, "description") ? undefined : json["description"],
        expression: !(0, runtime_1.exists)(json, "expression") ? undefined : json["expression"],
        weight: !(0, runtime_1.exists)(json, "weight") ? undefined : json["weight"]
    };
}
function GameCenterMatchmakingRuleUpdateRequestDataAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        description: value.description,
        expression: value.expression,
        weight: value.weight
    };
}
