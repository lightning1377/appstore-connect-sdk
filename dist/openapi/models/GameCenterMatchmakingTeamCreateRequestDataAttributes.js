"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfGameCenterMatchmakingTeamCreateRequestDataAttributes = instanceOfGameCenterMatchmakingTeamCreateRequestDataAttributes;
exports.GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSON = GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSON;
exports.GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSONTyped = GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSONTyped;
exports.GameCenterMatchmakingTeamCreateRequestDataAttributesToJSON = GameCenterMatchmakingTeamCreateRequestDataAttributesToJSON;
/**
 * Check if a given object implements the GameCenterMatchmakingTeamCreateRequestDataAttributes interface.
 */
function instanceOfGameCenterMatchmakingTeamCreateRequestDataAttributes(value) {
    let isInstance = true;
    isInstance = isInstance && "referenceName" in value;
    isInstance = isInstance && "minPlayers" in value;
    isInstance = isInstance && "maxPlayers" in value;
    return isInstance;
}
function GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSON(json) {
    return GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSONTyped(json, false);
}
function GameCenterMatchmakingTeamCreateRequestDataAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        referenceName: json["referenceName"],
        minPlayers: json["minPlayers"],
        maxPlayers: json["maxPlayers"]
    };
}
function GameCenterMatchmakingTeamCreateRequestDataAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        referenceName: value.referenceName,
        minPlayers: value.minPlayers,
        maxPlayers: value.maxPlayers
    };
}
