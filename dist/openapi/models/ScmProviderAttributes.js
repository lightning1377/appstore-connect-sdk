"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfScmProviderAttributes = instanceOfScmProviderAttributes;
exports.ScmProviderAttributesFromJSON = ScmProviderAttributesFromJSON;
exports.ScmProviderAttributesFromJSONTyped = ScmProviderAttributesFromJSONTyped;
exports.ScmProviderAttributesToJSON = ScmProviderAttributesToJSON;
const runtime_1 = require("../runtime");
const ScmProviderType_1 = require("./ScmProviderType");
/**
 * Check if a given object implements the ScmProviderAttributes interface.
 */
function instanceOfScmProviderAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function ScmProviderAttributesFromJSON(json) {
    return ScmProviderAttributesFromJSONTyped(json, false);
}
function ScmProviderAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        scmProviderType: !(0, runtime_1.exists)(json, "scmProviderType") ? undefined : (0, ScmProviderType_1.ScmProviderTypeFromJSON)(json["scmProviderType"]),
        url: !(0, runtime_1.exists)(json, "url") ? undefined : json["url"]
    };
}
function ScmProviderAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        scmProviderType: (0, ScmProviderType_1.ScmProviderTypeToJSON)(value.scmProviderType),
        url: value.url
    };
}
