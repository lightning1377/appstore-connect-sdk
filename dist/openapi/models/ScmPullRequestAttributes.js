"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfScmPullRequestAttributes = instanceOfScmPullRequestAttributes;
exports.ScmPullRequestAttributesFromJSON = ScmPullRequestAttributesFromJSON;
exports.ScmPullRequestAttributesFromJSONTyped = ScmPullRequestAttributesFromJSONTyped;
exports.ScmPullRequestAttributesToJSON = ScmPullRequestAttributesToJSON;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ScmPullRequestAttributes interface.
 */
function instanceOfScmPullRequestAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function ScmPullRequestAttributesFromJSON(json) {
    return ScmPullRequestAttributesFromJSONTyped(json, false);
}
function ScmPullRequestAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        title: !(0, runtime_1.exists)(json, "title") ? undefined : json["title"],
        number: !(0, runtime_1.exists)(json, "number") ? undefined : json["number"],
        webUrl: !(0, runtime_1.exists)(json, "webUrl") ? undefined : json["webUrl"],
        sourceRepositoryOwner: !(0, runtime_1.exists)(json, "sourceRepositoryOwner") ? undefined : json["sourceRepositoryOwner"],
        sourceRepositoryName: !(0, runtime_1.exists)(json, "sourceRepositoryName") ? undefined : json["sourceRepositoryName"],
        sourceBranchName: !(0, runtime_1.exists)(json, "sourceBranchName") ? undefined : json["sourceBranchName"],
        destinationRepositoryOwner: !(0, runtime_1.exists)(json, "destinationRepositoryOwner") ? undefined : json["destinationRepositoryOwner"],
        destinationRepositoryName: !(0, runtime_1.exists)(json, "destinationRepositoryName") ? undefined : json["destinationRepositoryName"],
        destinationBranchName: !(0, runtime_1.exists)(json, "destinationBranchName") ? undefined : json["destinationBranchName"],
        isClosed: !(0, runtime_1.exists)(json, "isClosed") ? undefined : json["isClosed"],
        isCrossRepository: !(0, runtime_1.exists)(json, "isCrossRepository") ? undefined : json["isCrossRepository"]
    };
}
function ScmPullRequestAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        title: value.title,
        number: value.number,
        webUrl: value.webUrl,
        sourceRepositoryOwner: value.sourceRepositoryOwner,
        sourceRepositoryName: value.sourceRepositoryName,
        sourceBranchName: value.sourceBranchName,
        destinationRepositoryOwner: value.destinationRepositoryOwner,
        destinationRepositoryName: value.destinationRepositoryName,
        destinationBranchName: value.destinationBranchName,
        isClosed: value.isClosed,
        isCrossRepository: value.isCrossRepository
    };
}
