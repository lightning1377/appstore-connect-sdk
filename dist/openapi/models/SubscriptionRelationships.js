"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSubscriptionRelationships = instanceOfSubscriptionRelationships;
exports.SubscriptionRelationshipsFromJSON = SubscriptionRelationshipsFromJSON;
exports.SubscriptionRelationshipsFromJSONTyped = SubscriptionRelationshipsFromJSONTyped;
exports.SubscriptionRelationshipsToJSON = SubscriptionRelationshipsToJSON;
const runtime_1 = require("../runtime");
const InAppPurchaseV2RelationshipsPromotedPurchase_1 = require("./InAppPurchaseV2RelationshipsPromotedPurchase");
const SubscriptionGroupLocalizationRelationshipsSubscriptionGroup_1 = require("./SubscriptionGroupLocalizationRelationshipsSubscriptionGroup");
const SubscriptionRelationshipsAppStoreReviewScreenshot_1 = require("./SubscriptionRelationshipsAppStoreReviewScreenshot");
const SubscriptionRelationshipsIntroductoryOffers_1 = require("./SubscriptionRelationshipsIntroductoryOffers");
const SubscriptionRelationshipsOfferCodes_1 = require("./SubscriptionRelationshipsOfferCodes");
const SubscriptionRelationshipsPrices_1 = require("./SubscriptionRelationshipsPrices");
const SubscriptionRelationshipsPromotionalOffers_1 = require("./SubscriptionRelationshipsPromotionalOffers");
const SubscriptionRelationshipsSubscriptionAvailability_1 = require("./SubscriptionRelationshipsSubscriptionAvailability");
const SubscriptionRelationshipsSubscriptionLocalizations_1 = require("./SubscriptionRelationshipsSubscriptionLocalizations");
/**
 * Check if a given object implements the SubscriptionRelationships interface.
 */
function instanceOfSubscriptionRelationships(value) {
    let isInstance = true;
    return isInstance;
}
function SubscriptionRelationshipsFromJSON(json) {
    return SubscriptionRelationshipsFromJSONTyped(json, false);
}
function SubscriptionRelationshipsFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        subscriptionLocalizations: !(0, runtime_1.exists)(json, "subscriptionLocalizations") ? undefined : (0, SubscriptionRelationshipsSubscriptionLocalizations_1.SubscriptionRelationshipsSubscriptionLocalizationsFromJSON)(json["subscriptionLocalizations"]),
        appStoreReviewScreenshot: !(0, runtime_1.exists)(json, "appStoreReviewScreenshot") ? undefined : (0, SubscriptionRelationshipsAppStoreReviewScreenshot_1.SubscriptionRelationshipsAppStoreReviewScreenshotFromJSON)(json["appStoreReviewScreenshot"]),
        group: !(0, runtime_1.exists)(json, "group") ? undefined : (0, SubscriptionGroupLocalizationRelationshipsSubscriptionGroup_1.SubscriptionGroupLocalizationRelationshipsSubscriptionGroupFromJSON)(json["group"]),
        introductoryOffers: !(0, runtime_1.exists)(json, "introductoryOffers") ? undefined : (0, SubscriptionRelationshipsIntroductoryOffers_1.SubscriptionRelationshipsIntroductoryOffersFromJSON)(json["introductoryOffers"]),
        promotionalOffers: !(0, runtime_1.exists)(json, "promotionalOffers") ? undefined : (0, SubscriptionRelationshipsPromotionalOffers_1.SubscriptionRelationshipsPromotionalOffersFromJSON)(json["promotionalOffers"]),
        offerCodes: !(0, runtime_1.exists)(json, "offerCodes") ? undefined : (0, SubscriptionRelationshipsOfferCodes_1.SubscriptionRelationshipsOfferCodesFromJSON)(json["offerCodes"]),
        prices: !(0, runtime_1.exists)(json, "prices") ? undefined : (0, SubscriptionRelationshipsPrices_1.SubscriptionRelationshipsPricesFromJSON)(json["prices"]),
        promotedPurchase: !(0, runtime_1.exists)(json, "promotedPurchase") ? undefined : (0, InAppPurchaseV2RelationshipsPromotedPurchase_1.InAppPurchaseV2RelationshipsPromotedPurchaseFromJSON)(json["promotedPurchase"]),
        subscriptionAvailability: !(0, runtime_1.exists)(json, "subscriptionAvailability") ? undefined : (0, SubscriptionRelationshipsSubscriptionAvailability_1.SubscriptionRelationshipsSubscriptionAvailabilityFromJSON)(json["subscriptionAvailability"])
    };
}
function SubscriptionRelationshipsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        subscriptionLocalizations: (0, SubscriptionRelationshipsSubscriptionLocalizations_1.SubscriptionRelationshipsSubscriptionLocalizationsToJSON)(value.subscriptionLocalizations),
        appStoreReviewScreenshot: (0, SubscriptionRelationshipsAppStoreReviewScreenshot_1.SubscriptionRelationshipsAppStoreReviewScreenshotToJSON)(value.appStoreReviewScreenshot),
        group: (0, SubscriptionGroupLocalizationRelationshipsSubscriptionGroup_1.SubscriptionGroupLocalizationRelationshipsSubscriptionGroupToJSON)(value.group),
        introductoryOffers: (0, SubscriptionRelationshipsIntroductoryOffers_1.SubscriptionRelationshipsIntroductoryOffersToJSON)(value.introductoryOffers),
        promotionalOffers: (0, SubscriptionRelationshipsPromotionalOffers_1.SubscriptionRelationshipsPromotionalOffersToJSON)(value.promotionalOffers),
        offerCodes: (0, SubscriptionRelationshipsOfferCodes_1.SubscriptionRelationshipsOfferCodesToJSON)(value.offerCodes),
        prices: (0, SubscriptionRelationshipsPrices_1.SubscriptionRelationshipsPricesToJSON)(value.prices),
        promotedPurchase: (0, InAppPurchaseV2RelationshipsPromotedPurchase_1.InAppPurchaseV2RelationshipsPromotedPurchaseToJSON)(value.promotedPurchase),
        subscriptionAvailability: (0, SubscriptionRelationshipsSubscriptionAvailability_1.SubscriptionRelationshipsSubscriptionAvailabilityToJSON)(value.subscriptionAvailability)
    };
}
