"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfUploadOperation = instanceOfUploadOperation;
exports.UploadOperationFromJSON = UploadOperationFromJSON;
exports.UploadOperationFromJSONTyped = UploadOperationFromJSONTyped;
exports.UploadOperationToJSON = UploadOperationToJSON;
const runtime_1 = require("../runtime");
const HttpHeader_1 = require("./HttpHeader");
/**
 * Check if a given object implements the UploadOperation interface.
 */
function instanceOfUploadOperation(value) {
    let isInstance = true;
    return isInstance;
}
function UploadOperationFromJSON(json) {
    return UploadOperationFromJSONTyped(json, false);
}
function UploadOperationFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        method: !(0, runtime_1.exists)(json, "method") ? undefined : json["method"],
        url: !(0, runtime_1.exists)(json, "url") ? undefined : json["url"],
        length: !(0, runtime_1.exists)(json, "length") ? undefined : json["length"],
        offset: !(0, runtime_1.exists)(json, "offset") ? undefined : json["offset"],
        requestHeaders: !(0, runtime_1.exists)(json, "requestHeaders") ? undefined : json["requestHeaders"].map(HttpHeader_1.HttpHeaderFromJSON)
    };
}
function UploadOperationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        method: value.method,
        url: value.url,
        length: value.length,
        offset: value.offset,
        requestHeaders: value.requestHeaders === undefined ? undefined : value.requestHeaders.map(HttpHeader_1.HttpHeaderToJSON)
    };
}
