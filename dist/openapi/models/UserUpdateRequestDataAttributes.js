"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfUserUpdateRequestDataAttributes = instanceOfUserUpdateRequestDataAttributes;
exports.UserUpdateRequestDataAttributesFromJSON = UserUpdateRequestDataAttributesFromJSON;
exports.UserUpdateRequestDataAttributesFromJSONTyped = UserUpdateRequestDataAttributesFromJSONTyped;
exports.UserUpdateRequestDataAttributesToJSON = UserUpdateRequestDataAttributesToJSON;
const runtime_1 = require("../runtime");
const UserRole_1 = require("./UserRole");
/**
 * Check if a given object implements the UserUpdateRequestDataAttributes interface.
 */
function instanceOfUserUpdateRequestDataAttributes(value) {
    let isInstance = true;
    return isInstance;
}
function UserUpdateRequestDataAttributesFromJSON(json) {
    return UserUpdateRequestDataAttributesFromJSONTyped(json, false);
}
function UserUpdateRequestDataAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        roles: !(0, runtime_1.exists)(json, "roles") ? undefined : json["roles"].map(UserRole_1.UserRoleFromJSON),
        allAppsVisible: !(0, runtime_1.exists)(json, "allAppsVisible") ? undefined : json["allAppsVisible"],
        provisioningAllowed: !(0, runtime_1.exists)(json, "provisioningAllowed") ? undefined : json["provisioningAllowed"]
    };
}
function UserUpdateRequestDataAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        roles: value.roles === undefined ? undefined : value.roles.map(UserRole_1.UserRoleToJSON),
        allAppsVisible: value.allAppsVisible,
        provisioningAllowed: value.provisioningAllowed
    };
}
