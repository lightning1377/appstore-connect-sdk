"use strict";
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfXcodeMetricsInsights = instanceOfXcodeMetricsInsights;
exports.XcodeMetricsInsightsFromJSON = XcodeMetricsInsightsFromJSON;
exports.XcodeMetricsInsightsFromJSONTyped = XcodeMetricsInsightsFromJSONTyped;
exports.XcodeMetricsInsightsToJSON = XcodeMetricsInsightsToJSON;
const runtime_1 = require("../runtime");
const MetricsInsight_1 = require("./MetricsInsight");
/**
 * Check if a given object implements the XcodeMetricsInsights interface.
 */
function instanceOfXcodeMetricsInsights(value) {
    let isInstance = true;
    return isInstance;
}
function XcodeMetricsInsightsFromJSON(json) {
    return XcodeMetricsInsightsFromJSONTyped(json, false);
}
function XcodeMetricsInsightsFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        trendingUp: !(0, runtime_1.exists)(json, "trendingUp") ? undefined : json["trendingUp"].map(MetricsInsight_1.MetricsInsightFromJSON),
        regressions: !(0, runtime_1.exists)(json, "regressions") ? undefined : json["regressions"].map(MetricsInsight_1.MetricsInsightFromJSON)
    };
}
function XcodeMetricsInsightsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        trendingUp: value.trendingUp === undefined ? undefined : value.trendingUp.map(MetricsInsight_1.MetricsInsightToJSON),
        regressions: value.regressions === undefined ? undefined : value.regressions.map(MetricsInsight_1.MetricsInsightToJSON)
    };
}
